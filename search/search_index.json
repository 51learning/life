{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u5173\u8bf4Home\u5185\u5bb9\u7684\u8bf4\u660e","text":""},{"location":"#_1","title":"\u8bf4\u660e\u53ca\u89c4\u5212","text":"<p>\u4e3a\u4e86\u91cd\u65b0\u6784\u5efa\u77e5\u8bc6\u4f53\u7cfb\uff0c\u6362\u7528\u4e86\u65b0\u7684\u7cfb\u7edf\u6765\u7ba1\u7406\u65e5\u5e38\u603b\u7ed3\u548c\u8bb0\u5f55\u7684\u4e00\u4e9b\u6587\u6863\u5185\u5bb9\uff0c\u540e\u7eed\u4f1a\u5728<code>Home</code>\u9875\u4e0b\u5c06\u5bf9\u5e94\u7684\u5404\u4e2a\u7cfb\u5217\u7684\u5185\u5bb9\u4ee5\u4e66\u67b6\u7684\u5f62\u5f0f\u505a\u4e00\u4e2a\u6c47\u603b\u5c55\u793a\u3002\u5f53\u7136\u73b0\u5728\u7ba1\u7406\u77e5\u8bc6\u4f53\u7cfb\u7684\u9009\u62e9\u6027\u975e\u5e38\u591a\uff0c\u5982\u4e0b\u5217\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u4e00\u4e9b\u7ad9\u70b9\u7ba1\u7406\u7a0b\u5e8f\u3002</p> <ul> <li>Hugo\uff1a\u4e00\u4e2a\u57fa\u4e8e Go \u8bed\u8a00\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u5177\u6709\u5f3a\u5927\u7684\u6a21\u677f\u529f\u80fd\u548c\u4e30\u5bcc\u7684\u63d2\u4ef6\u751f\u6001\u7cfb\u7edf</li> <li>Jekyll\uff1a\u4e00\u4e2a\u57fa\u4e8e Ruby \u8bed\u8a00\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u5177\u6709\u7b80\u5355\u6613\u7528\u7684\u8bed\u6cd5\u548c\u4e30\u5bcc\u7684\u4e3b\u9898\u9009\u62e9</li> <li>mkdocs: mkdocs \u662f\u4e00\u4e2a\u7528 Python \u8bed\u8a00\u7f16\u5199\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u5b83\u4e13\u6ce8\u4e8e\u5f00\u53d1\u6587\u6863\u7f51\u7ad9</li> <li>Gatsby\uff1a\u4e00\u4e2a\u57fa\u4e8e React \u6846\u67b6\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u5177\u6709\u9ad8\u6027\u80fd\u548c\u4e30\u5bcc\u7684\u529f\u80fd</li> <li>Nuxt.js\uff1a\u4e00\u4e2a\u57fa\u4e8e Vue.js \u6846\u67b6\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u5177\u6709\u6a21\u5757\u5316\u548c\u7075\u6d3b\u7684\u67b6\u6784</li> <li>Eleventy\uff1a\u4e00\u4e2a\u57fa\u4e8e JavaScript \u8bed\u8a00\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u5177\u6709\u7b80\u5355\u6613\u7528\u7684\u8bed\u6cd5\u548c\u4e30\u5bcc\u7684\u63d2\u4ef6\u751f\u6001\u7cfb\u7edf\u3002</li> <li>Sapper\uff1aSapper \u662f\u4e00\u4e2a\u57fa\u4e8e React \u7684\u6846\u67b6\uff0c\u53ef\u7528\u4e8e\u6784\u5efa\u9759\u6001\u548c\u52a8\u6001\u7f51\u7ad9</li> <li>Next.js\uff1aNext.js \u662f\u4e00\u4e2a\u57fa\u4e8e React \u7684 SSG\uff0c\u5177\u6709\u8bb8\u591a\u9ad8\u7ea7\u529f\u80fd\uff0c\u5982\u670d\u52a1\u7aef\u6e32\u67d3 (SSR)\u3001\u9759\u6001\u7ad9\u70b9\u751f\u6210 (SSG) \u548c\u9884\u6e32\u67d3 (Prerendering)</li> <li>Middleman\uff1aMiddleman \u662f\u4e00\u4e2a\u7528 Ruby \u8bed\u8a00\u7f16\u5199\u7684\u5f00\u6e90\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\u3002\u5b83\u5177\u6709\u5feb\u901f\u3001\u7075\u6d3b\u548c\u53ef\u5b9a\u5236\u6027\u5f3a\u7b49\u7279\u70b9\uff0c\u9002\u5408\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u3002</li> <li>Pelican\uff1aPelican \u662f\u4e00\u4e2a\u7528 Python \u8bed\u8a00\u7f16\u5199\u7684\u5f00\u6e90\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\u3002\u5b83\u5177\u6709\u7b80\u5355\u6613\u7528\u3001\u652f\u6301\u591a\u79cd\u4e3b\u9898\u548c\u63d2\u4ef6\u7b49\u7279\u70b9\uff0c\u9002\u5408\u521d\u5b66\u8005\u4f7f\u7528</li> <li>Docusaurus\uff1aDocusaurus \u662f\u4e00\u4e2a\u7528 React \u8bed\u8a00\u7f16\u5199\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u5b83\u4e13\u6ce8\u4e8e\u5f00\u53d1\u6587\u6863\u7f51\u7ad9\u3002Docusaurus \u4f7f\u7528 Markdown \u683c\u5f0f\u6765\u7f16\u5199\u5185\u5bb9\uff0c\u56e0\u6b64\u60a8\u65e0\u9700\u7f16\u5199\u4efb\u4f55 HTML \u6216 CSS</li> <li>Vuepress\uff1aVuepress \u662f\u4e00\u4e2a\u7528 Vue.js \u8bed\u8a00\u7f16\u5199\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u5b83\u4e13\u6ce8\u4e8e\u5f00\u53d1\u6587\u6863\u7f51\u7ad9\u3002Vuepress \u4f7f\u7528 Markdown \u683c\u5f0f\u6765\u7f16\u5199\u5185\u5bb9\uff0c\u56e0\u6b64\u60a8\u65e0\u9700\u7f16\u5199\u4efb\u4f55 HTML \u6216 CSS</li> <li>Sphinx\uff1aSphinx \u662f\u4e00\u4e2a\u7528 Python \u8bed\u8a00\u7f16\u5199\u7684\u6587\u6863\u751f\u6210\u5668\uff0c\u5b83\u53ef\u4ee5\u751f\u6210\u9759\u6001\u7f51\u7ad9\u3001PDF \u6587\u6863\u3001\u7535\u5b50\u4e66\u7b49\u3002Sphinx \u4f7f\u7528 reStructuredText \u683c\u5f0f\u6765\u7f16\u5199\u5185\u5bb9\uff0c\u56e0\u6b64\u60a8\u65e0\u9700\u7f16\u5199\u4efb\u4f55 HTML \u6216 CSS</li> <li>gitbook: \u662f\u4e00\u4e2a\u7528 Ruby \u8bed\u8a00\u7f16\u5199\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u5b83\u4e13\u6ce8\u4e8e\u5f00\u53d1\u6587\u6863\u7f51\u7ad9\u3002gitbook \u4f7f\u7528 Markdown \u683c\u5f0f\u6765\u7f16\u5199\u5185\u5bb9\uff0c\u56e0\u6b64\u60a8\u65e0\u9700\u7f16\u5199\u4efb\u4f55 HTML \u6216 CSS\u3002gitbook \u8fd8\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u4e3b\u9898\u548c\u63d2\u4ef6\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u521b\u5efa\u6f02\u4eae\u7684\u7f51\u7ad9(\u5df2\u95ed\u6e90)</li> <li>mdbook: \u662f\u4e00\u4e2a\u7528 Rust \u8bed\u8a00\u7f16\u5199\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u5b83\u652f\u6301\u591a\u79cd\u6587\u672c\u683c\u5f0f\uff0c\u5305\u62ec Markdown\u3001YAML\u3001JSON \u7b49\u3002mdbook \u8fd8\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u63d2\u4ef6\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u6dfb\u52a0\u5404\u79cd\u529f\u80fd\u5230\u60a8\u7684\u7f51\u7ad9</li> </ul>"},{"location":"#cms","title":"\u4f20\u7edfCMS","text":"<p>wordpress\uff1awordpress \u662f\u4e00\u4e2a\u7528 PHP \u8bed\u8a00\u7f16\u5199\u7684 CMS\uff0c\u5b83\u5177\u6709\u5f3a\u5927\u7684\u529f\u80fd\u548c\u53ef\u6269\u5c55\u6027 Drupal\uff1aDrupal \u662f\u4e00\u4e2a\u7528 PHP \u8bed\u8a00\u7f16\u5199\u7684 CMS\uff0c\u5b83\u5177\u6709\u5f3a\u5927\u7684\u529f\u80fd\u548c\u53ef\u6269\u5c55\u6027 Joomla\uff1aJoomla \u662f\u4e00\u4e2a\u7528 PHP \u8bed\u8a00\u7f16\u5199\u7684 CMS\uff0c\u5b83\u5177\u6709\u6613\u4e8e\u4f7f\u7528\u548c\u7075\u6d3b\u6027 Ghost\uff1aGhost \u662f\u4e00\u4e2a\u7528 Node.js \u8bed\u8a00\u7f16\u5199\u7684 CMS\uff0c\u5b83\u4e13\u6ce8\u4e8e\u535a\u5ba2</p>"},{"location":"#_2","title":"\u57fa\u4e8e\u4e91\u7684\u6587\u6863\u7ba1\u7406\u5e73\u53f0","text":"<ul> <li>Webflow\uff1aWebflow \u662f\u4e00\u4e2a\u57fa\u4e8e\u4e91\u7684\u65e0\u4ee3\u7801\u5e73\u53f0\uff0c\u5b83\u5177\u6709\u5f3a\u5927\u7684\u529f\u80fd\u548c\u53ef\u89c6\u5316\u754c\u9762</li> <li>Squarespace\uff1aSquarespace \u662f\u4e00\u4e2a\u57fa\u4e8e\u4e91\u7684\u65e0\u4ee3\u7801\u5e73\u53f0\uff0c\u5b83\u5177\u6709\u6613\u4e8e\u4f7f\u7528\u548c\u7f8e\u89c2\u7684\u8bbe\u8ba1</li> <li>Wix\uff1aWix \u662f\u4e00\u4e2a\u57fa\u4e8e\u4e91\u7684\u65e0\u4ee3\u7801\u5e73\u53f0\uff0c\u5b83\u5177\u6709\u5927\u91cf\u7684\u6a21\u677f\u548c\u529f\u80fd</li> </ul>"},{"location":"#_3","title":"\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668","text":"<p>Jekyll\uff1aJekyll \u662f\u4e00\u4e2a\u7528 Ruby \u8bed\u8a00\u7f16\u5199\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u5b83\u975e\u5e38\u6613\u4e8e\u4f7f\u7528 Hugo\uff1aHugo \u662f\u4e00\u4e2a\u7528 Go \u8bed\u8a00\u7f16\u5199\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u5b83\u4ee5\u5176\u901f\u5ea6\u548c\u7075\u6d3b\u6027\u800c\u95fb\u540d Hexo\uff1aHexo \u662f\u4e00\u4e2a\u7528 Node.js \u8bed\u8a00\u7f16\u5199\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u5b83\u5177\u6709\u5f3a\u5927\u7684\u6269\u5c55\u6027</p>"},{"location":"cloudnative/00-contents/","title":"content","text":""},{"location":"cloudnative/00-contents/#a-create-cce-cluster","title":"A. create CCE cluster","text":"<ol> <li>step by step on console</li> <li>Use Terraform</li> <li>Use Huaweicloud Cli tool</li> <li>SWR Container Registry</li> </ol>"},{"location":"cloudnative/00-contents/#b-how-to-deploy-an-application-from-code-to-cce","title":"B. How to deploy an application from code to CCE","text":"<p>CodeArts + CCE </p>"},{"location":"cloudnative/00-contents/#c-introduce-the-network","title":"C. Introduce the network","text":"<ol> <li>Service</li> <li>Ingress</li> </ol>"},{"location":"cloudnative/00-contents/#d-autoscale","title":"D. Autoscale","text":"<ol> <li>HPA (inclusion CCE to CCI)</li> <li>CA</li> </ol>"},{"location":"cloudnative/00-contents/#e-backup-and-disaster-recovery","title":"E. Backup and disaster recovery","text":"<p>velero backup and restore UCS</p>"},{"location":"cloudnative/00-contents/#f-monitor","title":"F. Monitor","text":"<p>AOM  Prometheus opentelemetry</p>"},{"location":"cloudnative/00-contents/#g-apig","title":"G. APIG","text":""},{"location":"cloudnative/01-terraform-createcce/","title":"terraform","text":"<p>Note</p> <p>Note: In the case of high availability, select a node with a relatively large instance. (The corresponding node size does not cause a large waste of resources.)</p> <p>The following extra overheads are required on each node. If these overheads are excluded, the real service workload is running.</p> <ol> <li>Operating system</li> <li>kubelet and kube-proxy</li> <li>Docker or other container runtime service</li> </ol> <p>k8s architecture</p> <p>When creating a cluster, you can determine the cluster scale based on the actual project load and resource usage.</p>"},{"location":"cloudnative/01-terraform-createcce/#1-terraform-create-cce-cluster","title":"1. Terraform Create CCE cluster","text":""},{"location":"cloudnative/01-terraform-createcce/#terraform-code","title":"Terraform Code","text":"<p>versions.tf</p> <pre><code>terraform {\n  required_providers {\n    huaweicloud = {\n      source  = \"huaweicloud/huaweicloud\"\n      version = \"&gt;= 1.36.0\"\n    }\n  }\n}\n</code></pre> <p>variables.tf</p> <pre><code>variable \"name\" {\n  description = \"Name of the cce cluster\"\n}\n\nvariable \"flavor_id\" {\n  description = \"Flavor of the cce cluster\"\n  default     = \"cce.s1.small\"\n}\n\nvariable \"vpc_id\" {\n  description = \"Id of the vpc\"\n}\n\nvariable \"subnet_id\" {\n  description = \"Id of the subnet\"\n}\n\nvariable \"node_pool\" {\n  description = \"cce node pool feature\"\n  default = {\n    simple = {\n      name      = \"generic\"\n      os        = \"EulerOS 2.5\"\n      flavor_id = \"s6.large.2\"\n    }\n  }\n}\n\nvariable \"node_pool_key_pair\" {\n  description = \"public ssh key of cce node pool\"\n}\n</code></pre> <p>main.tf</p> <p>Modify the AK/SK information to the actual Information</p> <pre><code>provider \"huaweicloud\" {\n  region     = \"sa-brazil-1\"\n  access_key = \"your ak\"\n  secret_key = \"you sk\"\n}\n\nresource \"huaweicloud_cce_cluster\" \"this\" {\n  name                   = var.name\n  flavor_id              = var.flavor_id\n  vpc_id                 = var.vpc_id\n  subnet_id              = var.subnet_id\n  multi_az               = false\n  container_network_type = \"overlay_l2\"\n}\n\nresource \"huaweicloud_cce_node_pool\" \"this\" {\n  for_each          = var.node_pool\n  name              = each.value.name\n  os                = each.value.os\n  flavor_id         = each.value.flavor_id\n  availability_zone = try(each.value.availability_zone, \"random\")\n\n  scall_enable             = try(each.value.scall_enable, false)\n  initial_node_count       = try(each.value.initial_node_count, 1)\n  min_node_count           = try(each.value.min_node_count, 0)\n  max_node_count           = try(each.value.max_node_count, 0)\n  scale_down_cooldown_time = try(each.value.scale_down_cooldown_time, 0)\n  priority                 = try(each.value.priority, 0)\n\n  cluster_id = huaweicloud_cce_cluster.this.id\n  key_pair   = var.node_pool_key_pair\n  type       = \"vm\"\n\n\n  root_volume {\n    size       = 40\n    volumetype = \"SAS\"\n  }\n  data_volumes {\n    size       = 100\n    volumetype = \"SAS\"\n  }\n}\n</code></pre>"},{"location":"cloudnative/01-terraform-createcce/#create-cluster-and-node-use-terraform","title":"Create Cluster and Node use Terraform","text":"<p>We can create the VPC,subenet,sskey in advance, And we can create use terraform also. </p> <ul> <li>vpcid  5269e46b-9bac-495d-bdf8-072589e2a572</li> <li>subnetid 7a20b2d5-f879-4a5b-919b-e0456364a2cd</li> <li>key testkey</li> </ul> <p>Initialization</p> <p>If you use it for the first time, you need to initialize for download provider plugins.</p> <p></p> <pre><code>PS D:\\soft\\hashicorp\\cce-create&gt; ..\\terraform.exe apply\nvar.name\n  Name of the cce cluster\n\n  Enter a value: cceculster01\n\nvar.node_pool_key_pair\n  public ssh key of cce node pool\n\n  Enter a value: testkey\n\nvar.subnet_id\n  Id of the subnet\n\n  Enter a value: 7a20b2d5-f879-4a5b-919b-e0456364a2cd\n\nvar.vpc_id\n  Id of the vpc\n\n  Enter a value: 5269e46b-9bac-495d-bdf8-072589e2a572\n\n\nTerraform used the selected providers to generate the following execution plan. Resource actions are indicated with the\nfollowing symbols:\n  + create\n\nTerraform will perform the following actions:\n\n  # huaweicloud_cce_cluster.this will be created\n  + resource \"huaweicloud_cce_cluster\" \"this\" {\n      + authentication_mode    = \"rbac\"\n      + billing_mode           = (known after apply)\n      + certificate_clusters   = (known after apply)\n      + certificate_users      = (known after apply)\n      + charging_mode          = (known after apply)\n      + cluster_type           = \"VirtualMachine\"\n      + cluster_version        = (known after apply)\n      + container_network_cidr = (known after apply)\n      + container_network_type = \"overlay_l2\"\n      + description            = (known after apply)\n      + eni_subnet_cidr        = (known after apply)\n      + eni_subnet_id          = (known after apply)\n      + enterprise_project_id  = (known after apply)\n      + flavor_id              = \"cce.s1.small\"\n      + highway_subnet_id      = (known after apply)\n      + id                     = (known after apply)\n      + kube_config_raw        = (known after apply)\n      + multi_az               = false\n      + name                   = \"cceculster01\"\n      + region                 = (known after apply)\n      + security_group_id      = (known after apply)\n      + service_network_cidr   = (known after apply)\n      + status                 = (known after apply)\n      + subnet_id              = \"7a20b2d5-f879-4a5b-919b-e0456364a2cd\"\n      + vpc_id                 = \"5269e46b-9bac-495d-bdf8-072589e2a572\"\n\n      + masters {\n          + availability_zone = (known after apply)\n        }\n    }\n\n  # huaweicloud_cce_node_pool.this[\"simple\"] will be created\n  + resource \"huaweicloud_cce_node_pool\" \"this\" {\n      + availability_zone        = \"random\"\n      + billing_mode             = (known after apply)\n      + charging_mode            = (known after apply)\n      + cluster_id               = (known after apply)\n      + current_node_count       = (known after apply)\n      + flavor_id                = \"s6.large.2\"\n      + id                       = (known after apply)\n      + initial_node_count       = 1\n      + initialized_conditions   = (known after apply)\n      + key_pair                 = \"testkey\"\n      + max_node_count           = 0\n      + max_pods                 = (known after apply)\n      + min_node_count           = 0\n      + name                     = \"generic\"\n      + os                       = \"EulerOS 2.5\"\n      + priority                 = 0\n      + region                   = (known after apply)\n      + runtime                  = (known after apply)\n      + scale_down_cooldown_time = 0\n      + scall_enable             = false\n      + security_groups          = (known after apply)\n      + status                   = (known after apply)\n      + type                     = \"vm\"\n\n      + data_volumes {\n          + dss_pool_id = (known after apply)\n          + kms_key_id  = (known after apply)\n          + size        = 100\n          + volumetype  = \"SAS\"\n        }\n\n      + root_volume {\n          + dss_pool_id = (known after apply)\n          + kms_key_id  = (known after apply)\n          + size        = 40\n          + volumetype  = \"SAS\"\n        }\n\n      + storage {\n          + groups {\n              + cce_managed    = (known after apply)\n              + name           = (known after apply)\n              + selector_names = (known after apply)\n\n              + virtual_spaces {\n                  + lvm_lv_type     = (known after apply)\n                  + lvm_path        = (known after apply)\n                  + name            = (known after apply)\n                  + runtime_lv_type = (known after apply)\n                  + size            = (known after apply)\n                }\n            }\n\n          + selectors {\n              + match_label_count              = (known after apply)\n              + match_label_metadata_cmkid     = (known after apply)\n              + match_label_metadata_encrypted = (known after apply)\n              + match_label_size               = (known after apply)\n              + match_label_volume_type        = (known after apply)\n              + name                           = (known after apply)\n              + type                           = (known after apply)\n            }\n        }\n    }\n\nPlan: 2 to add, 0 to change, 0 to destroy.\n\nChanges to Outputs:\n  + certificate_clusters = (known after apply)\n  + certificate_users    = (known after apply)\n  + kubeconfig           = (known after apply)\n\nDo you want to perform these actions?\n  Terraform will perform the actions described above.\n  Only 'yes' will be accepted to approve.\n\n  Enter a value: yes\n\nhuaweicloud_cce_cluster.this: Creating...\nhuaweicloud_cce_cluster.this: Still creating... [10s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [20s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [30s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [40s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [50s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [1m0s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [1m10s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [1m20s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [1m30s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [1m40s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [1m50s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [2m0s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [2m10s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [2m20s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [2m30s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [2m40s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [2m50s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [3m0s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [3m10s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [3m20s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [3m30s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [3m40s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [3m50s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [4m0s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [4m10s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [4m20s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [4m31s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [4m41s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [4m51s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [5m1s elapsed]\nhuaweicloud_cce_cluster.this: Still creating... [5m11s elapsed]\nhuaweicloud_cce_cluster.this: Creation complete after 5m19s [id=8f979fa0-434a-11ee-acab-0255ac100099]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Creating...\nhuaweicloud_cce_node_pool.this[\"simple\"]: Still creating... [10s elapsed]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Still creating... [20s elapsed]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Still creating... [30s elapsed]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Still creating... [40s elapsed]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Still creating... [50s elapsed]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Still creating... [1m0s elapsed]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Still creating... [1m10s elapsed]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Still creating... [1m20s elapsed]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Still creating... [1m30s elapsed]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Still creating... [1m40s elapsed]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Still creating... [1m50s elapsed]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Still creating... [2m0s elapsed]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Still creating... [2m10s elapsed]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Still creating... [2m20s elapsed]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Still creating... [2m30s elapsed]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Still creating... [2m40s elapsed]\nhuaweicloud_cce_node_pool.this[\"simple\"]: Creation complete after 2m48s [id=4f95a70d-434b-11ee-acab-0255ac100099]\n\nApply complete! Resources: 2 added, 0 changed, 0 destroyed.\n</code></pre> <p></p> <p></p>"},{"location":"cloudnative/01-terraform-createcce/#2-reference-document","title":"2. Reference Document","text":"<p>github huaweicloud terraform</p> <p>Huaweicloud Offical document</p>"},{"location":"cloudnative/01-terraform-createcce/#requirements","title":"Requirements","text":"Name Version huaweicloud 1.31.0"},{"location":"cloudnative/01-terraform-createcce/#providers","title":"Providers","text":"Name Version huaweicloud 1.31.0"},{"location":"cloudnative/01-terraform-createcce/#modules","title":"Modules","text":"<p>No modules.</p>"},{"location":"cloudnative/01-terraform-createcce/#resources","title":"Resources","text":"Name Type huaweicloud_cce_addon.ingress resource huaweicloud_cce_addon.metrics resource huaweicloud_cce_cluster.this resource huaweicloud_cce_node_pool.this resource huaweicloud_cce_addon_template.ingress data source"},{"location":"cloudnative/01-terraform-createcce/#inputs","title":"Inputs","text":"Name Description Type Default Required addon_ingress_config nginx config for nginx-ingress addon <code>map(any)</code> <code>{}</code> no addon_ingress_enable If you need nginx-ingress addon <code>bool</code> <code>false</code> no addon_ingress_loadbalancer_ip Load balancer ip for nginx-ingress addon <code>string</code> <code>\"\"</code> no addon_ingress_resource nginx resource for nginx-ingress addon <code>map(any)</code> <pre>{  \"limitsCpu\": \"1024m\",  \"limitsMem\": \"1024Mi\",  \"name\": \"nginx-ingress\",  \"requestsCpu\": \"256m\",  \"requestsMem\": \"256Mi\"}</pre> no flavor_id Flavor of the cce cluster <code>string</code> <code>\"cce.s2.small\"</code> no name Name of the cce cluster <code>any</code> n/a yes node_pool cce node pool feature <code>map</code> <pre>{  \"simple\": {    \"flavor_id\": \"s3.large.4\",    \"name\": \"generic\",    \"os\": \"EulerOS 2.5\"  }}</pre> no node_pool_key_pair public ssh key of cce node pool <code>any</code> n/a yes subnet_id Id of the subnet <code>any</code> n/a yes vpc_id Id of the vpc <code>any</code> n/a yes"},{"location":"cloudnative/01-terraform-createcce/#outputs","title":"Outputs","text":"Name Description certificate_clusters certificate of cce cluster certificate_users certificate users of cce cluster kubeconfig kubeconfig file of cce cluster"},{"location":"cloudnative/01-terraform-createcce/#3-another-good-choice","title":"3. Another good choice","text":"<pre><code>hcloud CCE CreateCluster --cli-region=\"sa-brazil-1\" --Content-Type=\"application/json\" --metadata.name=\"ccetest\" --apiVersion=\"v3\" --kind=\"Cluster\" --spec.flavor=\"cce.s2.small\" --spec.hostNetwork.subnet=\"7a20b2d5-f879-4a5b-919b-e0456364a2cd\" --spec.hostNetwork.vpc=\"5269e46b-9bac-495d-bdf8-072589e2a572\" --spec.category=\"CCE\" --spec.containerNetwork.mode=\"vpc-router\" --spec.containerNetwork.cidrs.1.cidr=\"10.0.0.0/16\"\n</code></pre>"},{"location":"cloudnative/02-Container-Registry/","title":"SWR Container Registry","text":"<p>SoftWare Repository for Container (SWR) allows you to easily manage the full lifecycle of container images and facilitates secure deployment of images for your applications.</p> <p>There are three ways to upload an image.</p> <ol> <li>Through the GUI interface of the SWR service</li> <li>Generate a templorary login command and upload</li> <li>Obtaining a Long-Term Valid Login Command</li> </ol> <p>Method 1</p> <p>We can save a docker image use <code>docker save</code> command, and then we can upload this tar file to SWR.</p> <pre><code>[root@ecs-c5e5 ~]# docker images\nREPOSITORY    TAG       IMAGE ID       CREATED        SIZE\nhello-world   latest    9c7a54a9a43c   3 months ago   13.3kB\n[root@ecs-c5e5 ~]# docker save hello-world:latest &gt; hello-world.tar\n</code></pre> <p></p> <p>Method 2</p> <p>The provisional certification is only valid for a few hours.</p> <p></p> <p>Method 3</p> <p>Login the huaweicloud account &gt; Identity and Access Management &gt; Users &gt; Security Settings &gt; Access Keys  &gt; Create Access key</p> <pre><code># Use this command, you will get a Long-Term Valid Login key\nprintf \"AK\" | openssl dgst -binary -sha256 -hmac \"SK\" | od -An -vtx1 | sed 's/[ \\n]//g' | sed 'N;s/\\n//'\n\n# Usage Example\nprintf \"RVHVMX******\" | openssl dgst -binary -sha256 -hmac \"H3nPwzgZ******\" | od -An -vtx1 | sed 's/[ \\n]//g' | sed 'N;s/\\n//'\ndocker login -u ap-southeast-3@RVHVMX****** -p cab4ceab4a1545*************** swr.ap-southeast-3.myhuaweicloud.com\n</code></pre> <p>Obtaining a Long-Term Valid Login Command</p>"},{"location":"cloudnative/02-Container-Registry/#show-a-demo","title":"Show a Demo","text":""},{"location":"cloudnative/02-Container-Registry/#install-docker","title":"Install Docker","text":"<pre><code>yum remove docker \\\n        docker-client \\\n        docker-client-latest \\\n        docker-common \\\n        docker-latest \\\n        docker-latest-logrotate \\\n        docker-logrotate \\\n        docker-engine\n\nyum install -y yum-utils\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n\nyum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n\nsystemctl start docker &amp;&amp; systemctl enable docker\n</code></pre>"},{"location":"cloudnative/02-Container-Registry/#generate-a-long-term-password","title":"Generate a long-term password","text":"<p>Get the long-term password and login\uff0cthen we can download image or build image push to SWR</p> <p></p> <p>Modify the tag and push the image</p> <p></p> <p>We can login the huaweicloud conosle for check</p> <p></p>"},{"location":"cloudnative/03-codearts-deploy/","title":"CodeArts + CCE: From code to Application","text":"<p>CodeArts is a one-stop, full-process, secure, and trustworthy cloud-native DevSecOps platform. It's provide many services.I select some service's components to demonstrate how to quickly implement CI/CD capabilities through codearts and deploy code to CCE.</p> <p>Note</p> <p>The steps is: source code \u2192 build ---&gt; package to docker image \u2192 push to swr \u2192 deploy to CCE </p>"},{"location":"cloudnative/03-codearts-deploy/#a-java-web-app-build","title":"A Java web app build","text":""},{"location":"cloudnative/03-codearts-deploy/#1-create-code-repository","title":"1. create code repository","text":"<ol> <li>open the codearts console, create a project </li> <li>Go to the code \u2192 Repo \u2192 New Repository</li> </ol> <ul> <li>We can create a empty repository , and then use git command push code to this repository. </li> <li>we can create repository use template</li> </ul> <p>We are select a template for demo in there.</p>"},{"location":"cloudnative/03-codearts-deploy/#2-create-dockerfile","title":"2. create dockerfile","text":"<p>create a dockerfile for package the application to image when CI(continuous integration) step build the source code finished. </p> <pre><code>FROM openjdk:8-jdk-alpine\nARG JAR_FILE=target/*.jar\nCOPY ${JAR_FILE} app.jar\nENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]\n</code></pre>"},{"location":"cloudnative/03-codearts-deploy/#3-build-steps","title":"3. Build steps","text":"<p>Go to CI/CD option, select build step \u2192 create task</p> <p></p> <p>Next step have a lot of Build Templates can select. choice the blank template, added two steps for the build task.</p> <p></p> <p>Note: We can added more steps if we want more tasks for build.</p> <p>Build and Running </p> <p></p> <p>So we can see it's successful build the source code to jar file \u2192 package to docker image \u2192 upload to SWR.</p>"},{"location":"cloudnative/03-codearts-deploy/#a-java-web-app-deploy","title":"A Java web app deploy","text":"<p>create deploy.yaml file:</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    description: ''\n  labels:\n    appgroup: ''\n    version: v1\n  name: javawebtest\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: javawebtest\n      version: v1\n  template:\n    metadata:\n      annotations:\n        metrics.alpha.kubernetes.io/custom-endpoints: '[{\"api\":\"\",\"path\":\"\",\"port\":\"\",\"names\":\"\"}]'\n      labels:\n        app: javawebtest\n        version: v1\n    spec:\n      containers:\n        - image: swr.sa-brazil-1.myhuaweicloud.com/devcloud/demo:v1\n          name: container-0\n          resources:\n            requests:\n              cpu: 250m\n              memory: 512Mi\n            limits:\n              cpu: 1000m\n              memory: 1024Mi\n      imagePullSecrets:\n        - name: default-secret\n      terminationGracePeriodSeconds: 30\n  replicas: 1\n  minReadySeconds: 0\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 0\n      maxUnavailable: 1\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: javawebtest\n  labels:\n    app: javawebtest\n  namespace: default\n  annotations: {}\nspec:\n  selector:\n    app: javawebtest\n  externalTrafficPolicy: Cluster\n  ports:\n    - name: cce-service-0\n      targetPort: 8080\n      nodePort: 0\n      port: 8080\n      protocol: TCP\n  type: NodePort\n</code></pre>"},{"location":"cloudnative/03-codearts-deploy/#1-codearts-deploy","title":"1. CodeArts deploy","text":"<p>Switch to deploy option, and create a new task about deploy to CCE, setting like this:</p> <p></p> <p>This is the details informations </p> <p></p> <p>Let's switch the CCE console check the workload, we found the application had deployed.  </p> <p></p>"},{"location":"cloudnative/03-codearts-deploy/#2-codearts-pipeline","title":"2. CodeArts pipeline","text":"<p>We can create a pipeline to combine the preceding two operations. And then We can deploy from source code to application with just click 1 time. </p> <p></p> <p>Let's delete the CCE workload, try it again. we can check the service to CCE.</p> <p></p>"},{"location":"cloudnative/04-network/","title":"k8s network","text":""},{"location":"cloudnative/04-network/#1-service-types-and-application-scenarios","title":"1. Service Types and Application Scenarios","text":"<p>Services of the ClusterIP, NodePort, LoadBalancer, and Headless Service types offer different functions.</p> <ul> <li>ClusterIP: used to make the Service only reachable within a cluster.</li> <li>NodePort: used for access from outside a cluster. A NodePort Service is accessed through the port on the node. For details, see NodePort Services.</li> <li>LoadBalancer: used for access from outside a cluster. It is an extension of NodePort, to which a load balancer routes, and external systems only need to access the load balancer. For details, see LoadBalancer Services.</li> <li>Headless Service: used by pods to discover each other. No separate cluster IP address will be allocated to this type of Service, and the cluster will not balance loads or perform routing for it. You can create a headless Service by setting the spec.clusterIP value to None. For details, see Headless Services.</li> </ul> <p>we can use kubectl expose command setting this, And we can setting use console also.</p> <pre><code># When using the NodePort type, the port here is meaningless. When accessing through a node, you need to actually view the corresponding NodePort. \n# This port parameter is only use for internal access when set the nodeport \nkubectl expose deployment deployment-name --port=30080 --target-port=80 --name=service-name --type=NodePort\nkubectl expose --type=NodePort deployment nginx --port 80 --name nginx-nodeport  --overrides '{ \"apiVersion\": \"v1\",\"spec\":{\"ports\": [{\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80,\"nodePort\":30080}]}}'\n\nkubectl expose deployment deployment-name --port=80 --target-port=80 --name=service-name --type=ClusterIP\nkubectl expose deployment hello-world --port 80 --type=LoadBalancer\n\n# we can create a service and modify the selector \nkubectl create service nodeport myservice --node-port=31000 --tcp=3000:80\n</code></pre>"},{"location":"cloudnative/04-network/#manage-clusters-via-console-or-commands","title":"Manage clusters via console or commands","text":"<p>We can see the Cluster Information \u2192 Resources \u2192 Connection Information \u2192 kubectl, And then get the more details informations about configure kubectl.</p> <p></p> <p></p> <p>When we finished all the steps, we can use commands operate the CCE cluster:</p> <pre><code>[root@ecs-c5e5 ~]# kubectl get ns\nNAME              STATUS   AGE\ndefault           Active   32h\nkube-node-lease   Active   32h\nkube-public       Active   32h\nkube-system       Active   32h\n</code></pre> <p>Kubectl autocomplete</p> <pre><code>[root@ecs-c5e5 ~]# yum -y install bash-completion\n[root@ecs-c5e5 ~]# source &lt;(kubectl completion bash)\n[root@ecs-c5e5 ~]# echo \"source &lt;(kubectl completion bash)\" &gt;&gt; ~/.bashrc\n</code></pre> <p>You can also use a shorthand alias for kubectl that also works with completion:</p> <pre><code>alias k=kubectl\ncomplete -o default -F __start_kubectl k\n</code></pre>"},{"location":"cloudnative/04-network/#clusterip","title":"ClusterIP","text":"<pre><code>[root@ecs-c5e5 ~]# kubectl apply -f nginx.yaml -f tomcat.yaml\ndeployment.apps/nginx created\ndeployment.apps/tomcat created\n[root@ecs-c5e5 ~]# kubectl expose deployment nginx --type=ClusterIP --name=nginx-service --port=80 --target-port=80\nservice/nginx-service exposed\n[root@ecs-c5e5 ~]#\n[root@ecs-c5e5 ~]# kubectl get pods -o wide\nNAME                      READY   STATUS    RESTARTS   AGE    IP            NODE             NOMINATED NODE   READINESS GATES\nnginx-698c667dd7-zrnrx    1/1     Running   0          2m8s   172.16.0.13   192.168.34.211   &lt;none&gt;           &lt;none&gt;\ntomcat-77b6db4bdd-x295j   1/1     Running   0          2m8s   172.16.0.12   192.168.34.211   &lt;none&gt;           &lt;none&gt;\n[root@ecs-c5e5 ~]# kubectl get svc -o wide\nNAME            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE   SELECTOR\nkubernetes      ClusterIP   10.247.0.1       &lt;none&gt;        443/TCP        33h   &lt;none&gt;\nnginx-service   ClusterIP    10.247.156.240   &lt;none&gt;        80:80/TCP   36s   app=nginx\n[root@ecs-c5e5 ~]# kubectl get endpoints\nNAME            ENDPOINTS             AGE\nkubernetes      192.168.34.240:5444   33h\nnginx-service   172.16.0.13:80        49s\n[root@ecs-c5e5 ~]# kubectl scale deployment nginx --replicas=2\ndeployment.apps/nginx scaled\n[root@ecs-c5e5 ~]# kubectl get endpoints\nNAME            ENDPOINTS                       AGE\nkubernetes      192.168.34.240:5444             33h\nnginx-service   172.16.0.13:80,172.16.0.14:80   64s\n</code></pre> <p>Access test like this:</p> <pre><code>[root@ecs-c5e5 ~]# kubectl exec -it tomcat-77b6db4bdd-x295j -- /bin/bash\nroot@tomcat-77b6db4bdd-x295j:/usr/local/tomcat#\n\n# Access USE Pod IP \nroot@tomcat-77b6db4bdd-x295j:/usr/local/tomcat# curl 172.16.0.13\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Welcome to nginx!&lt;/title&gt;\n&lt;style&gt;\nhtml { color-scheme: light dark; }\nbody { width: 35em; margin: 0 auto;\nfont-family: Tahoma, Verdana, Arial, sans-serif; }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;\n&lt;p&gt;If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.&lt;/p&gt;\n\n&lt;p&gt;For online documentation and support please refer to\n&lt;a href=\"http://nginx.org/\"&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;\nCommercial support is available at\n&lt;a href=\"http://nginx.com/\"&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n# Access use ClusterIP\nroot@tomcat-77b6db4bdd-x295j:/usr/local/tomcat# curl 10.247.156.240\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Welcome to nginx!&lt;/title&gt;\n&lt;style&gt;\nhtml { color-scheme: light dark; }\nbody { width: 35em; margin: 0 auto;\nfont-family: Tahoma, Verdana, Arial, sans-serif; }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;\n&lt;p&gt;If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.&lt;/p&gt;\n\n&lt;p&gt;For online documentation and support please refer to\n&lt;a href=\"http://nginx.org/\"&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;\nCommercial support is available at\n&lt;a href=\"http://nginx.com/\"&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n# Access use service name\nroot@tomcat-77b6db4bdd-x295j:/usr/local/tomcat# curl nginx-service\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Welcome to nginx!&lt;/title&gt;\n&lt;style&gt;\nhtml { color-scheme: light dark; }\nbody { width: 35em; margin: 0 auto;\nfont-family: Tahoma, Verdana, Arial, sans-serif; }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;\n&lt;p&gt;If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.&lt;/p&gt;\n\n&lt;p&gt;For online documentation and support please refer to\n&lt;a href=\"http://nginx.org/\"&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;\nCommercial support is available at\n&lt;a href=\"http://nginx.com/\"&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n# Access use Domain\nroot@tomcat-77b6db4bdd-x295j:/usr/local/tomcat# cat /etc/resolv.conf\nsearch default.svc.cluster.local svc.cluster.local cluster.local\nnameserver 10.247.3.10\noptions ndots:5 timeout:2 single-request-reopen\nroot@tomcat-77b6db4bdd-x295j:/usr/local/tomcat# curl nginx-service.default.svc.cluster.local\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Welcome to nginx!&lt;/title&gt;\n&lt;style&gt;\nhtml { color-scheme: light dark; }\nbody { width: 35em; margin: 0 auto;\nfont-family: Tahoma, Verdana, Arial, sans-serif; }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;\n&lt;p&gt;If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.&lt;/p&gt;\n\n&lt;p&gt;For online documentation and support please refer to\n&lt;a href=\"http://nginx.org/\"&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;\nCommercial support is available at\n&lt;a href=\"http://nginx.com/\"&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"cloudnative/04-network/#nodeport","title":"nodeport","text":"<pre><code>[root@ecs-c5e5 ~]# kubectl get svc nginx-service -o yaml\napiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: \"2023-08-27T05:13:44Z\"\n  labels:\n    app: nginx\n  name: nginx-service\n  namespace: default\n  resourceVersion: \"86260\"\n  uid: fac3c03a-fb5d-4341-812f-cff661c9ebe2\nspec:\n  clusterIP: 10.247.156.240\n  clusterIPs:\n  - 10.247.156.240\n  externalTrafficPolicy: Cluster\n  internalTrafficPolicy: Cluster\n  ipFamilies:\n  - IPv4\n  ipFamilyPolicy: SingleStack\n  ports:\n  - nodePort: 31428\n    port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    app: nginx\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n</code></pre>"},{"location":"cloudnative/04-network/#loadbalancer","title":"loadbalancer","text":"<pre><code>[root@ecs-c5e5 ~]# kubectl get service\nNAME         TYPE           CLUSTER-IP       EXTERNAL-IP                     PORT(S)           AGE\nkubernetes   ClusterIP      10.247.0.1       &lt;none&gt;                          443/TCP           47h\nnginx        ClusterIP      10.247.80.80     &lt;none&gt;                          80/TCP            13h\nnginx-elb    LoadBalancer   10.247.155.17    110.238.103.45,192.168.34.190   80:32337/TCP      3m24s\nnginx-node   NodePort       10.247.183.147   &lt;none&gt;                          30080:32180/TCP   13h\n[root@ecs-c5e5 ~]# kubectl get svc nginx-elb -o yaml\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubernetes.io/elb.autocreate: '{\"name\":\"elb-test\",\"type\":\"public\",\"bandwidth_name\":\"cce-bandwidth-1693163374519\",\"bandwidth_chargemode\":\"traffic\",\"bandwidth_size\":5,\"bandwidth_sharetype\":\"PER\",\"eip_type\":\"5_bgp\"}'\n    kubernetes.io/elb.class: union\n    kubernetes.io/elb.eip-id: fba071e4-58aa-407a-bf00-4f5fc28cd73d\n    kubernetes.io/elb.health-check-flag: \"on\"\n    kubernetes.io/elb.health-check-option: '{\"protocol\":\"TCP\",\"delay\":\"5\",\"timeout\":\"10\",\"max_retries\":\"3\"}'\n    kubernetes.io/elb.id: a68106b8-f754-4369-8618-af21e8143dc3\n    kubernetes.io/elb.lb-algorithm: ROUND_ROBIN\n    kubernetes.io/elb.mark: \"0\"\n  creationTimestamp: \"2023-08-27T19:10:37Z\"\n  finalizers:\n  - service.kubernetes.io/load-balancer-cleanup\n  labels:\n    app: nginx\n  name: nginx-elb\n  namespace: default\n  resourceVersion: \"119775\"\n  uid: 53191067-b9aa-4cc3-84df-ec4d5cbada74\nspec:\n  allocateLoadBalancerNodePorts: true\n  clusterIP: 10.247.155.17\n  clusterIPs:\n  - 10.247.155.17\n  externalTrafficPolicy: Cluster\n  internalTrafficPolicy: Cluster\n  ipFamilies:\n  - IPv4\n  ipFamilyPolicy: SingleStack\n  loadBalancerIP: 110.238.103.45\n  ports:\n  - name: cce-service-0\n    nodePort: 32337\n    port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    app: nginx\n  sessionAffinity: None\n  type: LoadBalancer\nstatus:\n  loadBalancer:\n    ingress:\n    - ip: 110.238.103.45\n    - ip: 192.168.34.190\n</code></pre> <p>loadbalancer</p> <p>service</p>"},{"location":"cloudnative/04-network/#2-elb-ingress-nginx-ingress","title":"2. ELB Ingress &amp; Nginx Ingress","text":""},{"location":"cloudnative/04-network/#elb-ingress","title":"ELB Ingress","text":"<p>Access use the domain:</p> <p></p>"},{"location":"cloudnative/04-network/#nginx-ingress","title":"Nginx Ingress","text":"<p>Install the nginx-ingress plug-in and create a policy:</p> <p></p> <p>Because we didnot have the domain, so we can add the hosts record to verify. we need add the DNS A record if we have a real domain.</p> <pre><code>[root@ecs-c5e5 ~]# cat /etc/hosts\n::1     localhost       localhost.localdomain   localhost6      localhost6.localdomain6\n127.0.0.1       localhost       localhost.localdomain   localhost4      localhost4.localdomain4\n127.0.0.1       ecs-c5e5        ecs-c5e5\n110.238.103.45 www.abc.com\n110.238.103.45 java.abc.com\n[root@ecs-c5e5 ~]# curl -I java.abc.com\nHTTP/1.1 200\nDate: Mon, 28 Aug 2023 11:41:41 GMT\nContent-Type: text/html;charset=UTF-8\nContent-Length: 3084\nConnection: keep-alive\nLast-Modified: Mon, 28 Aug 2023 01:01:15 GMT\nAccept-Ranges: bytes\nContent-Language: en-US\n\n[root@ecs-c5e5 ~]# curl www.abc.com\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Welcome to nginx!&lt;/title&gt;\n&lt;style&gt;\nhtml { color-scheme: light dark; }\nbody { width: 35em; margin: 0 auto;\nfont-family: Tahoma, Verdana, Arial, sans-serif; }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;\n&lt;p&gt;If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.&lt;/p&gt;\n\n&lt;p&gt;For online documentation and support please refer to\n&lt;a href=\"http://nginx.org/\"&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;\nCommercial support is available at\n&lt;a href=\"http://nginx.com/\"&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Ingress</p>"},{"location":"cloudnative/05-scale-cce/","title":"cce scale","text":""},{"location":"cloudnative/05-scale-cce/#prerequisites","title":"Prerequisites","text":"<p>HPA(HorizontalPodAutoscaler) can increase and decrease pods according to policies.</p> <p></p> <p>When the node resources under the cluster are insufficient or wasted, CA can increase and decrease Node according to the policy.</p> <p></p> <p>To use HPA, you need to install an add-on that provides metrics APIs. Select one of the following add-ons based on your cluster version and actual requirements.</p> <ul> <li>metrics-server: provides basic resource usage metrics, such as container CPU and memory usage. It is supported by all cluster versions.</li> <li>kube-prometheus-stack: provides custom metrics in addition to basic resource metrics. You need to register Prometheus as the service that provides metrics API. For details, see Providing Resource Metrics Through the Metrics API. This add-on supports clusters of v1.17 or later.</li> </ul> <p>Before using the node scaling function, you must install the autoscaler add-on of v1.13.8 or later.</p> <p></p>"},{"location":"cloudnative/05-scale-cce/#hpahorizontalpodautoscaler-test","title":"HPA(HorizontalPodAutoscaler) test","text":"<p>HPA mechanisim</p> <p></p> <p>Run a demo deployment\uff08Run and expose php-apache server\uff09</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: php-apache\nspec:\n  selector:\n    matchLabels:\n      run: php-apache\n  template:\n    metadata:\n      labels:\n        run: php-apache\n    spec:\n      containers:\n      - name: php-apache\n        image: registry.k8s.io/hpa-example\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 500m\n          requests:\n            cpu: 200m\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: php-apache\n  labels:\n    run: php-apache\nspec:\n  ports:\n  - port: 80\n  selector:\n    run: php-apache\n</code></pre> <p>Resource Management for Pods and Containers</p> <p>create the deployment</p> <pre><code>kubectl apply -f https://k8s.io/examples/application/php-apache.yaml\nkubectl autoscale deployment php-apache --cpu-percent=50 --min=1 --max=10\nkubectl get hpa\n\n# Increase the load \nkubectl run -i --tty load-generator --rm --image=busybox:1.28 --restart=Never -- /bin/sh -c \"while sleep 0.01; do wget -q -O- http://php-apache; done\"\n\nkubectl get hpa php-apache --watch\nkubectl get deployment php-apache\n</code></pre> <p>Install the metrics-server plug-in, and add a loop access test to the corresponding load to mode high concurrent requests.</p> <p></p> <p>We can view the expansion and contraction process through the log.</p> <p></p> <p>Command operation is difficult for many people, but the graphical interface will be much simpler. CCE supports both command operation and easier click configuration through the web interface.</p> <p></p> <p>Huaweicloud CCE support customedHPA, we can set more step's actions.</p> <p></p> <p>HorizontalPodAutoscaler Walkthrough</p> <p>Using HPA and CA for Auto Scaling of Workloads and Nodes</p>"},{"location":"cloudnative/05-scale-cce/#cacluster-autoscaler","title":"CA\uff08Cluster autoscaler\uff09","text":"<p>Create a CCE nodepool, update enable the node pool autoscaling.  </p> <p></p> <p>Configure the node scaling rules: </p> <p></p> <p>Setting CA rules by yaml</p>"},{"location":"cloudnative/05-scale-cce/#elastic-scaling-of-cce-pods-to-cci","title":"Elastic Scaling of CCE Pods to CCI","text":"<p>Elastic Scaling of CCE Pods to CCI</p> <p>Auto scaling</p>"},{"location":"cloudnative/06-velero-backup/","title":"velero backup","text":"<p>Backup and disaster recovery</p>"},{"location":"cloudnative/06-velero-backup/#1-install-the-velero-software","title":"1. Install the velero software","text":"<pre><code>[root@ecs-c5e5 ~]# wget https://github.com/vmware-tanzu/velero/releases/download/v1.11.1/velero-v1.11.1-linux-amd64.tar.gz\n[root@ecs-c5e5 ~]# tar zxvf velero-v1.11.1-linux-amd64.tar.gz\nvelero-v1.11.1-linux-amd64/LICENSE\nvelero-v1.11.1-linux-amd64/examples/minio/00-minio-deployment.yaml\nvelero-v1.11.1-linux-amd64/examples/nginx-app/README.md\nvelero-v1.11.1-linux-amd64/examples/nginx-app/base.yaml\nvelero-v1.11.1-linux-amd64/examples/nginx-app/with-pv.yaml\nvelero-v1.11.1-linux-amd64/velero\n[root@ecs-c5e5 ~]# mv velero-v1.11.1-linux-amd64/velero /usr/local/bin/\n</code></pre> <p>create the AK/SK credentials file</p> <pre><code># vim credentials-velero\n\n[default]\naws_access_key_id = {AK}\naws_secret_access_key = {SK}\n</code></pre> <p>Currently, the S3 protocol is used in the industry, and HUAWEI CLOUD OBS also supports the S3 protocol. Therefore, set Provider to aws.</p> <pre><code>velero install \\\n  --provider aws \\\n  --plugins velero/velero-plugin-for-aws:v1.7.1 \\\n  --bucket veleroback01 \\\n  --secret-file ./credentials-velero \\\n  --use-volume-snapshots=false \\\n  --backup-location-config region=sa-brazil-1,s3ForcePathStyle=\"true\",s3Url=http://obs.sa-brazil-1.myhuaweicloud.com\n</code></pre> <p><code>veleroback01</code> is the OBS bucket name, we need create it in advance.</p> <p></p> <p>By default, a namespace named velero is created for the Velero instance. Run the following command to view the pod status:</p> <pre><code>$ kubectl get pod -n velero\n</code></pre> <p>Check the interconnection between Velero and the object storage and ensure that the status is Available.</p> <pre><code>$ velero backup-location get\n</code></pre> <p></p>"},{"location":"cloudnative/06-velero-backup/#2-create-a-application","title":"2. create a application","text":"<p>Create a nginx webapp and mount a SFS Turbo as the storage, the nginx access the page storage in SFS Turbo. </p> <pre><code>[root@ecs-c5e5 ~]# kubectl exec -it nginx-685fcffdbf-lrh2x -- /bin/bash\nroot@nginx-685fcffdbf-lrh2x:/# df -h\nFilesystem                     Size  Used Avail Use% Mounted on\noverlay                         89G  2.5G   82G   3% /\ntmpfs                           64M     0   64M   0% /dev\ntmpfs                          7.6G     0  7.6G   0% /sys/fs/cgroup\nshm                             64M     0   64M   0% /dev/shm\n/dev/mapper/vgpaas-kubernetes  9.8G   63M  9.2G   1% /etc/hosts\n/dev/mapper/vgpaas-dockersys    89G  2.5G   82G   3% /etc/hostname\n192.168.34.245:/               500G     0  500G   0% /usr/share/nginx/html\ntmpfs                          512M   12K  512M   1% /run/secrets/kubernetes.io/serviceaccount\ntmpfs                          7.6G     0  7.6G   0% /proc/acpi\ntmpfs                          7.6G     0  7.6G   0% /proc/scsi\ntmpfs                          7.6G     0  7.6G   0% /sys/firmware\nroot@nginx-685fcffdbf-lrh2x:/# cd /usr/share/nginx/html/\nroot@nginx-685fcffdbf-lrh2x:/usr/share/nginx/html# ls\nroot@nginx-685fcffdbf-lrh2x:/usr/share/nginx/html# echo \"111111\" &gt; index.html\nroot@nginx-685fcffdbf-lrh2x:/usr/share/nginx/html# echo \"2222\" &gt; h1.html\nroot@nginx-685fcffdbf-lrh2x:/usr/share/nginx/html# exit\nexit\n[root@ecs-c5e5 ~]# curl 172.16.0.157\n111111\n[root@ecs-c5e5 ~]# curl 172.16.0.157/h1.html\n2222\n[root@ecs-c5e5 ~]# kubectl get  pods  -o wide\nNAME                     READY   STATUS    RESTARTS   AGE    IP             NODE             NOMINATED NODE   READINESS GATES\nnginx-685fcffdbf-lrh2x   1/1     Running   0          114s   172.16.0.157   192.168.34.204   &lt;none&gt;           &lt;none&gt;\nnginx-685fcffdbf-tk2sw   1/1     Running   0          114s   172.16.0.20    192.168.34.211   &lt;none&gt;           &lt;none&gt;\n[root@ecs-c5e5 ~]# curl 172.16.0.20\n111111\n</code></pre> <p></p> <p></p> <p>Installing the Migration Tool</p>"},{"location":"cloudnative/06-velero-backup/#backup","title":"backup","text":"<p>Backup the nginx and delete the deployment, after this use the backup to restore. </p> <pre><code>[root@ecs-c5e5 ~]# velero backup create backup20230828\nBackup request \"backup20230828\" submitted successfully.\nRun `velero backup describe backup20230828` or `velero backup logs backup20230828` for more details.\n[root@ecs-c5e5 ~]# velero backup describe backup20230828\nName:         backup20230828\nNamespace:    velero\nLabels:       velero.io/storage-location=default\nAnnotations:  velero.io/source-cluster-k8s-gitversion=v1.25.3-r0-25.2.19\n              velero.io/source-cluster-k8s-major-version=1\n              velero.io/source-cluster-k8s-minor-version=25+\n\nPhase:  Completed\n\n\nNamespaces:\n  Included:  *\n  Excluded:  &lt;none&gt;\n\nResources:\n  Included:        *\n  Excluded:        &lt;none&gt;\n  Cluster-scoped:  auto\n\nLabel selector:  &lt;none&gt;\n\nStorage Location:  default\n\nVelero-Native Snapshot PVs:  auto\n\nTTL:  720h0m0s\n\nCSISnapshotTimeout:    10m0s\nItemOperationTimeout:  1h0m0s\n\nHooks:  &lt;none&gt;\n\nBackup Format Version:  1.1.0\n\nStarted:    2023-08-29 03:21:14 +0800 CST\nCompleted:  2023-08-29 03:21:23 +0800 CST\n\nExpiration:  2023-09-28 03:21:14 +0800 CST\n\nTotal items to be backed up:  607\nItems backed up:              607\n\nVelero-Native Snapshots: &lt;none included&gt;\n</code></pre>"},{"location":"cloudnative/06-velero-backup/#restore","title":"restore","text":"<pre><code>[root@ecs-c5e5 ~]# velero backup get\nNAME             STATUS      ERRORS   WARNINGS   CREATED                         EXPIRES   STORAGE LOCATION   SELECTOR\nbackup20230828   Completed   0        0          2023-08-29 03:21:14 +0800 CST   29d       default            &lt;none&gt;\n[root@ecs-c5e5 ~]# velero restore create --from-backup=backup20230828\nRestore request \"backup20230828-20230829032715\" submitted successfully.\nRun `velero restore describe backup20230828-20230829032715` or `velero restore logs backup20230828-20230829032715` for more details.\n[root@ecs-c5e5 ~]# velero restore describe backup20230828-20230829032715\nName:         backup20230828-20230829032715\nNamespace:    velero\nLabels:       &lt;none&gt;\nAnnotations:  &lt;none&gt;\n\nPhase:                                 InProgress\nEstimated total items to be restored:  511\nItems restored so far:                 87\n\nStarted:    2023-08-29 03:27:15 +0800 CST\nCompleted:  &lt;n/a&gt;\n\nBackup:  backup20230828\n\nNamespaces:\n  Included:  all namespaces found in the backup\n  Excluded:  &lt;none&gt;\n\nResources:\n  Included:        *\n  Excluded:        nodes, events, events.events.k8s.io, backups.velero.io, restores.velero.io, resticrepositories.velero.io, csinodes.storage.k8s.io, volumeattachments.storage.k8s.io, backuprepositories.velero.io\n  Cluster-scoped:  auto\n\nNamespace mappings:  &lt;none&gt;\n\nLabel selector:  &lt;none&gt;\n\nRestore PVs:  auto\n\nExisting Resource Policy:   &lt;none&gt;\nItemOperationTimeout:       1h0m0s\n\nPreserve Service NodePorts:  auto\n\n[root@ecs-c5e5 ~]# kubectl get pods\nNAME                     READY   STATUS    RESTARTS   AGE\nnginx-685fcffdbf-lrh2x   1/1     Running   0          8s\nnginx-685fcffdbf-tk2sw   1/1     Running   0          7s\n[root@ecs-c5e5 ~]# kubectl get pods -o wide\nNAME                     READY   STATUS    RESTARTS   AGE   IP             NODE             NOMINATED NODE   READINESS GATES\nnginx-685fcffdbf-lrh2x   1/1     Running   0          12s   172.16.0.158   192.168.34.204   &lt;none&gt;           &lt;none&gt;\nnginx-685fcffdbf-tk2sw   1/1     Running   0          11s   172.16.0.21    192.168.34.211   &lt;none&gt;           &lt;none&gt;\n[root@ecs-c5e5 ~]# curl 172.16.0.158\n111111\n</code></pre> <p>Note: If we need migrate the PV data, we can use the pv-migrate tool for sync the PV data.</p> <p>Another Choice: CBR, rsync, OMS and etc.  </p>"},{"location":"cloudnative/06-velero-backup/#3-disaster-recovery","title":"3. Disaster Recovery","text":"<p>In a production environment, if you want to implement cross-region backup and recovery, you need to proceed as shown in the figure below.</p> <p></p> <p>If runing in the same region, it's easy then this digram.</p> <p>For application High Availability, we can also use the UCS service manage mulit-cluster running application. </p> <p>Disaster Recovery: Implementing High Availability for Containers in CCE</p>"},{"location":"cloudnative/07-monitor/","title":"monitor","text":""},{"location":"cloudnative/07-monitor/#aom","title":"AOM","text":""},{"location":"cloudnative/07-monitor/#apm","title":"APM","text":"<p>Install the APM for host and start the application load the apm jar file.</p> <p></p> <p>Running a test application</p> <pre><code>[root@ecs-c5e5 testdemo]# cat startapm.sh\njava -javaagent:/root/testdemo/apm-javaagent/apm-javaagent.jar=appName=dao,env=dev,envTag=beta,business=vmall -jar /root/testdemo/ecommerce-persistence-service-0.0.1-SNAPSHOT.jar --spring.config.location=file:/root/testdemo/application_dao.yml  &gt; dao.log 2&gt;&amp;1 &amp;\njava -javaagent:/root/testdemo/apm-javaagent/apm-javaagent.jar=appName=apigateway,env=dev,envTag=beta,business=vmall -jar /root/testdemo/ecommerce-api-gateway-0.0.1-SNAPSHOT.jar --spring.config.location=file:/root/testdemo/application_api.yml  &gt; api.log 2&gt;&amp;1 &amp;\njava -javaagent:/root/testdemo/apm-javaagent/apm-javaagent.jar=appName=userservice,env=dev,envTag=beta,business=vmall -jar /root/testdemo/ecommerce-user-service-0.0.1-SNAPSHOT.jar --spring.config.location=file:/root/testdemo/application_userservice.yml  &gt; user.log 2&gt;&amp;1 &amp;\njava -javaagent:/root/testdemo/apm-javaagent/apm-javaagent.jar=appName=product-service,env=dev,envTag=beta,business=vmall -jar /root/testdemo/ecommerce-product-service-0.0.1-SNAPSHOT.jar --spring.config.location=file:/root/testdemo/application_prod.yml  &gt; prod.log 2&gt;&amp;1 &amp;\njava -javaagent:/root/testdemo/apm-javaagent/apm-javaagent.jar=appName=ui,env=dev,envTag=beta,business=vmall -jar /root/testdemo/cloud-simple-ui-1.0.0.jar --spring.config.location=file:/root/testdemo/ui.properties &gt; ui.log 2&gt;&amp;1 &amp;\n</code></pre> <p>tracing </p> <p></p> <p>Topology</p> <p></p>"},{"location":"cloudnative/07-monitor/#prometheus","title":"Prometheus","text":"<p>Easy integration installation through plug-in interface</p> <p></p> <p>prometheus-grafana</p> <p></p>"},{"location":"cloudnative/08-apig/","title":"api gateway","text":"<p>Let's look at the effect first, and then complete the configuration step by step.</p>"},{"location":"cloudnative/08-apig/#configurate-apig-cce-workloads","title":"Configurate APIG + CCE workloads","text":"<p>Create the APIG step by step like this:</p> <p></p> <p>click <code>Gateway Information--&gt; Basic Information --&gt; Routes</code>  , Edit and add the container CIDR.</p> <p>import CCE workload </p> <p></p> <p>The backend configuration of APIG must be consistent with that of CCE workload.</p> <p></p> <p>If we want to access the publish APIG through the public network, this is need bind <code>Inbond Access</code> EIP. </p> <p>If need CCE workload access the outside, this is need open the outbound access permission. </p> <p></p>"},{"location":"cloudnative/08-apig/#apig-policy","title":"APIG policy","text":"<p>You can select the corresponding plug-in to implement different functions. for example: Rate limit, IP block</p> <p></p> <p>configurate authenticate</p> <p>create a function and integrate with APIG </p> <p></p> <p>the python demo code like this\uff1a</p> <pre><code># -*- coding:utf-8 -*-\nimport json\n\n\ndef handler(event, context):\n    if event[\"headers\"].get(\"authorization\") == 'Basic dXNlcjE6cGFzc3dvcmQ=':\n        return {\n            'statusCode': 200,\n            'body': json.dumps({\n                \"status\": \"allow\",\n                \"context\": {\n                    \"user_name\": \"user1\"\n                }\n            })\n        }\n    else:\n        return {\n            'statusCode': 200,\n            'body': json.dumps({\n                \"status\": \"deny\",\n                \"context\": {\n                    \"code\": \"1001\",\n                    \"message\": \"incorrect username or password\"\n                }\n            })\n        }\n</code></pre> <p>Follow this procedure to create <code>API Policies --&gt; Custom Authorizers</code> </p> <p></p> <p>let's debug the apis, if didn use authorize, you will recive this response:</p> <pre><code>HTTP/1.1 401 Unauthorized\nTransfer-Encoding: chunked\nConnection: keep-alive\nContent-Type: application/json\nDate: Mon, 04 Sep 2023 11:57:37 GMT\nServer: api-gateway\nX-Apig-Latency: 557\nX-Request-Id: 822cf60eb35d5280fc83614b31e7b507\n\n{\"error_msg\":\"Incorrect authentication information: frontend authorizer\",\"error_code\":\"APIG.0305\",\"request_id\":\"822cf60eb35d5280fc83614b31e7b507\"}\n</code></pre> <p>Add the authorzation header and requeste again</p> <p></p>"},{"location":"cloudnative/09-ucs/","title":"ucs","text":"<p>Create fleets</p> <p></p> <p>Rgister Cluster</p> <p></p> <p>Federation validate</p> <p>If you can enable the Federation permission, the cce or k8s cluster must bind the EIP(Enable it to enjoy unified orchestration of multiple clusters, cross-cluster auto scaling &amp; service discovery, auto failover, etc.)</p> <p></p> <p></p> <p>Create Workload</p> <p></p> <p>create deployment </p> <p></p> <p>And they we can try delete a pod from one cluster, You will find that after deletion, the corresponding pod will be recreated in the cluster. Because at this time the cluster will have UCS for scheduling.</p>"},{"location":"cloudnative/QingTian-Architecture/","title":"qingtian","text":""},{"location":"cloudnative/QingTian-Architecture/#overview","title":"Overview","text":"<p>Huawei QingTian is Huawei Cloud\u2019s Next-Gen synergy of software and hardware for unparalleled performance with multi-dimensional convergence and enhances instances including AI acceleration and stability. QingTian Architecture supports cloud-edge-device collaboration, unified experience, and a unified ecosystem, fueling the intelligent transformation of government and enterprise customers in the digital age.\u00a0</p> <p></p>"},{"location":"cloudnative/QingTian-Architecture/#smart-card","title":"Smart Card","text":"<p>QingTian smart card includes intelligent network, storage and security chips which enables all resource (Compute, storage, networking, security) enhancement and offloading for superlative performance and security.</p> <p></p>"},{"location":"cloudnative/QingTian-Architecture/#virtualization","title":"Virtualization","text":"<p>Huawei proprietary lightweight virtualization revolutionizes the deep reconstruction of virtualization semantics to eliminate computing loss, service jitter and service overhead.\u00a0</p> <p>Controller Card Features</p> <ul> <li>Management of multiple I/O cards and hosts including Virtual machines, Bare-Metal server and Containers.</li> <li>Management ports for scaling of multiple I/O cards</li> <li>Scale-out</li> <li>VPC native semantics.</li> <li>Block Storage native semantics.</li> </ul> <p></p>"},{"location":"cloudnative/QingTian-Architecture/#acceleration-plan","title":"Acceleration Plan","text":"<p>The compute, storage, networking, and security acceleration engines integrate with QingTian smart card for data acceleration, seamless access to cloud services like VPC, EVS and flexible scaling.</p> <p></p>"},{"location":"cloudnative/QingTian-Architecture/#advantages","title":"Advantages","text":"<p>Flexibility</p> <ul> <li>Support for virito-blk/virtio-scsi/virtio-net/NVME</li> <li>Fast mode switchover</li> <li>Compatibility with the virtio ecosystem and HINIC high-performance network</li> </ul> <p>High Performance</p> <ul> <li>PCIe pass-through and live migration for pass-through devices</li> <li>Descriptor prefetch</li> <li>Lower virtio-based DMA frequency</li> <li>Batch processing requests.</li> </ul>"},{"location":"cloudnative/QingTian-Architecture/#cloud-native-infrastructure","title":"Cloud Native Infrastructure","text":"<p>QingTian is designed for powerful Cloud native infrastructure with Zero Losses. It uses software-hardware synergy technologies to provide enterprises with cloud-native infrastructure that delivers the optimal performance, cost-effectiveness, and experience.</p> <ol> <li>Unified and Flexible resources pools of Bare-Metal Servers, Virtual machines, and Containers.</li> <li>40% high performance. cloud-native storage pools allow storage resources to be quickly and automatically allocated, scaled, and migrated based on container requirements. This provides secure, reliable, and high-performance data management capabilities for stateful applications.</li> <li>30% cost reduction. innovative container offloading technology based on the QingTian architecture greatly improves the container cluster resource utilization and reduces the resource costs by 30%.</li> <li>Fast Scaling as per the business workload requirements, Provisioning of 1000 containers in seconds.</li> </ol> <p></p> <p>HUAWEI CLOUD, HUAWEI CLOUD Stack, and HUAWEI CLOUD Edge all run on the QingTian Architecture and share a full-stack infrastructure for capability upgrades.</p> <p></p>"},{"location":"cloudnative/cce-network/","title":"Huaweicloud CCE network training","text":""},{"location":"cloudnative/cce-network/#1-cce-cluster-network-mode","title":"1. cce cluster network mode","text":"<p>The container network assigns IP addresses to pods in a cluster and provides networking services. In CCE, you can select the following network models for your cluster:</p> <ul> <li>Tunnel network</li> <li>VPC network</li> <li>Cloud Native Network 2.0 - CCE Turbo </li> </ul> <p></p>"},{"location":"cloudnative/cce-network/#network-model-comparison","title":"Network Model Comparison","text":"Dimension Tunnel Network VPC Network Cloud Native Network 2.0 Application scenarios 1. Common container service scenarios  2. Scenarios that do not have high requirements on network latency and bandwidth 1. Scenarios that have high requirements on network latency and bandwidth   2. Containers can communicate with VMs using a microservice registration framework, such as Dubbo and CSE. 1. Scenarios that have high requirements on network latency, bandwidth, and performance   2. Containers can communicate with VMs using a microservice registration framework, such as Dubbo and CSE. Core technology OVS IPvlan and VPC route VPC ENI/sub-ENI Applicable clusters CCE cluster CCE cluster CCE Turbo cluster Network isolation Kubernetes native NetworkPolicy for pods No Pods support security group isolation. Passthrough networking No No Yes IP address management The container CIDR block is allocated separately.  CIDR blocks are divided by node and can be dynamically allocated (CIDR blocks can be dynamically added after being allocated.) The container CIDR block is allocated separately.  CIDR blocks are divided by node and statically allocated (the CIDR block cannot be changed after a node is created). The container CIDR block is divided from the VPC subnet and does not need to be allocated separately. Network performance Performance loss due to VXLAN encapsulation No tunnel encapsulation. Cross-node packets are forwarded through VPC routers, delivering performance equivalent to that of the host network. The container network is integrated with the VPC network, eliminating performance loss. Networking scale A maximum of 2,000 nodes are supported. By default, 200 nodes are supported. Each time a node is added to the cluster, a route is added to the VPC route tables (including the default and custom ones). Therefore, the cluster scale is limited by the VPC route tables. A maximum of 2,000 nodes are supported. <p>performance: ENI &gt; VPC &gt; Tunnel</p> <p>Number of network nodes: (ENI,Tunnel) &gt; VPC</p> <p>Elastic Network Interfaces (ENIs) , Reference qingtian Architecture</p> <p>Note: After a cluster is created, the network model cannot be changed. </p> <p>Offical link about network </p> <p>The following figure shows the creation on the CCE GUI\uff1a</p> <p></p>"},{"location":"cloudnative/cce-network/#cce-turbo-vs-cce","title":"CCE Turbo vs CCE","text":"<p>CCE Turbo is an enhancement of CCE.</p> Table 1 Cluster types      <p>Dimension</p> <p>Sub-dimension</p> <p>CCE Turbo Cluster</p> <p>CCE Cluster</p> <p>Cluster</p> <p>Positioning</p> <p>Next-gen container cluster, with accelerated computing, networking, and scheduling. Designed for Cloud Native 2.0</p> <p>Standard cluster for common commercial use</p> <p>Node type</p> <p>Hybrid deployment of VMs and bare-metal servers</p> <p>Hybrid deployment of VMs and bare-metal servers</p> <p>Networking</p> <p>Model</p> <p>Cloud Native Network 2.0: applies to large-scale and high-performance scenarios.</p> <p>Max networking scale: 2,000 nodes</p> <p>Cloud-native network 1.0: applies to common, smaller-scale scenarios.</p> <ul> <li>Tunnel network model</li> <li>VPC network model</li> </ul> <p>Performance</p> <p>Flattens the VPC network and container network into one. No performance loss.</p> <p>Overlays the VPC network with the container network, causing certain performance loss.</p> <p>Container network isolation</p> <p>Associates pods with security groups. Unifies security isolation in and out the cluster via security groups' network policies.</p> <ul> <li>Tunnel network model: supports network policies for intra-cluster communications.</li> <li>VPC network model: supports no isolation.</li> </ul> <p>Security</p> <p>Isolation</p> <ul> <li>Physical machine: runs Kata containers, allowing VM-level isolation.</li> <li>VM: runs common containers, isolated by cgroups.</li> </ul> <p>Runs common containers, isolated by cgroups.</p> <p>Offical link about CCE Turbo Clusters and CCE Clusters</p> <p>The following figure shows the creation on the CCE Turbo GUI\uff1a</p> <p></p>"},{"location":"cloudnative/cce-network/#ingress","title":"Ingress","text":"<p>An ingress is an independent resource in the Kubernetes cluster and defines rules for forwarding external access traffic. we can customize forwarding rules based on domain names and URLs to implement fine-grained distribution of access traffic.</p> <p>ELB Ingress &amp; Nginx Ingress</p>"},{"location":"cloudnative/training/","title":"Training","text":""},{"location":"cloudnative/training/#question","title":"Question","text":"<p>Topics for training: - 1 - Build a CCE k8s cluster explain cce cluster network modes - 2 - Up/Down scale Cluster CCE - 3 - Container Registry - 4 - Backup container on CCE - 5 - Build Agnostic k8s and provision on CCE (OKD exemple) - 6 - Secure your cluster CCE disaster recovery - 7 - Terraform script all steps for build and recovery a CCE - 8 - Gateway application (APIG) - 9 - API Console operation (Use openAPI) - 10 - Telemetry for Managed Services</p>"},{"location":"cloudnative/training/#answer","title":"Answer","text":"<p>1 - Build a CCE k8s cluster explain cce cluster network modes</p> <ul> <li>Tunnel network model</li> <li>VPC network model</li> <li>ENI </li> </ul> <p>2 - Up/Down scale Cluster CCE</p> <ul> <li>HPA</li> <li>CA  </li> </ul> <p>3 - Container Registry</p> <ul> <li>SWR how to upload/download a docker image </li> <li>How to authenticate \uff08temporary/permanent\uff09</li> </ul> <p>4 - Backup container on CCE 6 - Secure your cluster CCE disaster recovery</p> <p>velero backup and restore UCS</p> <p>7 - Terraform script all steps for build and recovery a CCE</p> <p>show a demo how to create a CCE cluster</p>"},{"location":"cloudnative/training/#doubt","title":"Doubt","text":"<p>5 - Build Agnostic k8s and provision on CCE (OKD exemple) </p> <p>CCE is based on opensource k8s platform, what's real requirement about this item?</p> <p>8 - Gateway application (APIG)</p> <p>9 - API Console operation (Use openAPI)</p> <p>Does the customer currently use its own APIG? The customer is interested in Huawei APIG. Do you want to know about Huawei APIG operations?</p> <p>10 - Telemetry for Managed Services</p> <p>Which software is telemetry here, opentelemetry, Prometheus, or other?</p> <p>I will write a document about this topics, we can show some demos about this topics if the custom need.</p> <p>Please communicate with the customer in advance about doubts</p>"},{"location":"ecology/zero-trust/","title":"\u96f6\u4fe1\u4efb\u7f51\u7edc\uff08Zero Trust Network)","text":""},{"location":"ecology/zero-trust/#zero-trust-network_1","title":"\u96f6\u4fe1\u4efb\u7f51\u7edc\uff08Zero Trust Network)\u7684\u7531\u6765","text":"<p>\u96f6\u4fe1\u4efb\u7f51\u7edc\uff08Zero Trust Network\uff09\u6700\u65e9\u7531 Forrester Research \u7684\u5206\u6790\u5e08 John Kindervag \u5728 2010 \u5e74\u63d0\u51fa\u3002Kindervag \u8ba4\u4e3a\uff0c\u4f20\u7edf\u7684\u7f51\u7edc\u5b89\u5168\u6a21\u578b\uff0c\u5373\u57fa\u4e8e\u8fb9\u754c\u9632\u5fa1\u7684\u6a21\u578b\uff0c\u5df2\u7ecf\u8fc7\u65f6\u4e86\u3002\u5728\u73b0\u4ee3\u7f51\u7edc\u73af\u5883\u4e2d\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u5404\u79cd\u65b9\u5f0f\u7ed5\u8fc7\u8fb9\u754c\u9632\u5fa1\uff0c\u56e0\u6b64\u9700\u8981\u91c7\u7528\u65b0\u7684\u5b89\u5168\u6a21\u578b\u6765\u4fdd\u62a4\u7f51\u7edc\u3002</p> <p>\u96f6\u4fe1\u4efb\u7f51\u7edc\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u4fe1\u4efb\u4efb\u4f55\u4eba\u6216\u8bbe\u5907\uff0c\u5373\u4f7f\u5b83\u4eec\u4f4d\u4e8e\u5185\u7f51\u4e2d\u3002\u53ea\u6709\u5728\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u548c\u6388\u6743\u540e\uff0c\u624d\u5141\u8bb8\u8bbf\u95ee\u8d44\u6e90\u3002\u96f6\u4fe1\u4efb\u7f51\u7edc\u91c7\u7528\u4e86\u591a\u56e0\u7d20\u8eab\u4efd\u9a8c\u8bc1\u3001\u5fae\u5206\u6388\u6743\u548c\u6301\u7eed\u76d1\u63a7\u7b49\u6280\u672f\u6765\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u3002</p> <p>\u96f6\u4fe1\u4efb\u7f51\u7edc\u7684\u63d0\u51fa\u5f15\u8d77\u4e86\u4e1a\u754c\u7684\u5e7f\u6cdb\u5173\u6ce8\uff0c\u5e76\u9010\u6e10\u6210\u4e3a\u4e00\u79cd\u4e3b\u6d41\u7684\u7f51\u7edc\u5b89\u5168\u6a21\u578b\u3002\u76ee\u524d\uff0c\u8bb8\u591a\u4f01\u4e1a\u548c\u7ec4\u7ec7\u90fd\u5728\u91c7\u7528\u96f6\u4fe1\u4efb\u7f51\u7edc\u6765\u4fdd\u62a4\u4ed6\u4eec\u7684\u7f51\u7edc\u5b89\u5168\u3002</p>"},{"location":"ecology/zero-trust/#_1","title":"\u96f6\u4fe1\u4efb\u7f51\u7edc\u7684\u5173\u952e\u601d\u60f3","text":"<ul> <li>\u9ed8\u8ba4\u4e0d\u4fe1\u4efb\uff1a \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u4fe1\u4efb\u4efb\u4f55\u4eba\u6216\u8bbe\u5907\uff0c\u5373\u4f7f\u5b83\u4eec\u4f4d\u4e8e\u5185\u7f51\u4e2d\u3002\u53ea\u6709\u5728\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u548c\u6388\u6743\u540e\uff0c\u624d\u5141\u8bb8\u8bbf\u95ee\u8d44\u6e90\u3002</li> <li>\u57fa\u4e8e\u8eab\u4efd\u548c\u4e0a\u4e0b\u6587\u8fdb\u884c\u8bbf\u95ee\u63a7\u5236\uff1a \u8bbf\u95ee\u63a7\u5236\u4e0d\u4ec5\u57fa\u4e8e\u8eab\u4efd\uff0c\u8fd8\u57fa\u4e8e\u7528\u6237\u7684\u4e0a\u4e0b\u6587\uff0c\u4f8b\u5982\u7528\u6237\u7684\u8bbe\u5907\u3001\u4f4d\u7f6e\u548c\u6d3b\u52a8\u3002</li> <li>\u6301\u7eed\u76d1\u63a7\uff1a \u6301\u7eed\u76d1\u63a7\u7528\u6237\u7684\u6d3b\u52a8\uff0c\u4ee5\u68c0\u6d4b\u5f02\u5e38\u884c\u4e3a\u3002</li> </ul>"},{"location":"ecology/zero-trust/#_2","title":"\u96f6\u4fe1\u4efb\u7f51\u7edc\u7684\u4f18\u52bf","text":"<ul> <li>\u63d0\u9ad8\u5b89\u5168\u6027\uff1a \u96f6\u4fe1\u4efb\u7f51\u7edc\u53ef\u4ee5\u964d\u4f4e\u7f51\u7edc\u88ab\u653b\u51fb\u7684\u98ce\u9669\u3002</li> <li>\u964d\u4f4e\u6210\u672c\uff1a \u96f6\u4fe1\u4efb\u7f51\u7edc\u53ef\u4ee5\u51cf\u5c11\u5bf9\u4f20\u7edf\u5b89\u5168\u8bbe\u5907\u548c\u89e3\u51b3\u65b9\u6848\u7684\u4f9d\u8d56\uff0c\u4ece\u800c\u964d\u4f4e\u6210\u672c\u3002</li> <li>\u63d0\u9ad8\u654f\u6377\u6027\uff1a \u96f6\u4fe1\u4efb\u7f51\u7edc\u53ef\u4ee5\u9002\u5e94\u4e0d\u65ad\u53d8\u5316\u7684\u7f51\u7edc\u73af\u5883\u3002</li> </ul> <p>\u96f6\u4fe1\u4efb\u7f51\u7edc\u4ecd\u7136\u662f\u4e00\u4e2a\u65b0\u5174\u7684\u6280\u672f\uff0c\u5c1a\u6709\u5f85\u8fdb\u4e00\u6b65\u53d1\u5c55\u3002\u7136\u800c\uff0c\u96f6\u4fe1\u4efb\u7f51\u7edc\u5177\u6709\u5de8\u5927\u7684\u6f5c\u529b\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f01\u4e1a\u548c\u7ec4\u7ec7\u63d0\u9ad8\u7f51\u7edc\u5b89\u5168\u6027\u3002</p>"},{"location":"ecology/zero-trust/#_3","title":"\u96f6\u4fe1\u4efb\u7f51\u7edc\u7684\u53d1\u5c55\u548c\u4e3b\u8981\u73a9\u5bb6","text":"<p>\u96f6\u4fe1\u4efb\u7f51\u7edc\u7684\u5e02\u573a\u683c\u5c40\u6b63\u5904\u4e8e\u5feb\u901f\u53d1\u5c55\u4e4b\u4e2d\u3002\u6839\u636e Gartner \u7684\u9884\u6d4b\uff0c\u5230 2025 \u5e74\uff0c\u5168\u7403\u96f6\u4fe1\u4efb\u7f51\u7edc\u5e02\u573a\u89c4\u6a21\u5c06\u8fbe\u5230 370 \u4ebf\u7f8e\u5143\u3002</p>"},{"location":"ecology/zero-trust/#_4","title":"\u96f6\u4fe1\u4efb\u7f51\u7edc\u5e02\u573a\u7684\u4e3b\u8981\u53c2\u4e0e\u8005","text":"<ul> <li>\u4f20\u7edf\u7f51\u7edc\u5b89\u5168\u5382\u5546\uff1a \u4f8b\u5982\u601d\u79d1\u3001Fortinet\u3001Check Point \u7b49\u3002\u8fd9\u4e9b\u5382\u5546\u5728\u4f20\u7edf\u7f51\u7edc\u5b89\u5168\u9886\u57df\u62e5\u6709\u4e30\u5bcc\u7684\u7ecf\u9a8c\u548c\u6280\u672f\uff0c\u6b63\u5728\u79ef\u6781\u62d3\u5c55\u96f6\u4fe1\u4efb\u7f51\u7edc\u5e02\u573a\u3002</li> <li>\u4e91\u8ba1\u7b97\u5382\u5546\uff1a \u4f8b\u5982 AWS\u3001Azure\u3001Google Cloud \u7b49\u3002\u8fd9\u4e9b\u5382\u5546\u5728\u4e91\u8ba1\u7b97\u9886\u57df\u62e5\u6709\u5f3a\u5927\u7684\u4f18\u52bf\uff0c\u6b63\u5728\u901a\u8fc7\u4e91\u539f\u751f\u96f6\u4fe1\u4efb\u7f51\u7edc\u89e3\u51b3\u65b9\u6848\u6765\u6ee1\u8db3\u4f01\u4e1a\u7684\u9700\u6c42\u3002</li> <li>\u65b0\u5174\u5382\u5546\uff1a \u4f8b\u5982 Zscaler\u3001Cloudflare\u3001Palo Alto Networks \u7b49\u3002\u8fd9\u4e9b\u5382\u5546\u4e13\u6ce8\u4e8e\u96f6\u4fe1\u4efb\u7f51\u7edc\u9886\u57df\uff0c\u5e76\u63d0\u4f9b\u521b\u65b0\u7684\u89e3\u51b3\u65b9\u6848\u3002</li> </ul> <p>\u96f6\u4fe1\u4efb\u7f51\u7edc\u5e02\u573a\u683c\u5c40\u6b63\u5728\u53d1\u751f\u53d8\u5316\uff0c\u4f20\u7edf\u7f51\u7edc\u5b89\u5168\u5382\u5546\u548c\u4e91\u8ba1\u7b97\u5382\u5546\u6b63\u5728\u52a0\u5927\u5bf9\u96f6\u4fe1\u4efb\u7f51\u7edc\u7684\u6295\u5165\uff0c\u65b0\u5174\u5382\u5546\u4e5f\u6b63\u5728\u5feb\u901f\u53d1\u5c55\u3002\u9884\u8ba1\u672a\u6765\u96f6\u4fe1\u4efb\u7f51\u7edc\u5e02\u573a\u5c06\u66f4\u52a0\u591a\u5143\u5316\u548c\u7ade\u4e89\u6fc0\u70c8\u3002</p>"},{"location":"ecology/zero-trust/#_5","title":"\u96f6\u4fe1\u4efb\u7f51\u7edc\u5e02\u573a\u7684\u4e3b\u8981\u8d8b\u52bf","text":"<ul> <li>\u4e91\u539f\u751f\u5316\uff1a \u4e91\u539f\u751f\u96f6\u4fe1\u4efb\u7f51\u7edc\u89e3\u51b3\u65b9\u6848\u6b63\u5728\u6210\u4e3a\u4e3b\u6d41\u3002</li> <li>\u5fae\u5206\u6388\u6743\uff1a \u5fae\u5206\u6388\u6743\u5c06\u6210\u4e3a\u96f6\u4fe1\u4efb\u7f51\u7edc\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002</li> <li>\u4eba\u5de5\u667a\u80fd\u548c\u673a\u5668\u5b66\u4e60\uff1a \u4eba\u5de5\u667a\u80fd\u548c\u673a\u5668\u5b66\u4e60\u5c06\u88ab\u7528\u4e8e\u96f6\u4fe1\u4efb\u7f51\u7edc\u7684\u68c0\u6d4b\u548c\u54cd\u5e94\u3002</li> </ul> <p>\u96f6\u4fe1\u4efb\u7f51\u7edc\u5e02\u573a\u5177\u6709\u5de8\u5927\u7684\u6f5c\u529b\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f01\u4e1a\u548c\u7ec4\u7ec7\u63d0\u9ad8\u7f51\u7edc\u5b89\u5168\u6027\u3002\u968f\u7740\u5e02\u573a\u7684\u53d1\u5c55\uff0c\u96f6\u4fe1\u4efb\u7f51\u7edc\u5c06\u5728\u4f01\u4e1a\u548c\u7ec4\u7ec7\u7684\u7f51\u7edc\u5b89\u5168\u4e2d\u53d1\u6325\u8d8a\u6765\u8d8a\u91cd\u8981\u7684\u4f5c\u7528\u3002</p>"},{"location":"ecology/adds/install-msad/","title":"ECS\u5b9e\u4f8b\u642d\u5efaWindows AD\u57df","text":""},{"location":"ecology/adds/install-msad/#_1","title":"\u7b80\u4ecb\u53ca\u89c4\u5212","text":"<p>\u6d3b\u52a8\u76ee\u5f55AD\uff08Active Directory\uff09\u662f\u5fae\u8f6f\u670d\u52a1\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002AD\u80fd\u5b9e\u73b0\u9ad8\u6548\u7ba1\u7406\uff0c\u4f8b\u5982\u6279\u91cf\u7ba1\u7406\u7528\u6237\u3001\u90e8\u7f72\u5e94\u7528\u548c\u66f4\u65b0\u8865\u4e01\u7b49\u3002\u8bb8\u591a\u5fae\u8f6f\u7ec4\u4ef6\uff08\u4f8b\u5982Exchange\uff09\u548c\u6545\u969c\u8f6c\u79fb\u7fa4\u96c6\u4e5f\u9700\u8981AD\u57df\u73af\u5883\u3002\u7531\u4e8e\u5f88\u591a\u4f01\u4e1a\u4e00\u76f4\u90fd\u662f\u901a\u8fc7AD\u6765\u7ba1\u7406\u4f01\u4e1aIT\u7cfb\u7edf\u8ba4\u8bc1\u548c\u6743\u9650\u7684\u7ba1\u7406\uff0c\u6240\u4ee5\u5f88\u591a\u90ae\u7bb1\u7cfb\u7edf\u3001OA\u7cfb\u7edf\u3001\u4e91\u684c\u9762\u529e\u516c\u7b49\u7cfb\u7edf\u90fd\u514d\u4e0d\u4e86\u7684\u9700\u8981\u4e86AD\u8fdb\u884c\u96c6\u6210\u3002\u672c\u6587\u4ee5Windows Server 2019 standard \u64cd\u4f5c\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u5982\u4f55\u642d\u5efaAD\u57df\u3002</p> <p>\u5df2\u521b\u5efa\u4e24\u53f0ECS\u5b9e\u4f8b\uff0c\u5206\u522b\u4f5c\u4e3a\u57df\u63a7\u5236\u5668\uff08DC\uff09\u548c\u5ba2\u6237\u7aef\uff08Client\uff09\uff0c\u521b\u5efa\u7684ECS\u5b9e\u4f8b\u5206\u533a\u9700\u8981\u4e3aNTFS\u683c\u5f0f\u3001\u652f\u6301DNS\u670d\u52a1\u3002\u4ee5\u4e0b\u4e3a\u4e24\u53f0\u670d\u52a1\u7684\u89c4\u5212\uff1a</p> \u89c4\u5212 IP \u540d\u79f0 \u670d\u52a1\u7aef 192.168.1.250 dc1.361way.com \u5ba2\u6237\u7aef 192.168.1.100 client.361way.com <p>Windows\u5ba2\u6237\u7aef\u52a0\u5165AD\u57df\u9700\u8981\u7528\u5230\u7684\u7aef\u53e3</p> <pre><code>TCP 88\uff08Kerberos\u5bc6\u94a5\u5206\u53d1\u4e2d\u5fc3\uff09\nTCP 135\uff08\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\uff09\nTCP 139\uff08NetBIOS\u4f1a\u8bdd\u670d\u52a1\uff09\nTCP 389\uff08LDAP\uff09\nTCP 445\uff08SMB\uff0c\u7f51\u7edc\u767b\u5f55\uff09\nUDP 53\uff08DNS\uff09\nUDP 389\uff08LDAP\uff0cDC\u5b9a\u4f4d\u5668\uff0c\u7f51\u7edc\u767b\u5f55\uff09\nTCP 49152-65535\uff08\u968f\u673a\u5206\u914d\u7684\u9ad8TCP\u7aef\u53e3\uff09\n</code></pre> <p>AD\u57df\u590d\u5236\u9700\u8981\u90a3\u4e9b\u9632\u706b\u5899\u5f00\u653e\u7684\u7aef\u53e3</p> <pre><code>TCP 53\uff08DNS\uff09\nTCP 88\uff08Kerberos\u5bc6\u94a5\u5206\u53d1\u4e2d\u5fc3\uff09\nTCP 135\uff08\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\uff09\nTCP 139\uff08NetBIOS\u4f1a\u8bdd\u670d\u52a1\uff09\nTCP 389\uff08LDAP\uff09\nTCP 445\uff08SMB\uff0c\u7f51\u7edc\u767b\u5f55\uff09\nTCP 464\uff08Kerberos\u5bc6\u7801\uff09\nTCP 3268\uff08\u5168\u7403\u76ee\u5f55\uff09\nTCP 49152 \u2013 65535\uff08\u968f\u673a\u5206\u914d\u7684\u9ad8\u7aef\u53e3\uff09\nUDP 53\uff08DNS\uff09\nUDP 123\uff08NTP\uff09\nUDP 389\uff08LDAP\uff09\nUDP 445\nUDP 464\n</code></pre>"},{"location":"ecology/adds/install-msad/#ad","title":"AD\u670d\u52a1\u5668\u7684\u90e8\u7f72","text":""},{"location":"ecology/adds/install-msad/#_2","title":"\u540d\u8bcd\u8bf4\u660e","text":"<p>\u6d3b\u52a8\u76ee\u5f55AD\uff08Active Directory\uff09\u662f\u5fae\u8f6f\u670d\u52a1\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u76f8\u5173\u540d\u8bcd\u6982\u5ff5\u5982\u4e0b\uff1a</p> <ul> <li>DC\uff1aDomain Controllers\uff0c\u57df\u63a7\u5236\u5668</li> <li>DN\uff1aDistinguished Name\uff0c\u8bc6\u522b\u540d</li> <li>OU\uff1aOrganizational Unit\uff0c\u7ec4\u7ec7\u5355\u4f4d</li> <li>CN\uff1aCanonical Name\uff0c\u6b63\u5f0f\u540d\u79f0</li> <li>SID\uff1aSecurity Identifier\uff0c\u5b89\u5168\u6807\u8bc6\u7b26</li> <li>SDP\uff1aService principal names\uff0c\u670d\u52a1\u4e3b\u9898\u540d\u79f0</li> <li>FQDN\uff1aFully qualified domain name\uff0c\u5b8c\u5168\u5408\u683c\u57df\u540d</li> </ul> <p>\u672c\u6587\u4ee5Windows Server 2019\u4e3a\u4f8b\u4ecb\u7ecd\u5982\u4f55\u642d\u5efaAD\u57df\u3002</p>"},{"location":"ecology/adds/install-msad/#ad_1","title":"AD\u670d\u52a1\u5b89\u88c5","text":"<p>\u767b\u5f55\u4e91\u5e73\u53f0\u5e76\u521b\u5efa\u7b2c\u4e00\u53f0ECS\u670d\u52a1\u5668\u7528\u4e8e\u642d\u5efaAD\u57df\u670d\u52a1\u5668\uff0c\u7279\u522b\u6ce8\u610f\u7684\u662f\u9700\u8981\u4e3a\u670d\u52a1\u5668\u8bbe\u7f6e\u9759\u6001IP\u5730\u5740\uff08\u9ed8\u8ba4\u4e00\u822c\u90fd\u662fVPC DHCP\u5206\u914d\u5730\u5740\uff09\u3002\u8fd9\u91cc\u4ee5\u534e\u4e3a\u4e91\u4e3a\u4f8b\uff1a</p> <p></p> <p>\u4f7f\u7528\u5feb\u6377\u952e <code>Windows + R</code> \u6253\u5f00\u8fd0\u884c\uff0c\u8f93\u5165 <code>servermanager</code> \u542f\u52a8\u670d\u52a1\u7ba1\u7406\u754c\u9762\uff08\u6216\u901a\u8fc7window\u5f00\u59cb\u83dc\u5355\u5355\u9009\u5230\u670d\u52a1\u7ba1\u7406\u5668\uff09\uff1a</p> <p></p> <p>\u5728\u201c\u6dfb\u52a0\u89d2\u8272\u548c\u529f\u80fd\u201d\u5411\u5bfc\u4e2d\uff0c\u8f6c\u5230\u5de6\u4fa7\u7684\u5b89\u88c5\u7c7b\u578b\u9762\u677f\u5e76\u9009\u62e9 <code>Role-based or feature-based installation</code> \u5e76\u70b9\u51fb <code>Next</code> \u8fdb\u5165\u4e0b\u4e00\u6b65</p> <p></p> <p>\u8fd9\u91cc\u4e3b\u673a\u540d\u6211\u5df2\u4fee\u6539\u4e3adc1\uff0c\u8fd9\u91cc\u5c31\u9009\u62e9\u8fd9\u53f0\u670d\u52a1\u5668\u5e76\u4e0b\u4e00\u6b65</p> <p></p> <p>\u5bf9\u5e94\u7684\u670d\u52a1\u9009\u62e9 <code>Active Directory Domain Services</code> \u548c <code>DNS Server</code> </p> <p></p> <p>\u7b49\u5f85\u5230\u5982\u4e0b\u754c\u9762\u540e\uff0c\u8868\u793a\u5df2\u5b8c\u6210\u76f8\u5173\u7ec4\u4ef6\u7684\u5b89\u88c5</p> <p></p>"},{"location":"ecology/adds/install-msad/#ad_2","title":"\u914d\u7f6eAD\u670d\u52a1","text":"<p>\u70b9\u51fb\u9ec4\u8272\u7684\u611f\u53f9\u53f7\uff0c\u9009\u4e2d <code>Promote this server to a domain controller</code> \u5e76\u70b9\u51fb\u4f1a\u8df3\u51fa\u90e8\u7f72\u914d\u7f6e\u754c\u9762\uff1a</p> <p></p> <p>\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u6797\uff0c\u8fd9\u4e2a\u8f93\u5165\u5bf9\u5e94\u7684\u57df\u540d\uff0c\u6211\u8fd9\u91cc\u9009\u62e9\u7684\u662f361way.com</p> <p></p> <p>\u4e0b\u56fe\u8fd9\u91cc\u4f1a\u8ba9\u8f93\u5165\u57df\u7684\u7ba1\u7406\u5458\u5bc6\u7801\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u6709\u4e00\u4e2a\u5947\u602a\u7684\u5730\u65b9\uff0c\u6211\u4f7f\u7528\u7684\u662fwin2019\u670d\u52a1\u5668\u7248\u672c\uff0c\u4f46\u57df\u548c\u6797\u7684\u529f\u80fd\u7b49\u7ea7\u8fd9\u91cc\u663e\u793a\u7684\u662fwin2016\uff0c\u4f30\u8ba1\u662f\u5411\u4e0b\u517c\u5bb9\u7684\u7248\u672c\u3002</p> <p></p> <p>\u518d\u540e\u9762\u90fd\u662f\u4e00\u8def\u7684\u4e0b\u4e00\u6b65\u5c31\u5b8c\u4e86\uff0c\u521b\u5efaDNS\u59d4\u6d3e\u4e0d\u7528\u9009\uff0cNetBIOS\u57df\u540d\u4f1a\u81ea\u52a8\u8f93\u51fa\u3002AD DS database, log files, and SYSVOL \u5bf9\u5e94\u7684\u8def\u5f84\u5982\u4e0b\uff1a</p> <pre><code>Database folder: C:\\Windows\\NTDS\nLog files folder: C:\\Windows\\NTDS\nSYSVOL folder: C:\\Windows\\SYSVOL\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6210\u540e\u670d\u52a1\u5668\u4f1a\u8fdb\u884c\u4e00\u6b21\u91cd\u542f\u3002</p>"},{"location":"ecology/adds/install-msad/#ou","title":"\u914d\u7f6eOU","text":"<p>OU \u662f <code>organizational unit (OU)</code> \u7ec4\u7ec7\u5355\u5143\u7684\u7f29\u5199\uff0c\u5bf9\u5e94\u7684\u901a\u5e38\u662f\u4e00\u4e2a\u603b\u516c\u53f8\u3001\u5206\u516c\u53f8\u6216\u8005\u4ee5\u57ce\u5e02\u547d\u540d\u7684\u5b50\u5c5e\u5355\u4f4d\uff0c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u4fbf\u4e8e\u8bc6\u522b\u548c\u7ba1\u7406\u7684\u540d\u79f0\u5373\u53ef\u3002\u901a\u8fc7\u5728\u8fd0\u884c\u4e2d\u8f93\u5165 <code>dsac.exe</code> \u547d\u4ee4\u6216\u5728\u542f\u52a8\u680f\u67e5\u627e <code>ADAC(Active Directory Administrative Center)</code> \u8fdb\u5165\u57df\u7ba1\u7406\u754c\u9762\u3002</p> <p>\u9009\u62e9\u5bf9\u5e94\u7684\u57df\u5e76\u70b9\u9009\u65b0\u5efa organizational unit</p> <p></p> <p>\u7ed9 OU \u53d6\u4e2a\u540d\u5b57\uff0c\u5982\u679c\u4f60\u613f\u610f\u7684\u8bdd\u4e5f\u53ef\u4ee5\u589e\u52a0\u4e00\u4e9b\u5bf9\u5e94\u7684\u63cf\u8ff0</p> <p></p> <p>\u9009\u7528\u521a\u521a\u521b\u5efa\u7684 OU \uff0c\u53f3\u952e\u521b\u5efa user </p> <p></p> <p>\u8fd9\u91cc\u521b\u5efa\u4e86\u4e00\u4e2a\u7528\u6237\u5f20\u4e09\uff0c\u4e0b\u9762\u4f1a\u6709\u4e00\u4e9b\u7ec4\u7ec7\u4fe1\u606f\u53ef\u4ee5\u8bbe\u7f6e\uff0c\u6bd4\u5982\u90ae\u7bb1\u3001\u7535\u8bdd\u3001\u804c\u4f4d\u7b49\u4fe1\u606f\uff0c\u8fd9\u90e8\u5206\u4e0d\u662f\u5fc5\u9009\u9879\uff0c\u53ef\u5199\u53ef\u4e0d\u5199\u3002</p> <p></p> <p>\u5728 <code>Global Search</code> \u754c\u9762\u53ef\u4ee5\u67e5\u627e\u521b\u5efa\u7684\u7528\u6237\u5e76\u91cd\u5efa\u5bc6\u7801\uff0c\u9ed8\u8ba4\u91cd\u5efa\u5bc6\u7801\u540e\u7528\u6237\u7b2c\u4e00\u6b21\u767b\u5f55\u5fc5\u987b\u4fee\u6539\u5bc6\u7801\u3002</p> <p></p> <p>\u4fee\u6539\u5b8c\u5bc6\u7801\u540e\uff0c\u8fd8\u9700\u8981 enable \u7528\u6237\u3002</p>"},{"location":"ecology/adds/install-msad/#ad_3","title":"\u5ba2\u6237\u7aef\u52a0\u5165AD","text":"<p>\u7531\u4e8e\u4e00\u4e9b\u4e91\u5e73\u53f0\u4e0a\u7684windows\u4e3b\u673a\u6ca1\u6709\u63d0\u4f9b\u4fee\u6539windows\u7f51\u5361\u914d\u7f6e\u7684\u8bbe\u7f6e\uff08\u4fee\u6539\u540e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f51\u7edc\u5f02\u5e38\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e91\u5e73\u53f0\u7684\u5b50\u7f51\u8bbe\u7f6e\u4fee\u6539\u5bf9\u5e94\u7684DNS\u670d\u52a1\u5668\u5730\u5740\u4e3a AD \u57df\u670d\u52a1\u5668\u7684\u5730\u5740\u3002\u89c1\u4e0b\u56fe\uff1a</p> <p></p> <p>\u767b\u5f55\u9700\u8981\u52a0\u5165\u57df\u7684\u4e3b\u673a\uff08\u5b9e\u65bd\u524d\u6700\u597d\u5148ipconfig /all\u786e\u8ba4\u4e0b\u7f51\u7edc\u90e8\u5206\u7684 DNS \u8bbe\u7f6e\uff09\uff0c\u627e\u5230 \u201cThis PC\u201d \u53f3\u952e\u5c5e\u6027\uff0c\u627e\u5230\u4e3b\u673a\u540d\u548c\u57df\u914d\u7f6e\u9879\uff0c\u4fee\u6539\u5bf9\u5e94\u7684\u4e3b\u673a\u540d\u5e76\u52a0\u5165\u57df\uff1a</p> <p></p> <p>\u52a0\u5165\u6210\u529f\u540e\uff0c\u9700\u8981\u91cd\u65b0\u4e3b\u673a\u5e76\u4f7f\u7528\u57df\u7528\u6237\u548c\u5bc6\u7801\u767b\u5f55\u3002</p> <p></p> <p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <ol> <li>\u534e\u4e3a\u4e91-\u5982\u4f55\u642d\u5efaAD\u57df</li> <li>\u963f\u91cc\u4e91-ECS\u5b9e\u4f8b\u642d\u5efaWindows\u7cfb\u7edfAD\u57df</li> <li>\u963f\u91cc\u4e91-\u5c06Windows\u7cfb\u7edf\u673a\u5668\u52a0\u5165AD\u57df</li> <li>How to Install And Use Active Directory Administrative Center (ADUC)</li> </ol>"},{"location":"ecology/provider/aaghot/","title":"\u5168\u7403\u4e3b\u8981\u4e91\u5382\u5546\u5206\u6790","text":"<p>AWS \u4e91\u670d\u52a1  240</p> <p>Azure \u4e91\u670d\u52a1  200+</p> <p>GCP \u4e91\u670d\u52a1   100+</p> <p>alibabacloud 100+</p> <p>OCI</p> <p>IBM Cloud \u6df7\u5408\u4e91</p> <p>tencent cloud</p> <p>Huaweicloud </p> <p>statista\u7f51\u7ad9\u7684\u6570\u636e</p> <p>The top 10 public cloud providers in 2023</p> <p>\u6839\u636e\u8c03\u67e5\uff0c2023\u5e74\u5168\u7403\u524d\u5341\u5927\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u5206\u522b\u662f\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1\uff08AWS\uff09\u3001\u5fae\u8f6fAzure\u3001\u8c37\u6b4c\u4e91\u5e73\u53f0\uff08GCP\uff09\u3001\u963f\u91cc\u4e91\u3001\u7532\u9aa8\u6587\u4e91\u3001IBM\u4e91\uff08Kyndryl\uff09\u3001\u817e\u8baf\u4e91\u3001OVHcloud\u3001DigitalOcean\u548cLinode\uff08\u7531Akamai\u62e5\u6709\uff09\u3002\u6b64\u6b21\u8c03\u67e5\u4e3b\u8981\u5173\u6ce8\u516c\u6709\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u800c\u4e0d\u662f\u79c1\u6709\u4e91\u6280\u672f\uff08\u4f8b\u5982VMware\uff09\u3002</p> <p>2023\u5e74\u5168\u7403Top 10\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u6392\u540d\u5982\u4e0b\u8868\uff0c\u5176\u4e2d\u5305\u62ec\u5404\u5382\u5546\u62e5\u6709\u7684\u5730\u57df\u6570\u91cf\u548c\u53ef\u7528\u533a\u6570\u91cf\uff1a</p> \u4e91\u670d\u52a1\u63d0\u4f9b\u5546 \u5730\u533a \u53ef\u7528\u673a\u623f 1 \u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1 (AWS) 26 84 2 \u5fae\u8f6fAzure 60 116 3 \u8c37\u6b4c\u4e91\u5e73\u53f0 (GCP) 34 103 4 \u963f\u91cc\u4e91 27 84 5 \u7532\u9aa8\u6587\u4e91 38 46 6 IBM\u4e91\uff08Kyndryl\uff09 11 29 7 \u817e\u8baf\u4e91 21 65 8 OVH\u4e91 13 33 9 DigitalOcean 8 14 10 Linode 11 11 <p>\u4e0b\u9762\u66f4\u8be6\u7ec6\u5730\u4ecb\u7ecd\u6982\u8ff0\u8fd9\u524d10\u5927\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u3002</p>"},{"location":"ecology/provider/aaghot/#1aws","title":"1\u3001\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1\uff08AWS\uff09","text":"<p>Amazon Web Services (AWS) \u662fAmazon.com\u7684\u4e91\u8ba1\u7b97\u670d\u52a1\uff0c\u662f\u5168\u7403\u6700\u5927\u7684\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u3002\u8be5\u4f01\u4e1a\u901a\u8fc7\u5176\u6570\u636e\u4e2d\u5fc3\u63d0\u4f9b200\u591a\u79cd\u529f\u80fd\u9f50\u5168\u7684\u670d\u52a1\uff0c\u5305\u62ec\u8ba1\u7b97\u3001\u5b58\u50a8\u548c\u6570\u636e\u5e93\u3002AWS\u76ee\u524d\u670926\u4e2a\u533a\u57df\u548c84\u4e2a\u53ef\u7528\u533a\u673a\u623f\u5728\u8fd0\u884c\u3002\u8fd9\u4e9b\u533a\u57df\u548c\u53ef\u7528\u6027\u533a\u57df\u904d\u5e03\u7f8e\u56fd\u3001AWS GovCloud\uff08\u7f8e\u56fd\uff09\u3001\u7f8e\u6d32\u3001\u6b27\u6d32\u3001\u4e9a\u592a\u5730\u533a\u4ee5\u53ca\u4e2d\u4e1c\u548c\u975e\u6d32\u3002</p> <p>\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1 (AWS) \u7684\u51c0\u9500\u552e\u989d\u4ece2015\u5e74\u7684\u7ea680\u4ebf\u7f8e\u5143\u589e\u957f\u52302017\u5e74\u7684\u8d85\u8fc7170\u4ebf\u7f8e\u5143\uff0c\u52302019\u5e74\u8fbe\u5230350\u4ebf\u7f8e\u5143\uff0c\u73b0\u5728\u6bcf\u5e74\u4ea7\u751f\u8fd1740\u4ebf\u7f8e\u5143\u3002\u8fd9\u79cd\u60ca\u4eba\u7684\u589e\u957f\u662f\u7531\u4e8eAWS\u4ece2015\u5e74\u768432\u4e2a\u53ef\u7528\u533a\u6269\u5c55\u5230 2017\u5e74\u768452\u4e2a\u53ef\u7528\u533a\uff0c\u76ee\u524d\u5df2\u8fbe\u523084\u4e2a\u53ef\u7528\u533a\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u8be5\u516c\u53f8\u63a8\u51fa\u4e86\u6570\u5343\u79cd\u65b0\u7684AWS\u670d\u52a1\uff0c\u8fd9\u4e5f\u95f4\u63a5\u63a8\u52a8\u4e86\u5176\u6269\u5f20\u3002</p>"},{"location":"ecology/provider/aaghot/#2azure","title":"2\u3001\u5fae\u8f6fAzure","text":"<p>\u5fae\u8f6f\u516c\u53f8\u7684\u667a\u80fd\u4e91\u90e8\u95e8\u5305\u62ec\u5168\u7403\u7b2c\u4e8c\u5927\u4e91\u670d\u52a1\u63d0\u4f9b\u5546Azure\u3002\u901a\u8fc7Microsoft Azure\uff0c\u8be5\u516c\u53f8\u63d0\u4f9b\u4e00\u81f4\u7684\u6df7\u5408\u4e91\u4f53\u9a8c\u3001\u5f00\u53d1\u4eba\u5458\u751f\u4ea7\u529b\u3001\u4eba\u5de5\u667a\u80fd (AI) \u529f\u80fd\u4ee5\u53ca\u5b89\u5168\u6027\u548c\u5408\u89c4\u6027\u3002Microsoft Azure\u76ee\u524d\u670960\u4e2a\u533a\u57df\u548c116\u4e2a\u53ef\u7528\u6027\u533a\u57df\u673a\u623f\u5728\u8fd0\u884c\u3002\u8fd9\u4e9b\u533a\u57df\u548c\u53ef\u7528\u6027\u533a\u57df\u5206\u5e03\u5728\u7f8e\u56fd\u3001Azure Government\uff08\u7f8e\u56fd\uff09\u3001\u7f8e\u6d32\u3001\u6b27\u6d32\u3001\u4e9a\u592a\u5730\u533a\u4ee5\u53ca\u4e2d\u4e1c\u548c\u975e\u6d32\u3002</p> <p>\u5168\u7403\u6709200\u591a\u4e2a\u7269\u7406Microsoft Azure\u6570\u636e\u4e2d\u5fc3\uff0c\u5176\u4e2d\u88c5\u6709\u8ba1\u7b97\u673a\u670d\u52a1\u5668\uff0c\u6bcf\u4e2a\u670d\u52a1\u5668\u90fd\u914d\u5907\u4e86\u72ec\u7acb\u7684\u7535\u6e90\u3001\u51b7\u5374\u548c\u7f51\u7edc\u3002\u5fae\u8f6f\u516c\u53f8\u5c06\u8be5\u6570\u636e\u4e2d\u5fc3\u57fa\u7840\u8bbe\u65bd\u4e0e140\u4e2a\u56fd\u5bb6/\u5730\u533a\u8d85\u8fc7175,000\u82f1\u91cc\u7684\u5149\u7ea4\u7ebf\u8def\u8fde\u63a5\u8d77\u6765\u3002</p> <p>\u5fae\u8f6f\u4e91\u6536\u5165\uff0c\u5305\u62ec\u6765\u81eaAzure\u548c\u5176\u5b83\u4e91\u670d\u52a1\u3001Office 365 Commercial\u3001LinkedIn\u7684\u5546\u4e1a\u90e8\u5206\u548cDynamics 365\u7684\u6536\u5165\uff0c\u6700\u8fd1\u4e00\u4e2a\u5b63\u5ea6\u8fbe\u5230234\u4ebf\u7f8e\u5143\uff0c\u540c\u6bd4\u589e\u957f32%\u3002\u56e0\u6b64\uff0c\u6309\u5e74\u5316\u8ba1\u7b97\uff0c\u5fae\u8f6f\u4e91\u6536\u5165\u76ee\u524d\u4e3a 936\u4ebf\u7f8e\u5143\u3002\u4e0d\u8fc7\uff0c\u5fae\u8f6f\u5e76\u672a\u660e\u786e\u62ab\u9732Azure\u6536\u5165\uff0c\u8fd9\u610f\u5473\u7740Azure\u53ea\u662f\u5fae\u8f6f\u4e91\u603b\u6536\u5165\u7684\u4e00\u90e8\u5206\u3002</p>"},{"location":"ecology/provider/aaghot/#3gcp","title":"3\u3001\u8c37\u6b4c\u4e91\u5e73\u53f0\uff08GCP\uff09","text":"<p>\u8c37\u6b4c\u4e91\u5e73\u53f0 (GCP) \u662fAlphabet Inc \u7684\u4e00\u90e8\u5206\uff0c\u662f\u5168\u7403\u7b2c\u4e09\u5927\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u63d0\u4f9b\u4f01\u4e1a\u7ea7\u4e91\u670d\u52a1\u3002GCP\u4f7f\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u5728\u5176\u5206\u5e03\u5f0f\u548c\u53ef\u6269\u5c55\u7684\u57fa\u7840\u67b6\u6784\u4e0a\u6784\u5efa\u3001\u6d4b\u8bd5\u548c\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\uff0c\u540c\u65f6\u5229\u7528\u8be5\u670d\u52a1\u5728\u5b89\u5168\u3001\u6570\u636e\u7ba1\u7406\u3001\u5206\u6790\u548c\u4eba\u5de5\u667a\u80fd (AI) \u65b9\u9762\u7684\u529f\u80fd\u3002</p> <p>\u8c37\u6b4c\u4e91\u76ee\u524d\u670934\u4e2a\u533a\u57df\u548c103\u4e2a\u53ef\u7528\u533a\u673a\u623f\u5728\u8fd0\u884c\u3002\u8fd9\u4e9b\u533a\u57df\u548c\u53ef\u7528\u6027\u533a\u57df\u904d\u5e03\u7f8e\u56fd\u3001\u7f8e\u6d32\u3001\u6b27\u6d32\u548c\u4e9a\u592a\u5730\u533a\u3002</p> <p>Alphabet Inc\u7684\u8c37\u6b4c\u4e91\u90e8\u95e8\u4ece\u5176\u57fa\u7840\u8bbe\u65bd\u3001\u5e73\u53f0\u548c\u5176\u4ed6\u670d\u52a1\u6536\u53d6\u7684\u8d39\u7528\u4e2d\u8d5a\u53d6\u6536\u5165\u3002\u5728\u6700\u8fd1\u4e00\u4e2a\u5b63\u5ea6\uff0c\u8c37\u6b4c\u4e91\u521b\u9020\u4e8658\u4ebf\u7f8e\u5143\u7684\u6536\u5165\uff0c\u540c\u6bd4\u589e\u957f\u8fd144%\u3002\u56e0\u6b64\uff0c\u6309\u5e74\u8ba1\u7b97\uff0c\u8c37\u6b4c\u4e91\u4ea7\u751f\u4e86233\u4ebf\u7f8e\u5143\u7684\u6536\u5165\u3002</p>"},{"location":"ecology/provider/aaghot/#4","title":"4\u3001\u963f\u91cc\u4e91","text":"<p>\u963f\u91cc\u5df4\u5df4\u96c6\u56e2\u7684\u4e91\u8ba1\u7b97\u90e8\u95e8\uff0c\u5373\u963f\u91cc\u4e91\uff0c\u662f\u5168\u7403\u7b2c\u56db\u5927\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u3001\u4e9a\u592a\u5730\u533a\u4e3b\u8981\u4e91\u4f9b\u5e94\u5546\u548c\u4e2d\u56fd\u6700\u5927\u7684\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u3002\u901a\u8fc7\u963f\u91cc\u4e91\uff0c\u8be5\u4e1a\u52a1\u63d0\u4f9b\u4e91\u670d\u52a1\uff0c\u5305\u62ec\u5f39\u6027\u8ba1\u7b97\u3001\u6570\u636e\u5e93\u3001\u5b58\u50a8\u3001\u7f51\u7edc\u865a\u62df\u5316\u3001\u5927\u89c4\u6a21\u8ba1\u7b97\u3001\u5b89\u5168\u3001\u7ba1\u7406\u548c\u5e94\u7528\u670d\u52a1\u3001\u5927\u6570\u636e\u5206\u6790\u548c\u673a\u5668\u5b66\u4e60\u3002</p> <p>\u963f\u91cc\u4e91\u76ee\u524d\u670927\u4e2a\u533a\u57df\u548c84\u4e2a\u53ef\u7528\u533a\u5728\u8fd0\u884c\u3002\u5728\u4e2d\u56fd\u5927\u9646\uff0c\u963f\u91cc\u5df4\u5df4\u662f\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u5728\u5168\u56fd\u62e5\u670910\u591a\u4e2a\u5730\u533a\u3002\u5728\u4e2d\u56fd\u5927\u9646\u4e4b\u5916\uff0c\u963f\u91cc\u4e91\u5728\u7f8e\u56fd\u3001\u6b27\u6d32\u3001\u4e9a\u592a\u5730\u533a\u548c\u4e2d\u4e1c\u5f00\u5c55\u4e1a\u52a1\u3002</p> <p>\u963f\u91cc\u5df4\u5df4\u96c6\u56e2\u4e3b\u8981\u6839\u636e\u4f01\u4e1a\u5ba2\u6237\u670d\u52a1\u7684\u6301\u7eed\u65f6\u95f4\u548c\u4f7f\u7528\u60c5\u51b5\u4ece\u4f01\u4e1a\u5ba2\u6237\u90a3\u91cc\u83b7\u5f97\u4e91\u8ba1\u7b97\u6536\u5165\u3002\u8be5\u516c\u53f8\u7684\u4e91\u4e1a\u52a1\u5728\u6700\u8fd1\u4e00\u4e2a\u5b63\u5ea6\u5b9e\u73b0\u4e8629.9\u4ebf\u7f8e\u5143\uff08189.71\u4ebf\u5143\u4eba\u6c11\u5e01\uff09\u7684\u6536\u5165\uff0c\u540c\u6bd4\u589e\u957f12%\u3002\u56e0\u6b64\uff0c\u6309\u5e74\u5316\u8ba1\u7b97\uff0c\u963f\u91cc\u4e91\u6536\u5165\u76ee\u524d\u63a5\u8fd1120\u4ebf\u7f8e\u5143\u3002</p>"},{"location":"ecology/provider/aaghot/#5","title":"5\u3001\u7532\u9aa8\u6587\u4e91","text":"<p>Oracle Corporation\u4e91\u670d\u52a1\u4ea7\u54c1\u5305\u62ecOracle\u4e91\u8f6f\u4ef6\u5373\u670d\u52a1 (SaaS) \u548cOracle\u4e91\u57fa\u7840\u8bbe\u65bd\uff08OCI\uff09\u3002\u901a\u8fc7OCI\uff0c\u8be5\u516c\u53f8\u6210\u4e3a\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u63d0\u4f9b\u57fa\u7840\u8bbe\u65bd\u6280\u672f\u5373\u670d\u52a1\uff0c\u5305\u62ec\u8ba1\u7b97\u3001\u5b58\u50a8\u548c\u7f51\u7edc\u670d\u52a1\u3002</p> <p>\u7532\u9aa8\u6587\u4e91\u76ee\u524d\u670938\u4e2a\u533a\u57df\u548c46\u4e2a\u53ef\u7528\u6027\u533a\u57df\u673a\u623f\u5728\u8fd0\u884c\u3002\u8fd9\u4e9b\u533a\u57df\u548c\u53ef\u7528\u6027\u533a\u57df\u904d\u5e03\u7f8e\u56fd\u3001\u52a0\u62ff\u5927\u3001\u6b27\u6d32\u3001\u4e2d\u4e1c\u548c\u975e\u6d32 (EMEA)\u3001\u62c9\u4e01\u7f8e\u6d32\u548c\u4e9a\u592a\u5730\u533a\u3002\u6b64\u5916\uff0cOracle\u4e91\u8fd8\u4e3a\u7f8e\u56fd\u653f\u5e9c\u3001\u7f8e\u56fd\u56fd\u9632\u90e8 (DoD) \u548c\u82f1\u56fd\u653f\u5e9c\u63d0\u4f9b\u653f\u5e9c\u4e91\u533a\u57df\u670d\u52a1\u3002</p> <p>Oracle Cloud Infrastructure\uff08OCI\uff09\u901a\u5e38\u6536\u53d6\u9884\u4ed8\u8d39\u7528\uff0c\u968f\u7740\u5ba2\u6237\u5728\u5b9a\u4e49\u7684\u65f6\u95f4\u6bb5\u5185\u4f7f\u7528\u5176OCI\u670d\u52a1\uff0c\u8be5\u8d39\u7528\u4f1a\u9010\u6e10\u51cf\u5c11\u3002\u5728\u6700\u8fd1\u4e00\u4e2a\u5b63\u5ea6\uff0c\u5305\u62ecIaaS\u548cSaaS\u5728\u5185\u7684Oracle\u4e91\u6536\u5165\u8fbe\u523029\u4ebf\u7f8e\u5143\uff0c\u540c\u6bd4\u589e\u957f 19%\u3002\u56e0\u6b64\uff0c\u6309\u5e74\u8ba1\u7b97\uff0c\u7532\u9aa8\u6587\u4e91\u4ea7\u751f\u4e86116\u4ebf\u7f8e\u5143\u7684\u6536\u5165\u3002</p>"},{"location":"ecology/provider/aaghot/#6ibmkyndryl","title":"6\u3001IBM\u4e91\uff08Kyndryl\uff09","text":"<p>2021\u5e74\u5e95\uff0cIBM\u5c06\u5176\u6258\u7ba1\u57fa\u7840\u8bbe\u65bd\u670d\u52a1\u4e1a\u52a1\u5206\u79bb\u7ed9Kyndryl\uff0c\u540e\u8005\u73b0\u5728\u4e3a\u5176\u63d0\u4f9b\u5ba2\u6237\u8bbe\u8ba1\u3001\u6784\u5efa\u548c\u7ba1\u7406\u79c1\u6709\u3001\u516c\u6709\u548c\u591a\u4e91\u73af\u5883\u7b49\u670d\u52a1\u3002IBM Cloud (Kyndryl) \u76ee\u524d\u670911\u4e2a\u533a\u57df\u548c29\u4e2a\u53ef\u7528\u6027\u533a\u57df\u5728\u8fd0\u884c\u3002\u8fd9\u4e9b\u533a\u57df\u548c\u53ef\u7528\u6027\u533a\u57df\u5206\u5e03\u5728\u7f8e\u56fd\u3001\u7f8e\u6d32\u3001\u6b27\u6d32\u548c\u4e9a\u592a\u5730\u533a\u3002</p> <p>Kyndryl\u4e91\u670d\u52a1\u90e8\u95e8\u901a\u8fc7\u6574\u5408\u72ec\u7acb\u8f6f\u4ef6\u4f9b\u5e94\u5546\u3001\u516c\u5171\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u3001\u5185\u90e8\u5e73\u53f0\u548c\u7269\u8054\u7f51\uff08IoT\uff09\u7b49\u6280\u672f\u63d0\u4f9b\u7684\u670d\u52a1\uff0c\u5e2e\u52a9\u4f01\u4e1a\u4f18\u5316\u5bf9\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u7684\u4f7f\u7528\u3002\u4e3a\u6b64\uff0cKyndryl\u6700\u8fd1\u4e0eMicrosoft Azure\u548cGoogle Cloud \u5efa\u7acb\u4e86\u65b0\u7684\u6218\u7565\u5173\u7cfb\u3002</p>"},{"location":"ecology/provider/aaghot/#7","title":"7\u3001\u817e\u8baf\u4e91","text":"<p>\u817e\u8baf\u63a7\u80a1\u7684\u4e91\u8ba1\u7b97\u90e8\u95e8\uff0c\u88ab\u79f0\u4e3a\u817e\u8baf\u4e91\uff0c\u662f\u4e2d\u56fd\u7b2c\u4e8c\u5927\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u4ec5\u6b21\u4e8e\u963f\u91cc\u4e91\u3002\u76ee\u524d\uff0c\u817e\u8baf\u4e91\u670921\u4e2a\u5730\u57df\u548c65\u4e2a\u53ef\u7528\u533a\u5728\u8fd0\u884c\u3002\u6b64\u5916\uff0c\u52a0\u4e0a\u817e\u8baf\u4e91\u76845\u4e2a\u5408\u4f5c\u533a\u57df\uff0c\u516c\u53f8\u5171\u63d0\u4f9b26\u4e2a\u533a\u57df\u548c70\u4e2a\u53ef\u7528\u533a\u3002</p> <p>\u9664\u5408\u4f5c\u4f19\u4f34\u5730\u533a\u5916\uff0c\u817e\u8baf\u4e91\u5728\u4e2d\u56fd\u5927\u9646\u3001\u7f8e\u56fd\u3001\u5df4\u897f\u3001\u5fb7\u56fd\u548c\u4e9a\u592a\u5730\u533a\u4e5f\u5f00\u5c55\u4e86\u4e1a\u52a1\u3002</p>"},{"location":"ecology/provider/aaghot/#8ovhcloud","title":"8\u3001OVHcloud","text":"<p>OVHcloud\u662f\u4e00\u5bb6\u4e13\u6ce8\u4e8e\u6b27\u6d32\u7684\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u63d0\u4f9b\u7684\u89e3\u51b3\u65b9\u6848\u5305\u62ec\u88f8\u673a\u548c\u6258\u7ba1\u79c1\u6709\u4e91\u3001\u516c\u5171\u4e91\u548c\u7f51\u7edc\u4e91\u670d\u52a1\u3002</p> <p>\u76ee\u524d\uff0cOVHcloud\u572813\u4e2a\u5730\u70b9\u8fd0\u8425\uff0c\u5305\u62ec33\u4e2a\u6570\u636e\u4e2d\u5fc3\u548c400,000\u53f0\u7269\u7406\u670d\u52a1\u5668\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cOVHcloud\u62e5\u6709\u5176\u8fd0\u8425\u768433\u4e2a\u6570\u636e\u4e2d\u5fc3\u4e2d\u768430\u4e2a\u3002\u8fd9\u4e9b\u6570\u636e\u4e2d\u5fc3\u5206\u5e03\u57288\u4e2a\u56fd\u5bb6\uff0c\u5373\u6cd5\u56fd\u3001\u52a0\u62ff\u5927\u3001\u7f8e\u56fd\u3001\u6fb3\u5927\u5229\u4e9a\u3001\u5fb7\u56fd\u3001\u6ce2\u5170\u3001\u82f1\u56fd\u548c\u65b0\u52a0\u5761\u3002</p> <p>OVHcloud\u4e3a\u8d85\u8fc7160\u4e07\u5ba2\u6237\u63d0\u4f9b\u57df\u540d\u3001\u7f51\u7edc\u6258\u7ba1\u8ba1\u5212\u548c\u4e91\u89e3\u51b3\u65b9\u6848\u3002\u5728\u8fd9\u4e00\u603b\u6570\u4e2d\uff0c\u8be5\u516c\u53f8\u7684\u5ba2\u6237\u4e2d\u7ea6\u6709800\u5bb6\u662f\u4f01\u4e1a\u3002\u5728\u4ef7\u503c\u4e3b\u5f20\u65b9\u9762\uff0cOVHcloud\u8fd0\u8425\u7684\u662f\u4f4e\u6210\u672c\u6a21\u5f0f\uff0c\u5e76\u4e14\u901a\u5e38\u5728\u4ef7\u683c\u4e0a\u8fdb\u884c\u7ade\u4e89\u3002</p>"},{"location":"ecology/provider/aaghot/#9digitalocean","title":"9\u3001DigitalOcean","text":"<p>DigitalOcean\u662f\u4e00\u5bb6\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u4e3a\u5f00\u53d1\u4eba\u5458\u3001\u521d\u521b\u4f01\u4e1a\u548c\u4e2d\u5c0f\u578b\u4f01\u4e1a (SMB) \u7b49\u5c0f\u578b\u5ba2\u6237\u63d0\u4f9b\u6309\u9700\u57fa\u7840\u8bbe\u65bd\u548c\u5e73\u53f0\u5de5\u5177\u3002</p> <p>\u5982\u4eca\uff0cDigitalOcean\u5728\u517614\u4e2a\u6570\u636e\u4e2d\u5fc3\u8fd0\u8425\u77408\u4e2a\u533a\u57df\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5305\u62ec\u7ebd\u7ea6\u5e02\u548c\u65e7\u91d1\u5c71metro markets\u4ee5\u53ca\u52a0\u62ff\u5927\u591a\u4f26\u591a\u79df\u8d41\u6570\u636e\u4e2d\u5fc3\uff1b\u82f1\u56fd\u4f26\u6566\uff1b\u8377\u5170\u963f\u59c6\u65af\u7279\u4e39\uff1b\u5fb7\u56fd\u6cd5\u5170\u514b\u798f\uff1b\u5370\u5ea6\u73ed\u52a0\u7f57\u5c14\uff1b\u548c\u65b0\u52a0\u5761\u3002</p> <p>DigitalOcean\u9762\u5411\u8d85\u8fc7185\u4e2a\u56fd\u5bb6/\u5730\u533a\u7684620,000\u540d\u5ba2\u6237\u63d0\u4f9b\u5176\u57fa\u7840\u67b6\u6784\u548c\u8f6f\u4ef6\u89e3\u51b3\u65b9\u6848\u3002\u4e0e\u5176\u4ed6\u4e91\u670d\u52a1\u5668\u5546\u5bb6\u4e0d\u540c\u7684\u662f\uff0cDigitalOcean\u7ea670%\u7684\u6536\u5165\u6765\u81ea\u7f8e\u56fd\u4ee5\u5916\u7684\u5730\u533a\u3002\u4e0eOVHcloud\u7c7b\u4f3c\uff0cDigitalOcean \u5728\u4ef7\u683c\u4e0a\u5c55\u5f00\u7ade\u4e89\uff0c\u901a\u5e38\u6bd4\u6700\u5927\u7684\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u7684\u6210\u672c\u6548\u76ca\u9ad8\u51fa50%\u4ee5\u4e0a\u3002</p>"},{"location":"ecology/provider/aaghot/#10linodeakamai","title":"10\u3001Linode\uff08Akamai\uff09","text":"<p>2022\u5e743 \u6708\uff0c\u5185\u5bb9\u5206\u53d1\u7f51\u7edc\uff08CDN\uff09\u548c\u5b89\u5168\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u5546Akamai Technologies\u4ee59\u4ebf\u7f8e\u5143\u6536\u8d2d\u4e86Linode\u3002</p> <p>Linode\u76ee\u524d\u670911\u4e2a\u6570\u636e\u4e2d\u5fc3\u533a\u57df\u5728\u8fd0\u884c\uff0c\u901a\u8fc7\u8fd9\u4e9b\u533a\u57df\u4ee5\u5bb9\u5668\u548c\u865a\u62df\u673a\u7684\u5f62\u5f0f\u63d0\u4f9b\u8ba1\u7b97\uff0c\u4ee5\u53ca\u5b58\u50a8\u670d\u52a1\u3002\u516c\u53f8\u7684\u6570\u636e\u4e2d\u5fc3\u4f4d\u4e8e\u65b0\u6cfd\u897f\u5dde\u7ebd\u74e6\u514b\u5e02\u573a\uff1b\u7f8e\u56fd\u4f50\u6cbb\u4e9a\u5dde\u4e9a\u7279\u5170\u5927; \u5f97\u514b\u8428\u65af\u5dde\u8fbe\u62c9\u65af\uff1b\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u5f17\u91cc\u8499\u7279\uff1b\u52a0\u62ff\u5927\u591a\u4f26\u591a\uff1b\u82f1\u56fd\u4f26\u6566\uff1b\u5fb7\u56fd\u6cd5\u5170\u514b\u798f\uff1b\u65e5\u672c\u4e1c\u4eac; \u65b0\u52a0\u5761; \u5370\u5ea6\u5b5f\u4e70\uff1b\u548c\u6fb3\u5927\u5229\u4e9a\u6089\u5c3c\u3002</p> <p>Linode\u7684\u57fa\u7840\u67b6\u6784\u5373\u670d\u52a1\uff08IaaS\uff09\u5e73\u53f0\u4ee5\u5176\u4e91\u8ba1\u7b97\u529f\u80fd\u4e3a\u5168\u7403100\u4e07\u5ba2\u6237\u548c\u4f01\u4e1a\u63d0\u4f9b\u670d\u52a1\u3002\u8be5\u516c\u53f8\u4ee5\u4ef7\u683c\u7ade\u4e89\uff0c\u4e13\u6ce8\u4e8e\u4e3a\u5f00\u53d1\u4eba\u5458\u4ee5\u53ca\u521d\u521b\u4f01\u4e1a\u548c\u4f01\u4e1a\u63d0\u4f9b\u670d\u52a1\u3002</p>"},{"location":"ecology/provider/aaghot/#_2","title":"\u54ea\u4e2a\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u62e5\u6709\u6700\u5927\u7684\u5e02\u573a\u4efd\u989d\uff1f","text":"<p>\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1\uff08AWS\uff09\u3001\u5fae\u8f6fAzure\u548c\u8c37\u6b4c\u4e91\u5e73\u53f0\uff08GCP\uff09\u662f\u5e02\u573a\u4efd\u989d\u6700\u5927\u7684\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u5408\u8ba1\u5360\u636e\u4e86\u4e91\u57fa\u7840\u8bbe\u65bd\u670d\u52a1\u652f\u51fa\u768465%\u4ee5\u4e0a\u3002\u4ee5\u4e0b\u662f\u6309\u5e02\u573a\u4efd\u989d\u6392\u540d\u524d10\u4f4d\u7684\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u7684\u6c47\u603b\u8868\uff0c\u7a81\u51fa\u663e\u793a\u4e86AWS\u768434%\u5e02\u573a\u4efd\u989d\u3001Microsoft Azure\u768422%\u5e02\u573a\u4efd\u989d\u548cGoogle Cloud\u76849.5%\u5e02\u573a\u4efd\u989d\u3002</p> \u4e91\u670d\u52a1\u63d0\u4f9b\u5546 \u5e02\u573a\u4efd\u989d 1 \u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1AWS\uff09 34% 2 \u5fae\u8f6fAzure 22% 3 \u8c37\u6b4c\u4e91\u5e73\u53f0\uff08GCP\uff09 9.5% 4 \u963f\u91cc\u4e91 6% 5 \u7532\u9aa8\u6587\u4e91 2% 6 IBM\u4e91\uff08Kyndryl\uff09 2% 7 \u817e\u8baf\u4e91 2% 8 OVH\u4e91 &lt;1% 9 DigitalOcean &lt;1% 10 Linode\u4e91 &lt;1% <p>\u5728\u8fc7\u53bb5\u5e74\u4e2d\uff0cAWS\u7684\u5e02\u573a\u4efd\u989d\u4e00\u76f4\u4fdd\u6301\u572830%\u4ee5\u4e0b\uff0cMicrosoft Azure\u7684\u5e02\u573a\u4efd\u989d\u4ece\u5386\u53f2\u4e0a\u768410%\u5de6\u53f3\u4e0d\u65ad\u4e0a\u5347\uff0c\u800c\u5fae\u8f6fAzure\u7684\u5e02\u573a\u4efd\u989d\u4e00\u76f4\u5728\u7a33\u6b65\u589e\u957f5%\u7684\u57fa\u6570\u3002\u5728\u5e02\u573a\u4efd\u989d\u83b7\u5f97\u8005\u7684\u540c\u65f6\uff0c\u8fd9\u6bb5\u65f6\u95f4\u4e5f\u6709\u76f8\u5e94\u7684\u5e02\u573a\u4efd\u989d\u8f93\u5bb6\uff0c\u5176\u4e2d\u5305\u62ecIBM Cloud\uff08Kyndryl\uff09\u548c\u4e00\u4e9b\u5c0f\u578b\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u3002</p>"},{"location":"ecology/provider/aaghot/#_3","title":"\u8c01\u662f\u5c0f\u578b\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\uff1f","text":"<p>\u867d\u7136\u524d\u5341\u5927\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u5360\u636e\u4e86\u7ea677%\u7684\u4e91\u57fa\u7840\u8bbe\u65bd\u670d\u52a1\u652f\u51fa\uff0c\u4f46\u5168\u7403\u5e02\u573a\u4e0a\u4ecd\u7136\u5b58\u5728\u5927\u91cf\u5c0f\u578b\u4f9b\u5e94\u5546\u3002\u4f8b\u5982\uff0c\u8fd9\u4e9b\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u5305\u62ec\u90a3\u4e9b\u9488\u5bf9\u7279\u5b9a\u5229\u57fa\u5e02\u573a\u7684\u63d0\u4f9b\u5546\uff0c\u4f8b\u5982\u4e2d\u5c0f\u578b\u4f01\u4e1a\uff08SMB\uff09\u6216\u5728\u6b27\u6d32\u6216\u4e9a\u592a\u5730\u533a\u7b49\u533a\u57df\u8fd0\u8425\u7684\u63d0\u4f9b\u5546\u3002\u4ee5\u4e0b\u662f\u8fd9\u4e9b\u5c0f\u578b\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u7684\u793a\u4f8b\uff1a</p> <ul> <li>\u4e2d\u56fd\uff1a\u767e\u5ea6AI\u4e91\u3001\u534e\u4e3a\u4e91\u3001\u91d1\u5c71\u4e91\u3001\u4eac\u4e1c\u4e91\u3001\u9752\u4e91\u3001UCloud</li> <li>\u6b27\u6d32\uff1a Bleu\uff08Orange\u548cCapgemini\uff09\u3001Hetzner\u3001Leaseweb</li> <li>\u65e5\u97e9\uff1a\u00a0Fujitsu\u3001NTT\u3001SoftBank\u3001NAVER Cloud\u3001KT Cloud</li> <li>\u79c1\u6709\u4e91/\u6258\u7ba1\u670d\u52a1\uff1a\u00a0Hewlett Packard Enterprise\u3001Rackspace\u3001VMware</li> <li>SaaS\u5408\u4f5c\u4f19\u4f34\uff1a\u00a0Salesforce\u3001SAP</li> <li>\u4e2d\u5c0f\u4f01\u4e1a\uff1a\u00a0Heroku\u3001UpCloud\u3001Vultr</li> </ul> <p>\u5728\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u5e02\u573a\u4e2d\uff0c\u6258\u7ba1\u670d\u52a1\u63d0\u4f9b\u5546\uff08\u5982Rackspace\uff09\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u533a\u522b\u3002\u6258\u7ba1\u670d\u52a1\u63d0\u4f9b\u5546\u5e2e\u52a9\u4f01\u4e1a\u5c06\u5de5\u4f5c\u8d1f\u8f7d\u8fc1\u79fb\u3001\u6784\u5efa\u548c\u90e8\u7f72\u5230\u516c\u5171\u4e91\u3002\u968f\u540e\uff0c\u8fd9\u4e9b\u6258\u7ba1\u670d\u52a1\u63d0\u4f9b\u5546\u8de8\u591a\u4e2a\u73af\u5883\uff08\u5305\u62ec\u516c\u5171\u4e91\u3001\u79c1\u6709\u4e91\u548c\u5185\u90e8\u90e8\u7f72\uff09\u4e3a\u5176\u5ba2\u6237\u201c\u7ba1\u7406\u201dIT \u57fa\u7840\u8bbe\u65bd\u3002\u901a\u8fc7\u8fd9\u79cd\u5546\u4e1a\u6a21\u5f0f\uff0c\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u4ecd\u7136\u662f IT \u57fa\u7840\u8bbe\u65bd\u7684\u6700\u7ec8\u6240\u6709\u8005\u548c\u63d0\u4f9b\u8005\u3002</p>"},{"location":"ecology/provider/aaghot/#_4","title":"\u4ec0\u4e48\u662f\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\uff1f","text":"<p>\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u4e3a\u5f00\u53d1\u4eba\u5458\u3001\u521d\u521b\u4f01\u4e1a\u3001\u4e2d\u5c0f\u578b\u4f01\u4e1a\u548c\u5927\u578b\u4f01\u4e1a\u63d0\u4f9b\u6309\u9700\u57fa\u7840\u67b6\u6784\u548c\u5de5\u5177\uff0c\u4ee5\u6784\u5efa\u3001\u90e8\u7f72\u548c\u6269\u5c55\u5176\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u548c\u6570\u636e\u5e93\u3002\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u8fd0\u8425\u7684\u4e24\u4e2a\u4e3b\u8981\u5e02\u573a\u88ab\u79f0\u4e3a\u57fa\u7840\u8bbe\u65bd\u5373\u670d\u52a1 (IaaS) \u548c\u5e73\u53f0\u5373\u670d\u52a1 (PaaS)\uff0c\u5b83\u4eec\u5305\u62ec\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <ul> <li>\u57fa\u7840\u67b6\u6784\u5373\u670d\u52a1\uff08IaaS\uff09\uff1a\u8ba1\u7b97\u3001\u5b58\u50a8\u548c\u7f51\u7edc\u3002</li> <li>\u5e73\u53f0\u5373\u670d\u52a1 (PaaS)\uff1a\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u548c\u5e94\u7528\u7a0b\u5e8f\u5e73\u53f0\u3002</li> </ul> <p>\u501f\u52a9\u8fd9\u79cd\u7ec4\u5408\u7684IaaS\u548cPaaS\u57fa\u7840\u67b6\u6784\uff0c\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u652f\u6301\u5e7f\u6cdb\u7684\u7528\u4f8b\uff0c\u5305\u62ecWeb\u548c\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u3001\u7f51\u7ad9\u6258\u7ba1\u3001\u7535\u5b50\u5546\u52a1\u3001\u5a92\u4f53\u548c\u6e38\u620f\u3001\u6258\u7ba1\u670d\u52a1\u7b49\u7b49\u3002\u8fd9\u4e9b\u8ba1\u7b97\u548c\u5b58\u50a8\u670d\u52a1\u4f9d\u8d56\u4e8e\u63d0\u4f9b\u9ad8\u5ea6\u53ef\u6269\u5c55\u6027\u548c\u8fde\u7eed\u6027\u7684\u5171\u4eab\u670d\u52a1\u5668\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5ba2\u6237\u4ee5\u6309\u4f7f\u7528\u4ed8\u8d39\u7684\u65b9\u5f0f\u4f7f\u7528\u4e91\u8ba1\u7b97\u670d\u52a1\u3002</p> <p>\u6b64\u5916\uff0c\u67d0\u4e9b\u516c\u5171\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u63d0\u4f9b\u8f6f\u4ef6\u5373\u670d\u52a1 (SaaS)\uff0c\u5b83\u6307\u7684\u662f\u6700\u7ec8\u7528\u6237\u5e94\u7528\u7a0b\u5e8f\u3002</p>"},{"location":"ecology/provider/aaghot/#_5","title":"\u6570\u5b57\u57fa\u7840\u8bbe\u65bd","text":"<p>\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u56f4\u7ed5\u6240\u8c13\u7684\u533a\u57df\u548c\u53ef\u7528\u6027\u533a\u57df\uff08\u673a\u623f\uff09\u6784\u5efa\u4ed6\u4eec\u7684\u6570\u5b57\u57fa\u7840\u8bbe\u65bd\u3002\u533a\u57df\u662f\u4e16\u754c\u4e0a\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u62e5\u6709\u591a\u4e2a\u53ef\u7528\u6027\u533a\u57df\u7684\u7269\u7406\u4f4d\u7f6e\u3002\u8fd9\u4e9b\u53ef\u7528\u6027\u533a\u57df\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u9694\u79bb\u7684\u6570\u636e\u4e2d\u5fc3\u7ec4\u6210\uff0c\u8fd9\u4e9b\u6570\u636e\u4e2d\u5fc3\u4f4d\u4e8e\u4e0d\u540c\u7684\u5efa\u7b51\u7269\u4e2d\uff0c\u6bcf\u4e2a\u6570\u636e\u4e2d\u5fc3\u90fd\u5177\u6709\u5197\u4f59\u7535\u6e90\u3001\u51b7\u5374\u3001\u7f51\u7edc\u548c\u5149\u7ea4\u8fde\u63a5\u3002</p> <p>\u53ef\u7528\u6027\u533a\u57df\u4f7f\u6700\u7ec8\u7528\u6237\u80fd\u591f\u8fd0\u884c\u6bd4\u5355\u4e2a\u6570\u636e\u4e2d\u5fc3\u5177\u6709\u66f4\u9ad8\u53ef\u7528\u6027\u3001\u5bb9\u9519\u6027\u548c\u53ef\u6269\u5c55\u6027\u7684\u751f\u4ea7\u5e94\u7528\u7a0b\u5e8f\u548c\u6570\u636e\u5e93\u3002</p>"},{"location":"ecology/provider/aaghot/#_6","title":"\u865a\u62df\u5316","text":"<p>\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u901a\u8fc7\u865a\u62df\u5316\u5c06\u81ea\u5df1\u4e0e\u5355\u4e2a\u670d\u52a1\u5668\u548c\u6570\u636e\u4e2d\u5fc3\u7684\u529f\u80fd\u533a\u5206\u5f00\u6765\uff0c\u8fd9\u610f\u5473\u7740\u5728\u786c\u4ef6\u548c\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u6dfb\u52a0\u4e00\u4e2a\u62bd\u8c61\u5c42\u3002\u53cd\u8fc7\u6765\uff0c\u865a\u62df\u5316\u4f7f\u591a\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u548c\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u5728\u540c\u4e00\u53f0\u7269\u7406\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u3002\u56e0\u6b64\uff0c\u865a\u62df\u5316\u4fc3\u8fdb\u4e86\u4e91\u7684\u5173\u952e\u7ade\u4e89\u4f18\u52bf\uff0c\u5305\u62ec\u53ef\u6269\u5c55\u6027\u3001\u6700\u5927\u5316\u8d44\u6e90\u5229\u7528\u7387\u4ee5\u53ca\u4ee5\u66f4\u4f4e\u7684\u8fd0\u8425\u8d39\u7528\u914d\u7f6e\u66f4\u591a\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002</p>"},{"location":"ecology/provider/aaghot/#5_1","title":"\u4e91\u8ba1\u7b97\u76845\u5927\u4f18\u52bf\u662f\u4ec0\u4e48\uff1f","text":"<p>\u4e91\u8ba1\u7b97\u76845\u5927\u4f18\u52bf\u662f\u53ef\u6269\u5c55\u6027\u3001\u6309\u4f7f\u7528\u4ed8\u8d39\u3001\u5feb\u901f\u90e8\u7f72\u3001\u4e00\u7ad9\u5f0f\u548c\u5168\u7403\u8bbf\u95ee\uff1a</p> <ol> <li>\u53ef\u6269\u5c55\u6027\uff1a\u4f01\u4e1a\u7684\u5185\u90e8IT\u7cfb\u7edf\u53ef\u80fd\u65e0\u6cd5\u6269\u5c55\u4ee5\u6ee1\u8db3\u5de5\u4f5c\u8d1f\u8f7d\u7684\u9ad8\u5cf0\u9700\u6c42\uff0c\u9664\u975e\u5b83\u4eec\u4fdd\u6301\u8fc7\u5269\u5bb9\u91cf\u2014\u2014\u4f46\u8fd9\u662f\u6602\u8d35\u7684\u3002\u901a\u8fc7\u4f7f\u7528\u4e91\u8ba1\u7b97\uff0c\u5ba2\u6237\u53ef\u4ee5\u5373\u65f6\u589e\u52a0\u6216\u51cf\u5c11\u4ed6\u4eec\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u5bb9\u91cf\u9700\u6c42\u4ee5\u6ee1\u8db3\u4e1a\u52a1\u9700\u6c42</li> <li>\u6309\u4f7f\u7528\u4ed8\u8d39\uff1a\u5ba2\u6237\u65e0\u9700\u5728\u4e86\u89e3\u6570\u636e\u4e2d\u5fc3\u548c\u670d\u52a1\u5668\u5c06\u5982\u4f55\u4f7f\u7528\u4e4b\u524d\u5c31\u5c06\u8d44\u672c\u652f\u51fa\u6295\u5165\u5230\u6570\u636e\u4e2d\u5fc3\u548c\u670d\u52a1\u5668\u4e2d\uff0c\u5ba2\u6237\u53ef\u4ee5\u4ec5\u5728\u4f7f\u7528\u8ba1\u7b97\u8d44\u6e90\u65f6\u4ed8\u8d39\uff0c\u5e76\u4e14\u53ea\u4e3a\u4f7f\u7528\u591a\u5c11\u4ed8\u8d39\u3002</li> <li>\u5feb\u901f\u90e8\u7f72\u548c\u654f\u6377\u6027\uff1a\u53ea\u9700\u5355\u51fb\u51e0\u4e0b\uff0c\u5373\u53ef\u5728\u4e91\u8ba1\u7b97\u73af\u5883\u4e2d\u914d\u7f6e\u65b0\u7684IT\u8d44\u6e90\u3002\u56e0\u6b64\uff0c\u5ba2\u6237\u53ef\u4ee5\u5c06\u5411\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u8fd9\u4e9b\u8d44\u6e90\u7684\u65f6\u95f4\u4ece\u51e0\u5468\u7f29\u77ed\u5230\u51e0\u5206\u949f\u3002</li> <li>\u4e00\u7ad9\u5f0f\uff1a\u4e91\u8ba1\u7b97\u4f7f\u5ba2\u6237\u9664\u4e86\u907f\u514d\u5bf9\u5176\u6570\u636e\u4e2d\u5fc3\u8fdb\u884c\u6301\u7eed\u7ef4\u62a4\u5916\uff0c\u8fd8\u53ef\u4ee5\u907f\u514d\u5bf9\u670d\u52a1\u5668\u8fdb\u884c\u673a\u67b6\u3001\u5806\u53e0\u548c\u4f9b\u7535\u3002</li> <li>\u5168\u7403\u7f51\u7edc\u8986\u76d6\uff1a\u53ea\u9700\u70b9\u51fb\u51e0\u4e0b\uff0c\u5373\u53ef\u5728\u5168\u7403\u591a\u4e2a\u5730\u533a\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u5e94\u7528\u7a0b\u5e8f\u5177\u6709\u66f4\u4f4e\u7684\u5ef6\u8fdf\u5e76\u4e3a\u6700\u7ec8\u7528\u6237\u63d0\u4f9b\u66f4\u597d\u7684\u4f53\u9a8c\u3002</li> </ol> <p>\u4e0e\u6b64\u540c\u65f6\uff0c\u5927\u91cf\u4f01\u4e1a\u6b63\u5728\u8f6c\u5411\u6df7\u5408\u4e91\u548c\u591a\u4e91\u73af\u5883\uff0c\u4ee5\u907f\u514d\u4f9b\u5e94\u5546\u9501\u5b9a\uff0c\u5e76\u4fdd\u6301\u5728\u66f4\u5b89\u5168\u7684\u73af\u5883\u4e2d\u6258\u7ba1\u654f\u611f\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7075\u6d3b\u6027\u3002\u4ee5\u4e0b\u662f\u6df7\u5408\u4e91\u548c\u591a\u4e91\u7684\u5b9a\u4e49\uff1a</p> <ul> <li>\u6df7\u5408\u4e91\uff1a\u5728\u4e0d\u540c\u73af\u5883\uff08\u5305\u62ec\u5185\u90e8\u90e8\u7f72\u3001\u79c1\u6709\u4e91\u548c\u516c\u5171\u4e91\uff09\u7684\u7ec4\u5408\u4e2d\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\u3002</li> <li>\u591a\u4e91\uff1a\u4e0e\u591a\u4e2a\u516c\u5171\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u7684\u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\uff0c\u800c\u4e0d\u662f\u4ec5\u4f7f\u7528\u5355\u4e2a\u516c\u5171\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u3002</li> </ul>"},{"location":"ecology/provider/aaghot/#_7","title":"\u54ea\u4e2a\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u6700\u4fbf\u5b9c\uff1f","text":"<p>\u54ea\u4e2a\u662f\u6700\u4fbf\u5b9c\u7684\u4e91\u63d0\u4f9b\u5546\uff1f\u548c\u4e91\u8ba1\u7b97\u670d\u52a1\u7684\u6210\u672c\u662f\u591a\u5c11\uff1f\uff0c\u8fd9\u91cc\u7b80\u5355\u6574\u7406\u4e86Linode\u6700\u8fd1\u7684\u6bd4\u8f83\uff0c\u8be5\u6bd4\u8f83\u7814\u7a76\u4e86CPU\u4e13\u7528/\u4f18\u53162vCPU\u30014GB RAM\u300180GB SSD\u90e8\u7f72\u7684\u6bcf\u6708\u6210\u672c\u3002\u4ee5\u4e0b\u662f\u56db\u5927\u516c\u5171\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\uff08\u5373\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1\u3001\u5fae\u8f6fAzure\u3001\u8c37\u6b4c\u4e91\u5e73\u53f0\u548c\u963f\u91cc\u4e91\uff09\u9488\u5bf9\u6b64\u90e8\u7f72\u7684\u6bcf\u6708\u6210\u672c\u6c47\u603b\uff1a</p> \u4e91\u670d\u52a1\u63d0\u4f9b\u5546 \u6bcf\u6708\u79df\u7528\u8d39\u7528 \u9ad8\u51fa\u6bd4 1 \u963f\u91cc\u4e91 48.42\u7f8e\u5143 \u2014 2 \u8c37\u6b4c\u4e91\u5e73\u53f0 \uff08GCP\uff09 63.38\u7f8e\u5143 31% 3 \u5fae\u8f6f\u5929Azure 70.05\u7f8e\u5143 45% 4 \u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1\uff08AWS\uff09 71.47\u7f8e\u5143 48% <p>\u5982\u4e0a\u4f8b\u6240\u793a\uff0c\u5bf9\u4e8eCPU Dedicated/Optimized 2vCPU\u30014GB RAM\u300180GB SSD\u90e8\u7f72\uff0c\u963f\u91cc\u4e91\u662f\u6700\u4fbf\u5b9c\u7684\u516c\u5171\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u6bcf\u670848.42\u7f8e\u5143\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1 (AWS) \u662f\u6700\u6602\u8d35\u7684\u516c\u5171\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u6bcf\u6708\u6210\u672c\u4e3a71.47\u7f8e\u5143\uff0c\u6bd4\u963f\u91cc\u4e91\u9ad8\u51fa48%\u3002</p> <p>\u867d\u7136\u4e0a\u9762\u7684\u5206\u6790\u7a81\u51fa\u4e86\u5927\u578b\u4f9b\u5e94\u5546\u4e2d\u6700\u4fbf\u5b9c\u7684\u516c\u5171\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0cOVHcloud\u3001DigitalOcean\u548cLinode\u7b49\u8f83\u5c0f\u7684\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u662f\u6700\u5177\u6210\u672c\u6548\u76ca\u7684\u3002\u4e0eAWS\u3001\u5fae\u8f6fAzure\u3001\u8c37\u6b4c\u4e91\u548c\u963f\u91cc\u4e91\u76f8\u6bd4\uff0c\u8fd9\u4e9b\u516c\u53f8\u7684\u4ef7\u683c\u901a\u5e38\u81f3\u5c11\u4fbf\u5b9c20%\u523035%\uff0c\u800c\u4e14\u901a\u5e38\u5927\u591a\u6570\u662f\u4fbf\u5b9c50%\u4ee5\u4e0a\u3002</p>"},{"location":"ecology/provider/cloudflare/","title":"\u4e91\u5382\u5546 cloudflare\uff1acloud for the \u201ceverywhere world\u201d","text":""},{"location":"ecology/provider/cloudflare/#cloudflare","title":"cloudflare\u516c\u53f8\u7b80\u4ecb","text":"<p>Cloudflare \u662f\u4e00\u5bb6\u5185\u5bb9\u5206\u53d1\u7f51\u7edc (CDN) \u548c\u7f51\u7edc\u5b89\u5168\u516c\u53f8\uff0cCloudflare \u7531 Matthew Prince \u548c Lee Holloway \u4e8e 2009 \u5e74\u521b\u7acb\u3002\u8be5\u516c\u53f8\u5728\u5168\u7403\u62e5\u6709\u8d85\u8fc7 200 \u4e2a\u6570\u636e\u4e2d\u5fc3\uff0c\u4e3a\u8d85\u8fc7 20 \u4ebf\u4eba\u63d0\u4f9b\u670d\u52a1\u3002\u603b\u90e8\u4f4d\u4e8e\u7f8e\u56fd\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u65e7\u91d1\u5c71\u3002Cloudflare \u63d0\u4f9b\u5185\u5bb9\u4ea4\u4ed8\u7f51\u7edc (CDN)\u3001\u7f51\u7edc\u5b89\u5168\u3001\u57df\u540d\u6ce8\u518c\u3001DNS \u670d\u52a1\u3001\u5168\u7ad9 SSL/TLS \u52a0\u5bc6\u7b49\u670d\u52a1\uff0c\u5e2e\u52a9\u7f51\u7ad9\u548c\u5e94\u7528\u7a0b\u5e8f\u63d0\u9ad8\u6027\u80fd\u3001\u5b89\u5168\u6027\u548c\u53ef\u9760\u6027\u3002</p> <p>\u6bd4\u5982\u77e5\u540d\u7684 <code>1.1.1.1</code> DNS\u670d\u52a1\u5c31\u662f\u8be5\u516c\u53f8\u63d0\u4f9b\u7684\uff0c\u5bf9\u6807Google\u7684 <code>8.8.8.8</code> \uff0c\u90fd\u6bd4\u8f83\u597d\u8bb0\u3002\u50cf Cloudflare\u2019s SSE &amp; SASE Platform \u96f6\u4fe1\u4efb\u7f51\u7edc\u4e5f\u662f\u4e1a\u754c\u7684\u4f7c\u4f7c\u8005\u3002</p> <p>What is Cloudflare?</p>"},{"location":"ecology/provider/cloudflare/#cloudflare_1","title":"Cloudflare \u7684\u4e3b\u8981\u670d\u52a1","text":"slogan: Helping build a better Internet <ul> <li>CDN\uff1a Cloudflare \u7684 CDN \u6709\u904d\u5e03\u5168\u7403\u7684\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u5e2e\u52a9\u63d0\u9ad8\u7f51\u7ad9\u7684\u901f\u5ea6\u548c\u53ef\u9760\u6027\uff0c\u901a\u8fc7\u4ece\u8ddd\u79bb\u7528\u6237\u6700\u8fd1\u7684\u670d\u52a1\u5668\u63d0\u4f9b\u5185\u5bb9\u3002</li> <li>\u5b89\u5168\uff1a Cloudflare \u63d0\u4f9b\u5404\u79cd\u5b89\u5168\u670d\u52a1\uff0c\u4f8b\u5982 DDoS \u4fdd\u62a4\u3001Web \u5e94\u7528\u7a0b\u5e8f\u9632\u706b\u5899 (WAF) \u548c DNSSEC\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4fdd\u62a4\u7f51\u7ad9\u514d\u53d7\u653b\u51fb\u3002</li> <li>\u5206\u6790\uff1a Cloudflare \u63d0\u4f9b\u7f51\u7ad9\u5206\u6790\u670d\u52a1\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7f51\u7ad9\u6240\u6709\u8005\u4e86\u89e3\u7f51\u7ad9\u7684\u6d41\u91cf\u548c\u6027\u80fd\u3002</li> <li>\u5f00\u53d1\uff1a Cloudflare \u63d0\u4f9b\u5f00\u53d1\u5de5\u5177\u548c API\uff0c\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u6784\u5efa\u548c\u90e8\u7f72\u7f51\u7ad9\u3002</li> </ul> <p>Cloudflare \u7684\u670d\u52a1\u7531\u514d\u8d39\u548c\u4ed8\u8d39\u8ba1\u5212\u63d0\u4f9b\u3002\u514d\u8d39\u8ba1\u5212\u63d0\u4f9b\u57fa\u672c\u7684 CDN \u548c\u5b89\u5168\u529f\u80fd\uff0c\u800c\u4ed8\u8d39\u8ba1\u5212\u63d0\u4f9b\u66f4\u591a\u529f\u80fd\u548c\u652f\u6301\u3002Cloudflare \u7684\u5ba2\u6237\u5305\u62ec\u5168\u7403\u6570\u767e\u4e07\u7f51\u7ad9\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4e9b\u6700\u5927\u7684\u548c\u6700\u53d7\u6b22\u8fce\u7684\u7f51\u7ad9\uff0c\u5982 Google\u3001Facebook \u548c Wikipedia\u3002</p> <p>cloudflare Products</p>"},{"location":"ecology/provider/cloudflare/#cdn","title":"CDN","text":"<p>Cloudflare \u7684 CDN \u6709\u904d\u5e03\u5168\u7403\u7684 200 \u591a\u4e2a\u6570\u636e\u4e2d\u5fc3\uff0c\u53ef\u4ee5\u5e2e\u52a9\u63d0\u9ad8\u7f51\u7ad9\u7684\u901f\u5ea6\u548c\u53ef\u9760\u6027\u3002\u5f53\u7528\u6237\u8bbf\u95ee\u7f51\u7ad9\u65f6\uff0cCloudflare \u4f1a\u5c06\u8bf7\u6c42\u8def\u7531\u5230\u8ddd\u79bb\u7528\u6237\u6700\u8fd1\u7684\u670d\u52a1\u5668\u3002\u8fd9\u53ef\u4ee5\u51cf\u5c11\u5ef6\u8fdf\u5e76\u63d0\u9ad8\u7f51\u7ad9\u7684\u54cd\u5e94\u901f\u5ea6\u3002</p> <p>Cloudflare \u7684 CDN \u8fd8\u53ef\u4ee5\u5e2e\u52a9\u63d0\u9ad8\u7f51\u7ad9\u7684\u53ef\u9760\u6027\u3002\u5982\u679c\u7f51\u7ad9\u7684\u4e3b\u673a\u670d\u52a1\u5668\u53d1\u751f\u6545\u969c\uff0cCloudflare \u53ef\u4ee5\u5c06\u6d41\u91cf\u8def\u7531\u5230\u5907\u7528\u670d\u52a1\u5668\u3002\u8fd9\u53ef\u4ee5\u786e\u4fdd\u7f51\u7ad9\u59cb\u7ec8\u53ef\u7528\u3002</p>"},{"location":"ecology/provider/cloudflare/#_1","title":"\u5b89\u5168","text":"<p>Cloudflare \u63d0\u4f9b\u5404\u79cd\u5b89\u5168\u670d\u52a1\u6765\u4fdd\u62a4\u7f51\u7ad9\u514d\u53d7\u653b\u51fb\u3002\u8fd9\u4e9b\u670d\u52a1\u5305\u62ec\uff1a</p> <ul> <li>DDoS \u4fdd\u62a4\uff1a Cloudflare \u53ef\u4ee5\u5e2e\u52a9\u4fdd\u62a4\u7f51\u7ad9\u514d\u53d7\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1 (DDoS) \u653b\u51fb\u3002DDoS \u653b\u51fb\u662f\u6307\u5927\u91cf\u6765\u81ea\u4e0d\u540c\u6765\u6e90\u7684\u6076\u610f\u6d41\u91cf\uff0c\u65e8\u5728\u4f7f\u7f51\u7ad9\u762b\u75ea\u3002</li> <li>Web \u5e94\u7528\u7a0b\u5e8f\u9632\u706b\u5899 (WAF)\uff1a Cloudflare \u7684 WAF \u53ef\u4ee5\u5e2e\u52a9\u4fdd\u62a4\u7f51\u7ad9\u514d\u53d7\u5404\u79cd\u653b\u51fb\uff0c\u5305\u62ec SQL \u6ce8\u5165\u3001\u8de8\u7ad9\u811a\u672c\u653b\u51fb (XSS) \u548c\u62d2\u7edd\u670d\u52a1\u653b\u51fb\u3002</li> <li>DNSSEC\uff1a DNSSEC \u53ef\u4ee5\u5e2e\u52a9\u4fdd\u62a4 DNS \u67e5\u8be2\u514d\u53d7\u653b\u51fb\u3002DNS \u662f\u7528\u4e8e\u5c06\u57df\u540d\u8f6c\u6362\u4e3a IP \u5730\u5740\u7684\u7cfb\u7edf\u3002</li> </ul>"},{"location":"ecology/provider/cloudflare/#_2","title":"\u5206\u6790","text":"<p>Cloudflare \u63d0\u4f9b\u7f51\u7ad9\u5206\u6790\u670d\u52a1\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7f51\u7ad9\u6240\u6709\u8005\u4e86\u89e3\u7f51\u7ad9\u7684\u6d41\u91cf\u548c\u6027\u80fd\u3002\u8fd9\u4e9b\u670d\u52a1\u5305\u62ec\uff1a</p> <ul> <li>Web \u6027\u80fd\u5206\u6790\uff1a Cloudflare \u53ef\u4ee5\u5e2e\u52a9\u7f51\u7ad9\u6240\u6709\u8005\u4e86\u89e3\u7f51\u7ad9\u7684\u6027\u80fd\uff0c\u5305\u62ec\u9875\u9762\u52a0\u8f7d\u65f6\u95f4\u548c\u7528\u6237\u4f53\u9a8c\u3002</li> <li>\u6d41\u91cf\u5206\u6790\uff1a Cloudflare \u53ef\u4ee5\u5e2e\u52a9\u7f51\u7ad9\u6240\u6709\u8005\u4e86\u89e3\u7f51\u7ad9\u7684\u6d41\u91cf\u6765\u6e90\u548c\u8d8b\u52bf\u3002</li> <li>\u5b89\u5168\u5206\u6790\uff1a Cloudflare \u53ef\u4ee5\u5e2e\u52a9\u7f51\u7ad9\u6240\u6709\u8005\u4e86\u89e3\u7f51\u7ad9\u7684\u5b89\u5168\u72b6\u51b5\u3002</li> </ul>"},{"location":"ecology/provider/cloudflare/#_3","title":"\u5f00\u53d1","text":"<p>Cloudflare \u63d0\u4f9b\u5f00\u53d1\u5de5\u5177\u548c API\uff0c\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u6784\u5efa\u548c\u90e8\u7f72\u7f51\u7ad9\u3002\u8fd9\u4e9b\u5de5\u5177\u548c API \u5305\u62ec\uff1a</p> <ul> <li>Cloudflare Workers\uff1a Cloudflare Workers \u662f\u4e00\u4e2a\u65e0\u670d\u52a1\u5668\u5e73\u53f0\uff0c\u53ef\u4ee5\u8ba9\u5f00\u53d1\u4eba\u5458\u5728 Cloudflare \u7f51\u7edc\u4e0a\u8fd0\u884c\u4ee3\u7801\u3002</li> <li>Cloudflare Pages\uff1a Cloudflare Pages \u662f\u4e00\u4e2a\u6258\u7ba1\u670d\u52a1\uff0c\u53ef\u4ee5\u8ba9\u5f00\u53d1\u4eba\u5458\u5feb\u901f\u6784\u5efa\u548c\u90e8\u7f72\u9759\u6001\u7f51\u7ad9\u3002</li> <li>Cloudflare API\uff1a Cloudflare API \u53ef\u4ee5\u8ba9\u5f00\u53d1\u4eba\u5458\u4e0e Cloudflare \u670d\u52a1\u8fdb\u884c\u4ea4\u4e92\u3002</li> </ul> <p>Cloudflare \u662f\u4e00\u5bb6\u9886\u5148\u7684 CDN \u548c\u7f51\u7edc\u5b89\u5168\u516c\u53f8\uff0c\u63d0\u4f9b\u5404\u79cd\u670d\u52a1\u6765\u5e2e\u52a9\u63d0\u9ad8\u7f51\u7ad9\u7684\u6027\u80fd\u548c\u5b89\u5168\u6027\u3002\u5982\u679c\u60a8\u6b63\u5728\u5bfb\u627e\u4e00\u79cd\u65b9\u6cd5\u6765\u63d0\u9ad8\u7f51\u7ad9\u7684\u6027\u80fd\u548c\u5b89\u5168\u6027\uff0cCloudflare \u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002</p>"},{"location":"ecology/provider/cloudflare/#_4","title":"\u7ade\u4e89\u4e0e\u4f18\u52bf","text":""},{"location":"ecology/provider/cloudflare/#cloudflare_2","title":"Cloudflare \u7684\u4e3b\u8981\u7ade\u4e89\u5bf9\u624b","text":"<ul> <li>Zscaler\uff1a Zscaler \u662f\u4e00\u5bb6\u9886\u5148\u7684\u96f6\u4fe1\u4efb\u7f51\u7edc\u516c\u53f8\uff0c\u63d0\u4f9b\u57fa\u4e8e\u4e91\u7684\u96f6\u4fe1\u4efb\u7f51\u7edc\u89e3\u51b3\u65b9\u6848\u3002</li> <li>Fastly\uff1a Fastly \u662f\u4e00\u5bb6\u5185\u5bb9\u5206\u53d1\u7f51\u7edc (CDN) \u516c\u53f8\uff0c\u63d0\u4f9b CDN \u548c\u5b89\u5168\u670d\u52a1\u3002</li> <li>Akamai\uff1a Akamai \u662f\u4e00\u5bb6\u9886\u5148\u7684 CDN \u516c\u53f8\uff0c\u63d0\u4f9b CDN \u548c\u5b89\u5168\u670d\u52a1\u3002</li> <li>Imperva\uff1a Imperva \u662f\u4e00\u5bb6\u7f51\u7edc\u5b89\u5168\u516c\u53f8\uff0c\u63d0\u4f9b DDoS \u4fdd\u62a4\u3001Web \u5e94\u7528\u7a0b\u5e8f\u9632\u706b\u5899 (WAF) \u548c\u5e94\u7528\u7a0b\u5e8f\u5b89\u5168\u6d4b\u8bd5 (AST) \u7b49\u670d\u52a1\u3002</li> <li>F5 Networks\uff1a F5 Networks \u662f\u4e00\u5bb6\u7f51\u7edc\u5b89\u5168\u516c\u53f8\uff0c\u63d0\u4f9b DDoS \u4fdd\u62a4\u3001Web \u5e94\u7528\u7a0b\u5e8f\u9632\u706b\u5899 (WAF) \u548c\u5e94\u7528\u7a0b\u5e8f\u4ea4\u4ed8\u63a7\u5236\u5668 (ADC) \u7b49\u670d\u52a1\u3002</li> <li>Palo Alto Networks: Palo Alto Networks \u662f\u4e00\u5bb6\u603b\u90e8\u4f4d\u4e8e\u7f8e\u56fd\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u5723\u4f55\u585e\u7684\u7f51\u7edc\u5b89\u5168\u516c\u53f8\u3002Palo Alto Networks \u63d0\u4f9b\u5404\u79cd\u7f51\u7edc\u5b89\u5168\u4ea7\u54c1\u548c\u89e3\u51b3\u65b9\u6848\uff0c\u5305\u62ec\u9632\u706b\u5899\u3001\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf (IDS) \u548c\u5165\u4fb5\u9884\u9632\u7cfb\u7edf (IPS)\u3002</li> </ul>"},{"location":"ecology/provider/cloudflare/#cloudflare_3","title":"Cloudflare \u7684\u4e3b\u8981\u7ade\u4e89\u4f18\u52bf","text":"<ol> <li>\u5168\u7403\u8986\u76d6\u8303\u56f4\uff1a Cloudflare \u62e5\u6709\u904d\u5e03\u5168\u7403\u7684 200 \u591a\u4e2a\u6570\u636e\u4e2d\u5fc3\uff0c\u53ef\u4ee5\u4e3a\u5168\u7403\u7528\u6237\u63d0\u4f9b\u670d\u52a1\u3002</li> <li>\u514d\u8d39\u8ba1\u5212\uff1a Cloudflare \u63d0\u4f9b\u514d\u8d39\u8ba1\u5212\uff0c\u53ef\u4ee5\u6ee1\u8db3\u4e2d\u5c0f\u4f01\u4e1a\u7684\u9700\u6c42\u3002</li> <li>\u6613\u7528\u6027\uff1a Cloudflare \u7684\u670d\u52a1\u6613\u4e8e\u8bbe\u7f6e\u548c\u4f7f\u7528\uff0c\u5373\u4f7f\u662f\u6ca1\u6709\u6280\u672f\u7ecf\u9a8c\u7684\u7528\u6237\u4e5f\u53ef\u4ee5\u4f7f\u7528\u3002</li> </ol>"},{"location":"kubernetes/cert-manager/","title":"Cert manager","text":"<p>kubectl create deployment web --image=gcr.io/google-samples/hello-app:1.0 kubectl expose deployment web --port=8080 kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.1/cert-manager.yaml</p> <p>[root@ccetest-28382 ~]# kubectl get pods -o wide NAME                   READY   STATUS    RESTARTS   AGE   IP           NODE            NOMINATED NODE   READINESS GATES web-84fb9498c7-hb8wj   1/1     Running   0          81s   172.16.0.9   192.168.0.222     [root@ccetest-28382 ~]# curl 172.16.0.9:8080 Hello, world! Version: 1.0.0 Hostname: web-84fb9498c7-hb8wj <p>[root@ccetest-28382 ~]# kubectl -n cert-manager get all NAME                                          READY   STATUS    RESTARTS        AGE pod/cert-manager-6856c9896b-wtnpn             1/1     Running   1 (4m36s ago)   4m48s pod/cert-manager-cainjector-fc54fdc88-h848s   1/1     Running   0               4m48s pod/cert-manager-webhook-68496779c4-mhtg5     1/1     Running   0               4m48s</p> <p>NAME                           TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE service/cert-manager           ClusterIP   10.247.114.49           9402/TCP   4m48s service/cert-manager-webhook   ClusterIP   10.247.24.88            443/TCP    4m48s <p>NAME                                      READY   UP-TO-DATE   AVAILABLE   AGE deployment.apps/cert-manager              1/1     1            1           4m48s deployment.apps/cert-manager-cainjector   1/1     1            1           4m48s deployment.apps/cert-manager-webhook      1/1     1            1           4m48s</p> <p>NAME                                                DESIRED   CURRENT   READY   AGE replicaset.apps/cert-manager-6856c9896b             1         1         1       4m48s replicaset.apps/cert-manager-cainjector-fc54fdc88   1         1         1       4m48s replicaset.apps/cert-manager-webhook-68496779c4     1         1         1       4m48s</p> <p>kubectl explain Certificate kubectl explain CertificateRequest kubectl explain Issuer</p> <p>apiVersion: networking.k8s.io/v1 kind: Ingress metadata:   name: webingress   namespace: default   annotations:     kubernetes.io/elb.port: '80'     kubernetes.io/elb.class: performance     kubernetes.io/elb.autocreate: '{\"name\":\"testelb\",\"type\":\"public\",\"bandwidth_name\":\"cce-bandwidth-1696357100304\",\"bandwidth_chargemode\":\"traffic\",\"bandwidth_size\":5,\"bandwidth_sharetype\":\"PER\",\"eip_type\":\"5_bgp\",\"available_zone\":[\"la-north-2a\"],\"elb_virsubnet_ids\":[\"4d18b0fc-cfff-47e6-8801-bd2595093753\"],\"ipv6_vip_virsubnet_id\":\"4d18b0fc-cfff-47e6-8801-bd2595093753\",\"l7_flavor_name\":\"L7_flavor.elb.s1.small\",\"l4_flavor_name\":\"\"}' spec:   rules:     - host: test.361way.com       http:         paths:           - path: /             backend:               service:                 name: webnode                 port:                   number: 8080             property:               ingress.beta.kubernetes.io/url-match-mode: STARTS_WITH             pathType: ImplementationSpecific   ingressClassName: cce</p> <p>[root@ccetest-28382 ~]# vim https-issuer.yaml [root@ccetest-28382 ~]# kubectl apply -f https-issuer.yaml issuer.cert-manager.io/letsencrypt-staging created [root@ccetest-28382 ~]# kubectl describe issuers.cert-manager.io letsencrypt-staging Name:         letsencrypt-staging Namespace:    default Labels:        Annotations:   API Version:  cert-manager.io/v1 Kind:         Issuer Metadata:   Creation Timestamp:  2023-10-03T18:23:31Z   Generation:          1   Managed Fields:     API Version:  cert-manager.io/v1     Fields Type:  FieldsV1 \u2026\u2026\u2026\u2026\u2026\u2026     Manager:         cert-manager-issuers     Operation:       Update     Subresource:     status     Time:            2023-10-03T18:23:32Z   Resource Version:  9611   UID:               aa53aa37-ca02-4844-a771-c58d9209dc99 Spec:   Acme:     Email:  itybku@gmail.com     Private Key Secret Ref:       Name:  letsencrypt-staging     Server:  https://acme-staging-v02.api.letsencrypt.org/directory     Solvers:       http01:         Ingress:           Name:  webingress Status:   Acme:     Last Private Key Hash:  EjBRE8svSIkKk5DMCCiuEhS4nr2HRJGfktU3Z7j2U8o=     Last Registered Email:  itybku@gmail.com     Uri:                    https://acme-staging-v02.api.letsencrypt.org/acme/acct/120612354   Conditions:     Last Transition Time:  2023-10-03T18:23:32Z     Message:               The ACME account was registered with the ACME server     Observed Generation:   1     Reason:                ACMEAccountRegistered     Status:                True     Type:                  Ready Events:"},{"location":"kubernetes/cert-manager/#secretyaml","title":"secret.yaml","text":"<p>apiVersion: v1 kind: Secret metadata:   name: web-ssl type: kubernetes.io/tls stringData:   tls.key: \"\"   tls.crt: \"\"</p> <p>kubectl apply -f secret.yaml</p> <p>apiVersion: networking.k8s.io/v1 kind: Ingress metadata:   name: ingresshttps   namespace: default   annotations:     kubernetes.io/elb.port: '443'     kubernetes.io/elb.id: 8df86b16-bae3-414b-b0c7-ad4172d80f6e     kubernetes.io/elb.class: performance     kubernetes.io/elb.tls-ciphers-policy: tls-1-2     cert-manager.io/issuer: letsencrypt-staging spec:   rules:     - host: test.361way.com       http:         paths:           - path: /             backend:               service:                 name: webnode                 port:                   number: 8080             property:               ingress.beta.kubernetes.io/url-match-mode: STARTS_WITH             pathType: ImplementationSpecific   ingressClassName: cce   tls:     - secretName: web-ssl</p> <p>apiVersion: networking.k8s.io/v1 kind: Ingress metadata:   name: httpstest   namespace: default   annotations:     kubernetes.io/elb.port: '443'     kubernetes.io/elb.class: performance     cert-manager.io/issuer: letsencrypt-staging     kubernetes.io/elb.autocreate: '{\"name\":\"httpselb\",\"type\":\"public\",\"bandwidth_name\":\"cce-bandwidth-1696358134629\",\"bandwidth_chargemode\":\"traffic\",\"bandwidth_size\":5,\"bandwidth_sharetype\":\"PER\",\"eip_type\":\"5_bgp\",\"available_zone\":[\"la-north-2a\"],\"elb_virsubnet_ids\":[\"4d18b0fc-cfff-47e6-8801-bd2595093753\"],\"ipv6_vip_virsubnet_id\":\"4d18b0fc-cfff-47e6-8801-bd2595093753\",\"l7_flavor_name\":\"L7_flavor.elb.s1.small\",\"l4_flavor_name\":\"\"}' spec:   rules:     - host: test.361way.com       http:         paths:           - path: /             backend:               service:                 name: webnode                 port:                   number: 8080             property:               ingress.beta.kubernetes.io/url-match-mode: STARTS_WITH             pathType: ImplementationSpecific   ingressClassName: cce   tls:     - secretName: web-ssl</p>"},{"location":"kubernetes/configmap-fromfile/","title":"configmap \u8bfb\u53d6\u6587\u4ef6","text":"<p>ConfigMap\u7528\u4e8e\u4fdd\u5b58\u914d\u7f6e\u3002\u65e2\u53ef\u4ee5\u4fdd\u5b58\u4e3a\u952e\u503c\u5bf9\u683c\u5f0f\uff0c\u4e5f\u53ef\u662f\u4fdd\u5b58\u4e3a\u914d\u7f6e\u6587\u4ef6\u3002\u53ef\u4ee5\u5728Pod\u7684\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u76f4\u63a5\u5f15\u7528config map\u7684\u503c\u3002\u6216\u8005\u662f\u5728\u6570\u636e\u5377(volume)\u4e2d\u5f15\u7528config map\uff0c\u628aconfig map\u4e2d\u7684\u5185\u5bb9\u4ee5\u6587\u4ef6\u5f62\u5f0f\u653e\u5728volume\u4e2d\u3002</p> <p>\u4e0a\u4e00\u7bc7\u4e2d\u6211\u4eec\u901a\u8fc7<code>from-literal=key1=config1</code>\u7684\u65b9\u5f0f\u521b\u5efaconfigmap\uff0c\u5e76\u5728\u5bb9\u5668\u4e2d\u901a\u8fc7\u53d8\u91cf\u6620\u5c04\u7684\u65b9\u5f0f\u4f7f\u7528\u3002\u672c\u7bc7\u8bb2\u4e0b<code>--from-file</code>\u548c<code>--from-env-file</code>\u7684\u7528\u6cd5\uff0c\u5e76\u901a\u8fc7volume\u7684\u65b9\u5f0f\u6620\u5c04\u4e3a\u5bb9\u5668\u5185\u7684configmap\u6587\u4ef6\u3002</p>"},{"location":"kubernetes/configmap-fromfile/#_1","title":"\u4e00\u3001\u5e2e\u52a9\u4fe1\u606f","text":"<p>\u901a\u8fc7 <code>kubectl create configmap -h</code> \u7684\u5e2e\u52a9\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u5230\u4ee5\u4e0bconfigmap\u7684\u914d\u7f6e\u793a\u4f8b\uff1a</p> <pre><code>Examples:\n  # Create a new configmap named my-config based on folder bar\n  kubectl create configmap my-config --from-file=path/to/bar\n\n  # Create a new configmap named my-config with specified keys instead of file basenames on disk\n  kubectl create configmap my-config --from-file=key1=/path/to/bar/file1.txt --from-file=key2=/path/to/bar/file2.txt\n\n  # Create a new configmap named my-config with key1=config1 and key2=config2\n  kubectl create configmap my-config --from-literal=key1=config1 --from-literal=key2=config2\n\n  # Create a new configmap named my-config from the key=value pairs in the file\n  kubectl create configmap my-config --from-file=path/to/bar\n\n  # Create a new configmap named my-config from an env file\n  kubectl create configmap my-config --from-env-file=path/to/bar.env\n</code></pre> <p>\u4ece\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230<code>--from-file</code> \u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u6709\u591a\u4e2a\u6587\u4ef6\u7684\u76ee\u5f55\uff0c\u4e5f\u53ef\u4ee5\u662f\u591a\u4e2a\u5355\u6587\u4ef6\uff0c\u901a\u8fc7\u6307\u5b9a\u4e0d\u540c\u7684key\u6765\u6620\u5c04\u5bf9\u5e94\u7684\u6587\u4ef6\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5176\u8fd8\u6709<code>--from-env-file</code>\u4e00\u6837\u7684\u7528\u6cd5\uff0c\u5bf9\u5e94\u7684\u6587\u4ef6\u91cc\u4f7f\u7528k/v \u5065\u503c\u5bf9\u7684\u65b9\u5f0f\u5b58\u76f8\u5173\u53d8\u91cf\u4fe1\u606f\u3002</p>"},{"location":"kubernetes/configmap-fromfile/#volume","title":"\u4e8c\u3001volume\u65b9\u5f0f\u6302\u8f7d\u5355\u4e2a\u914d\u7f6e\u6587\u4ef6","text":"<p>1. \u521b\u5efa\u914d\u7f6e\u6587\u4ef6</p> <pre><code>#\u521b\u5efa\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6 \uff08\u5047\u8bbe\u662fredis\uff09\ncat &gt; redis.properties &lt;&lt;EOF\nredis.host=127.0.0.1\nredis.port=6379\nredis.password=123456\nEOF\n</code></pre> <p>2. \u521b\u5efaconfimap</p> <pre><code>#\u83b7\u53d6yaml\n[root@test-64626 ~]# kubectl create configmap redis-config --from-file=redis.properties -o yaml --dry-run=client &gt; redis-config-configmap.yaml\n[root@test-64626 ~]# more redis-config-configmap.yaml\napiVersion: v1\ndata:\n  redis.properties: |\n    redis.host=127.0.0.1\n    redis.port=6379\n    redis.password=123456\nkind: ConfigMap\nmetadata:\n  creationTimestamp: null\n  name: redis-config\n</code></pre> <p>3. \u90e8\u7f72</p> <pre><code>kubectl create -f redis-config-configmap.yaml\n</code></pre> <p>4. \u67e5\u770b\u8be6\u7ec6\u4fe1\u606f</p> <pre><code>[root@test-64626 ~]# kubectl describe configmap redis-config\nName:         redis-config\nNamespace:    default\nLabels:       &lt;none&gt;\nAnnotations:  &lt;none&gt;\n\nData\n====\nredis.properties:\n----\nredis.host=127.0.0.1\nredis.port=6379\nredis.password=123456\n\nEvents:  &lt;none&gt;\n</code></pre> <p>5. \u521b\u5efapod\u5e76\u6dfb\u52a0\u6302\u8f7d</p> <pre><code># \u521b\u5efapod\uff0c\u5e76\u6253\u5370volume\u6302\u8f7d\u540e\u7684\u6587\u4ef6\u4fe1\u606f\napiVersion: v1\nkind: Pod\nmetadata:\n  name: mypod\nspec:\n  containers:\n    - name: busybox\n      image: busybox\n      command: [ \"/bin/sh\",\"-c\",\"cat /etc/config/redis.properties\" ]\n           #\u6267\u884c\u547d\u4ee4,\u5c06\u6302\u8f7d\u7684\u6587\u4ef6\u4fe1\u606f\u8f93\u51fa\n\n      volumeMounts:        #\u6302\u8f7d\u5230\u5bb9\u5668\n      - name: config-volume\n        mountPath: /etc/config    #\u6302\u8f7d\u7684\u76ee\u5f55\n  volumes:\n    - name: config-volume\n      configMap:              #\u6307\u5b9a\u4e3aconfigmap\u6587\u4ef6\n        name: redis-config      #\u521a\u624d\u521b\u5efa\u7684redis-config\u7684cm\u6587\u4ef6\n  restartPolicy: Never\n\n#\u90e8\u7f72\nkubectl create -f cm.yaml\n</code></pre> <p>6. \u67e5\u770b\u5bb9\u5668\u4fe1\u606f</p> <pre><code># Completed\u8868\u793a\u5b8c\u6210\u5e76\u9000\u51fa\uff0c\u56e0\u4e3a\u8fd9\u91cc\u53ea\u6267\u884c\u4e86cat\u6587\u4ef6,\u6240\u4ee5\u5b8c\u6210\u5c31\u9000\u51fa\u4e86\n[root@test-64626 ~]# kubectl get pods\nNAME                 READY   STATUS      RESTARTS   AGE\nmypod                0/1     Completed   0          22s\n[root@test-64626 ~]# kubectl logs mypod\nredis.host=127.0.0.1\nredis.port=6379\nredis.password=123456\n</code></pre> <p>\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8e\u66f4\u65b0/etc/nginx/conf.d\u76ee\u5f55\u4e0b\u7684\u865a\u62df\u914d\u7f6e\u6587\u4ef6\u3002</p>"},{"location":"kubernetes/configmap/","title":"\u4f7f\u7528 configmap","text":"<p>ConfigMap \u529f\u80fd\u5728 Kubernetes1.2 \u7248\u672c\u7684\u65f6\u5019\u5c31\u6709\u4e86\uff0c\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u4f1a\u4ece\u914d\u7f6e\u6587\u4ef6\u3001\u547d\u4ee4\u884c\u53c2\u6570\u6216\u73af\u5883\u53d8\u91cf\u4e2d\u8bfb\u53d6\u914d\u7f6e\u4fe1\u606f\u3002\u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\u9700\u8981\u4e0e docker image \u89e3\u8026\uff0cConfigMap API \u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u5411\u5bb9\u5668\u4e2d\u6ce8\u5165\u914d\u7f6e\u4fe1\u606f\u7684\u673a\u5236\uff0cConfigMap \u53ef\u4ee5\u88ab\u7528\u6765\u4fdd\u5b58\u5355\u4e2a\u5c5e\u6027\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u4fdd\u5b58\u6574\u4e2a\u914d\u7f6e\u6587\u4ef6\u6216\u8005 JSON \u4e8c\u8fdb\u5236\u5927\u5bf9\u8c61\u3002</p> <p>\u672c\u7bc7\u5148\u4ece\u73af\u5883\u53d8\u91cf\u5f00\u59cb\u3002</p> <pre><code>[root@test-64626 ~]# kubectl create configmap myconfigmap --from-literal=user.name=itybku --from-literal=user.id=1001 \n\n# \u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528yaml\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u751f\u6210myconfigmap\u7684yaml\u6587\u4ef6\n[root@test-64626 ~]# kubectl create configmap myconfigmap --from-literal=user.name=itybku --from-literal=user.id=1001 -o\n yaml --dry-run=client\napiVersion: v1\ndata:\n  user.id: \"1001\"\n  user.name: itybku\nkind: ConfigMap\nmetadata:\n  creationTimestamp: null\n  name: myconfigmap\n\n[root@test-64626 ~]# kubectl describe configmaps myconfigmap\nName:         myconfigmap\nNamespace:    default\nLabels:       &lt;none&gt;\nAnnotations:  &lt;none&gt;\n\nData\n====\nuser.id:\n----\n1001\nuser.name:\n----\nitybku\nEvents:  &lt;none&gt;\n</code></pre>"},{"location":"kubernetes/configmap/#1key","title":"\u73af\u5883\u53d8\u91cf\u65b9\u5f0f\u5f15\u7528\u65b9\u5f0f1\uff1akey\u5f15\u7528","text":"<pre><code>[root@test-64626 ~]# cat create-pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: configmap-test-pod\nspec:\n  containers:\n    - name: nginx-container\n      image: nginx:latest\n      env:\n        - name: ENV_VAR_USERNAME\n          valueFrom:\n            configMapKeyRef:\n              name: myconfigmap\n              key: user.name\n        - name: ENV_VAR_ID\n          valueFrom:\n            configMapKeyRef:\n              name: myconfigmap\n              key: user.id\n  restartPolicy: Never\n\n[root@test-64626 ~]# kubectl create -f create-pod.yaml\npod/configmap-test-pod created\n[root@test-64626 ~]# kubectl get pods\nNAME                 READY   STATUS    RESTARTS   AGE\nconfigmap-test-pod   1/1     Running   0          4s\n[root@test-64626 ~]# kubectl exec configmap-test-pod -- env|grep ENV\nENV_VAR_USERNAME=itybku\nENV_VAR_ID=1001\n</code></pre>"},{"location":"kubernetes/configmap/#2configmap","title":"\u73af\u5883\u53d8\u91cf\u65b9\u5f0f\u5f15\u7528\u65b9\u5f0f2\uff1aconfigmap\u540d\u79f0\u6620\u5c04","text":"<pre><code>[root@test-64626 ~]# cat create-pod2.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: configmap-test-all\nspec:\n  containers:\n    - name: nginx-container\n      image: nginx:latest\n      envFrom:\n        - configMapRef:\n           name: myconfigmap\n  restartPolicy: Never\n[root@test-64626 ~]#\n[root@test-64626 ~]# kubectl create -f create-pod2.yaml\npod/configmap-test-all created\n[root@test-64626 ~]# kubectl exec configmap-test-all -- env|grep ENV\n[root@test-64626 ~]# kubectl exec configmap-test-all -- env|grep user\nuser.id=1001\nuser.name=itybku\n</code></pre> <p>\u6ce8\u610f\uff0c\u5728\u4f7f\u7528configmap\u540d\u6620\u5c04\u65b9\u5f0f\uff0c\u4e0d\u5efa\u8bae\u4ee5user.id\u3001user.name\u8fd9\u6837\u7684\u65b9\u5f0f\u547d\u540d\u53d8\u91cf\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u53d8\u91cf\u65e0\u6cd5\u6b63\u5e38\u901a\u8fc7<code>echo $\u53d8\u91cf\u540d</code> \u7684\u65b9\u5f0f\u8fdb\u884c\u8f93\u51fa\uff0c\u56e0\u4e3a\u8fd9\u4e0d\u7b26\u5408shell\u89c4\u8303\uff0c\u91cc\u9762\u5305\u542b\u4e86\u7279\u6b8a\u7b26\u53f7\u70b9\u3002\u53ef\u4ee5\u6539\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u547d\u540d\u53d8\u91cf\uff1a</p> <pre><code>[root@test-64626 ~]# kubectl create configmap myconfigmap --from-literal=Name=itybku --from-literal=Id=1001 \n</code></pre>"},{"location":"kubernetes/k8s-hpa/","title":"pod\u6c34\u5e73\u6269\u5c55 hpa","text":"<p>\u4f7f\u7528kubectl scale \u547d\u4ee4\u53ef\u4ee5\u6765\u5b9e\u73b0 Pod \u7684\u6269\u7f29\u5bb9\u529f\u80fd\uff0c\u4f46\u662f\u8fd9\u4e2a\u6bd5\u7adf\u662f\u5b8c\u5168\u624b\u52a8\u64cd\u4f5c\u7684\uff0c\u901a\u8fc7 kubectl autoscale \u547d\u4ee4\u6765\u521b\u5efa\u4e00\u4e2a HPA \u8d44\u6e90\u5bf9\u8c61\uff0cHPA Controller\u9ed8\u8ba430s\u8f6e\u8be2\u4e00\u6b21\uff08\u53ef\u901a\u8fc7 kube-controller-manager \u7684--horizontal-pod-autoscaler-sync-period \u53c2\u6570\u8fdb\u884c\u8bbe\u7f6e\uff09\u3002</p>"},{"location":"kubernetes/k8s-hpa/#metrics-server","title":"Metrics Server","text":"<p>\u5728 HPA \u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u9700\u8981 Heapster \u63d0\u4f9b CPU \u548c\u5185\u5b58\u6307\u6807\uff0c\u5728 HPA v2 \u8fc7\u540e\u5c31\u9700\u8981\u5b89\u88c5 Metrcis Server \u4e86\uff0cMetrics Server \u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684 Kubernetes API \u628a\u76d1\u63a7\u6570\u636e\u66b4\u9732\u51fa\u6765\uff0c\u6709\u4e86 Metrics Server \u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684 Kubernetes API \u6765\u8bbf\u95ee\u6211\u4eec\u60f3\u8981\u83b7\u53d6\u7684\u76d1\u63a7\u6570\u636e\u4e86\uff1a</p> <p><code>https://10.96.0.1/apis/metrics.k8s.io/v1beta1/namespaces/&lt;namespace-name&gt;/pods/&lt;pod-name&gt;</code></p> <p>\u5f53\u6211\u4eec\u8bbf\u95ee\u4e0a\u9762\u7684 API \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u53d6\u5230\u8be5 Pod \u7684\u8d44\u6e90\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u5176\u5b9e\u662f\u6765\u81ea\u4e8e kubelet \u7684 Summary API \u91c7\u96c6\u800c\u6765\u7684\u3002\u4e0d\u8fc7\u9700\u8981\u8bf4\u660e\u7684\u662f\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684 API \u6765\u83b7\u53d6\u8d44\u6e90\u76d1\u63a7\u6570\u636e\uff0c\u5e76\u4e0d\u662f\u56e0\u4e3a Metrics Server \u5c31\u662f APIServer \u7684\u4e00\u90e8\u5206\uff0c\u800c\u662f\u901a\u8fc7 Kubernetes \u63d0\u4f9b\u7684 Aggregator \u6c47\u805a\u63d2\u4ef6\u6765\u5b9e\u73b0\u7684\uff0c\u662f\u72ec\u7acb\u4e8e APIServer \u4e4b\u5916\u8fd0\u884c\u7684\u3002</p> <p> <pre><code>[root@testcce-47617-dk54v ~]#  kubectl get --raw \"/apis/metrics.k8s.io/v1beta1/nodes\"\n{\"kind\":\"NodeMetricsList\",\"apiVersion\":\"metrics.k8s.io/v1beta1\",\"metadata\":{\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes\"},\"items\":[{\"metadata\":{\"name\":\"192.168.0.111\",\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes/192.168.0.111\",\"creationTimestamp\":\"2022-04-07T03:17:11Z\"},\"timestamp\":\"2022-04-07T03:17:04Z\",\"window\":\"30s\",\"usage\":{\"cpu\":\"144172468n\",\"memory\":\"1413452Ki\"}},{\"metadata\":{\"name\":\"192.168.0.114\",\"selfLink\":\"/apis/metrics.k8s.io/v1beta1/nodes/192.168.0.114\",\"creationTimestamp\":\"2022-04-07T03:17:11Z\"},\"timestamp\":\"2022-04-07T03:16:59Z\",\"window\":\"30s\",\"usage\":{\"cpu\":\"82688241n\",\"memory\":\"1412200Ki\"}}]}\nYou have new mail in /var/spool/mail/root\n[root@testcce-47617-dk54v ~]# kubectl top nodes\nNAME            CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%\n192.168.0.111   145m         1%     1380Mi          10%\n192.168.0.114   83m          1%     1379Mi          10%\n</code></pre></p> <p>\u53ef\u4ee5\u901a\u8fc7 kubectl top \u547d\u4ee4\u6765\u83b7\u53d6\u5230\u8d44\u6e90\u6570\u636e\u4e86\uff0c\u8bc1\u660e Metrics Server \u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u4e86\u3002</p>"},{"location":"kubernetes/k8s-hpa/#cpu-hpa","title":"\u57fa\u4e8e CPU \u7684HPA","text":"<p>\u7528 Deployment \u6765\u521b\u5efa\u4e00\u4e2a Nginx Pod\uff0c\u7136\u540e\u5229\u7528 HPA \u6765\u8fdb\u884c\u81ea\u52a8\u6269\u7f29\u5bb9\u3002\u8d44\u6e90\u6e05\u5355\u5982\u4e0b\u6240\u793a\uff1a\uff08hpa-demo.yaml\uff09</p> <p><pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: hpa-demo\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx\n        ports:\n        - containerPort: 80\n</code></pre> \u7136\u540e\u76f4\u63a5\u521b\u5efa Deployment\uff1a</p> <p><pre><code>$ kubectl apply -f hpa-demo.yaml\ndeployment.apps/hpa-demo created\n$ kubectl get pods -l app=nginx\nNAME                        READY   STATUS    RESTARTS   AGE\nhpa-demo-85ff79dd56-pz8th   1/1     Running   0          21s\n</code></pre> \u73b0\u5728\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a HPA \u8d44\u6e90\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528kubectl autoscale\u547d\u4ee4\u6765\u521b\u5efa\uff1a</p> <pre><code>$ kubectl autoscale deployment hpa-demo --cpu-percent=10 --min=1 --max=10\nhorizontalpodautoscaler.autoscaling/hpa-demo autoscaled\n$ kubectl get hpa\nNAME       REFERENCE             TARGETS         MINPODS   MAXPODS   REPLICAS   AGE\nhpa-demo   Deployment/hpa-demo   &lt;unknown&gt;/10%   1         10        1          16s\n</code></pre> <p>\u6b64\u547d\u4ee4\u521b\u5efa\u4e86\u4e00\u4e2a\u5173\u8054\u8d44\u6e90 hpa-demo \u7684 HPA\uff0c\u6700\u5c0f\u7684 Pod \u526f\u672c\u6570\u4e3a1\uff0c\u6700\u5927\u4e3a10\u3002HPA \u4f1a\u6839\u636e\u8bbe\u5b9a\u7684 cpu \u4f7f\u7528\u7387\uff0810%\uff09\u52a8\u6001\u7684\u589e\u52a0\u6216\u8005\u51cf\u5c11 Pod \u6570\u91cf\u3002</p> <p>\u5f53\u7136\u6211\u4eec\u4f9d\u7136\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa YAML \u6587\u4ef6\u7684\u5f62\u5f0f\u6765\u521b\u5efa HPA \u8d44\u6e90\u5bf9\u8c61\u3002\u5982\u679c\u6211\u4eec\u4e0d\u77e5\u9053\u600e\u4e48\u7f16\u5199\u7684\u8bdd\uff0c\u53ef\u4ee5\u67e5\u770b\u4e0a\u9762\u547d\u4ee4\u884c\u521b\u5efa\u7684HPA\u7684YAML\u6587\u4ef6\uff1a</p> <pre><code>$ kubectl get hpa hpa-demo -o yaml\napiVersion: autoscaling/v1\nkind: HorizontalPodAutoscaler\nmetadata:\n  annotations:\n    autoscaling.alpha.kubernetes.io/conditions: '[{\"type\":\"AbleToScale\",\"status\":\"True\",\"lastTransitionTime\":\"2019-11-19T09:15:12Z\",\"reason\":\"SucceededGetScale\",\"message\":\"the\n      HPA controller was able to get the target''s current scale\"},{\"type\":\"ScalingActive\",\"status\":\"False\",\"lastTransitionTime\":\"2019-11-19T09:15:12Z\",\"reason\":\"FailedGetResourceMetric\",\"message\":\"the\n      HPA was unable to compute the replica count: missing request for cpu\"}]'\n  creationTimestamp: \"2019-11-19T09:14:56Z\"\n  name: hpa-demo\n  namespace: default\n  resourceVersion: \"3094084\"\n  selfLink: /apis/autoscaling/v1/namespaces/default/horizontalpodautoscalers/hpa-demo\n  uid: b84d79f1-75b0-46e0-95b5-4cbe3509233b\nspec:\n  maxReplicas: 10\n  minReplicas: 1\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: hpa-demo\n  targetCPUUtilizationPercentage: 10\nstatus:\n  currentReplicas: 1\n  desiredReplicas: 0\n</code></pre> <p>\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4e0a\u9762\u7684 YAML \u6587\u4ef6\u5c31\u53ef\u4ee5\u81ea\u5df1\u6765\u521b\u5efa\u4e00\u4e2a\u57fa\u4e8e YAML \u7684 HPA \u63cf\u8ff0\u6587\u4ef6\u4e86\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u4e0a\u9762\u4fe1\u606f\u91cc\u9762\u51fa\u73b0\u4e86\u4e00\u4e9b Fail \u4fe1\u606f\uff0c\u6211\u4eec\u6765\u67e5\u770b\u4e0b\u8fd9\u4e2a HPA \u5bf9\u8c61\u7684\u4fe1\u606f\uff1a <pre><code>$ kubectl describe hpa hpa-demo\nName:                                                  hpa-demo\nNamespace:                                             default\nLabels:                                                &lt;none&gt;\nAnnotations:                                           &lt;none&gt;\nCreationTimestamp:                                     Tue, 19 Nov 2019 17:14:56 +0800\nReference:                                             Deployment/hpa-demo\nMetrics:                                               ( current / target )\n  resource cpu on pods  (as a percentage of request):  &lt;unknown&gt; / 10%\nMin replicas:                                          1\nMax replicas:                                          10\nDeployment pods:                                       1 current / 0 desired\nConditions:\n  Type           Status  Reason                   Message\n  ----           ------  ------                   -------\n  AbleToScale    True    SucceededGetScale        the HPA controller was able to get the target's current scale\n  ScalingActive  False   FailedGetResourceMetric  the HPA was unable to compute the replica count: missing request for cpu\nEvents:\n  Type     Reason                        Age                From                       Message\n  ----     ------                        ----               ----                       -------\n  Warning  FailedGetResourceMetric       14s (x4 over 60s)  horizontal-pod-autoscaler  missing request for cpu\n  Warning  FailedComputeMetricsReplicas  14s (x4 over 60s)  horizontal-pod-autoscaler  invalid metrics (1 invalid out of 1), first error is: failed to get cpu utilization: missing request for cpu\n</code></pre></p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u4e8b\u4ef6\u4fe1\u606f\u91cc\u9762\u51fa\u73b0\u4e86 failed to get cpu utilization: missing request for cpu \u8fd9\u6837\u7684\u9519\u8bef\u4fe1\u606f\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u4e0a\u9762\u521b\u5efa\u7684 Pod \u5bf9\u8c61\u6ca1\u6709\u6dfb\u52a0 request \u8d44\u6e90\u58f0\u660e\uff0c\u8fd9\u6837\u5bfc\u81f4 HPA \u8bfb\u53d6\u4e0d\u5230 CPU \u6307\u6807\u4fe1\u606f\uff0c\u6240\u4ee5\u5982\u679c\u8981\u60f3\u8ba9 HPA \u751f\u6548\uff0c\u5bf9\u5e94\u7684 Pod \u8d44\u6e90\u5fc5\u987b\u6dfb\u52a0 requests \u8d44\u6e90\u58f0\u660e\uff0c\u66f4\u65b0\u6211\u4eec\u7684\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\uff1a <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: hpa-demo\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx\n        ports:\n        - containerPort: 80\n        resources:\n          requests:\n            memory: 50Mi\n            cpu: 50m\n</code></pre></p> <p>\u7136\u540e\u91cd\u65b0\u66f4\u65b0 Deployment\uff0c\u91cd\u65b0\u521b\u5efa HPA \u5bf9\u8c61\uff1a</p> <pre><code>$ kubectl apply -f hpa.yaml \ndeployment.apps/hpa-demo configured\n$ kubectl get pods -o wide -l app=nginx\nNAME                        READY   STATUS    RESTARTS   AGE     IP            NODE         NOMINATED NODE   READINESS GATES\nhpa-demo-69968bb59f-twtdp   1/1     Running   0          4m11s   10.244.4.97   ydzs-node4   &lt;none&gt;           &lt;none&gt;\n$ kubectl delete hpa hpa-demo\nhorizontalpodautoscaler.autoscaling \"hpa-demo\" deleted\n$ kubectl autoscale deployment hpa-demo --cpu-percent=10 --min=1 --max=10\nhorizontalpodautoscaler.autoscaling/hpa-demo autoscaled\n$ kubectl describe hpa hpa-demo                                          \nName:                                                  hpa-demo\nNamespace:                                             default\nLabels:                                                &lt;none&gt;\nAnnotations:                                           &lt;none&gt;\nCreationTimestamp:                                     Tue, 19 Nov 2019 17:23:49 +0800\nReference:                                             Deployment/hpa-demo\nMetrics:                                               ( current / target )\n  resource cpu on pods  (as a percentage of request):  0% (0) / 10%\nMin replicas:                                          1\nMax replicas:                                          10\nDeployment pods:                                       1 current / 1 desired\nConditions:\n  Type            Status  Reason               Message\n  ----            ------  ------               -------\n  AbleToScale     True    ScaleDownStabilized  recent recommendations were higher than current one, applying the highest recent recommendation\n  ScalingActive   True    ValidMetricFound     the HPA was able to successfully calculate a replica count from cpu resource utilization (percentage of request)\n  ScalingLimited  False   DesiredWithinRange   the desired count is within the acceptable range\nEvents:           &lt;none&gt;\n$ kubectl get hpa                                                        \nNAME       REFERENCE             TARGETS   MINPODS   MAXPODS   REPLICAS   AGE\nhpa-demo   Deployment/hpa-demo   0%/10%    1         10        1          52s\n</code></pre> <p>\u73b0\u5728\u53ef\u4ee5\u770b\u5230 HPA \u8d44\u6e90\u5bf9\u8c61\u5df2\u7ecf\u6b63\u5e38\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u6765\u589e\u5927\u8d1f\u8f7d\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a busybox \u7684 Pod\uff0c\u5e76\u4e14\u5faa\u73af\u8bbf\u95ee\u4e0a\u9762\u521b\u5efa\u7684 Pod\uff1a</p> <pre><code>$ kubectl run -it --image busybox test-hpa --restart=Never --rm /bin/sh\nIf you don't see a command prompt, try pressing enter.\n/ # while true; do wget -q -O- http://10.244.4.97; done\n</code></pre> <p>\u53e6\u5f00\u4e00\u4e2a\u7a97\u53e3\uff0c\u67e5\u770b\uff1a</p> <pre><code>$  kubectl get hpa\nNAME       REFERENCE             TARGETS    MINPODS   MAXPODS   REPLICAS   AGE\nhpa-demo   Deployment/hpa-demo   338%/10%   1         10        1          5m15s\n$ kubectl get pods -l app=nginx --watch \nNAME                        READY   STATUS              RESTARTS   AGE\nhpa-demo-69968bb59f-8hjnn   1/1     Running             0          22s\nhpa-demo-69968bb59f-9ss9f   1/1     Running             0          22s\nhpa-demo-69968bb59f-bllsd   1/1     Running             0          22s\nhpa-demo-69968bb59f-lnh8k   1/1     Running             0          37s\nhpa-demo-69968bb59f-r8zfh   1/1     Running             0          22s\nhpa-demo-69968bb59f-twtdp   1/1     Running             0          6m43s\nhpa-demo-69968bb59f-w792g   1/1     Running             0          37s\nhpa-demo-69968bb59f-zlxkp   1/1     Running             0          37s\nhpa-demo-69968bb59f-znp6q   0/1     ContainerCreating   0          6s\nhpa-demo-69968bb59f-ztnvx   1/1     Running             0          6s\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u81ea\u52a8\u62c9\u8d77\u4e86\u5f88\u591a\u65b0\u7684 Pod\uff0c\u6700\u540e\u5b9a\u683c\u5728\u4e86\u6211\u4eec\u4e0a\u9762\u8bbe\u7f6e\u7684 10 \u4e2a Pod\uff0c\u540c\u65f6\u67e5\u770b\u8d44\u6e90 hpa-demo \u7684\u526f\u672c\u6570\u91cf\uff0c\u526f\u672c\u6570\u91cf\u5df2\u7ecf\u4ece\u539f\u6765\u76841\u53d8\u6210\u4e8610\u4e2a\uff1a</p> <pre><code>$ kubectl get deployment hpa-demo\nNAME       READY   UP-TO-DATE   AVAILABLE   AGE\nhpa-demo   10/10   10           10          17m\n</code></pre> <p>\u67e5\u770b HPA \u8d44\u6e90\u7684\u5bf9\u8c61\u4e86\u89e3\u5de5\u4f5c\u8fc7\u7a0b\uff1a</p> <pre><code>$ kubectl describe hpa hpa-demo\nName:                                                  hpa-demo\nNamespace:                                             default\nLabels:                                                &lt;none&gt;\nAnnotations:                                           &lt;none&gt;\nCreationTimestamp:                                     Tue, 19 Nov 2019 17:23:49 +0800\nReference:                                             Deployment/hpa-demo\nMetrics:                                               ( current / target )\n  resource cpu on pods  (as a percentage of request):  0% (0) / 10%\nMin replicas:                                          1\nMax replicas:                                          10\nDeployment pods:                                       10 current / 10 desired\nConditions:\n  Type            Status  Reason               Message\n  ----            ------  ------               -------\n  AbleToScale     True    ScaleDownStabilized  recent recommendations were higher than current one, applying the highest recent recommendation\n  ScalingActive   True    ValidMetricFound     the HPA was able to successfully calculate a replica count from cpu resource utilization (percentage of request)\n  ScalingLimited  True    TooManyReplicas      the desired replica count is more than the maximum replica count\nEvents:\n  Type    Reason             Age    From                       Message\n  ----    ------             ----   ----                       -------\n  Normal  SuccessfulRescale  5m45s  horizontal-pod-autoscaler  New size: 4; reason: cpu resource utilization (percentage of request) above target\n  Normal  SuccessfulRescale  5m30s  horizontal-pod-autoscaler  New size: 8; reason: cpu resource utilization (percentage of request) above target\n  Normal  SuccessfulRescale  5m14s  horizontal-pod-autoscaler  New size: 10; reason: cpu resource utilization (percentage of request) above target\n</code></pre> <p>\u540c\u6837\u7684\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u6765\u5173\u6389 busybox \u6765\u51cf\u5c11\u8d1f\u8f7d\uff0c\u7136\u540e\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u89c2\u5bdf\u4e0b HPA \u548c Deployment \u5bf9\u8c61\uff1a</p> <pre><code>$ kubectl get hpa\nNAME       REFERENCE             TARGETS   MINPODS   MAXPODS   REPLICAS   AGE\nhpa-demo   Deployment/hpa-demo   0%/10%    1         10        1          14m\n$ kubectl get deployment hpa-demo\nNAME       READY   UP-TO-DATE   AVAILABLE   AGE\nhpa-demo   1/1     1            1           24m\n</code></pre> <p>\u4ece Kubernetes v1.12 \u7248\u672c\u5f00\u59cb\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e kube-controller-manager \u7ec4\u4ef6\u7684--horizontal-pod-autoscaler-downscale-stabilization \u53c2\u6570\u6765\u8bbe\u7f6e\u4e00\u4e2a\u6301\u7eed\u65f6\u95f4\uff0c\u7528\u4e8e\u6307\u5b9a\u5728\u5f53\u524d\u64cd\u4f5c\u5b8c\u6210\u540e\uff0cHPA \u5fc5\u987b\u7b49\u5f85\u591a\u957f\u65f6\u95f4\u624d\u80fd\u6267\u884c\u53e6\u4e00\u6b21\u7f29\u653e\u64cd\u4f5c\u3002\u9ed8\u8ba4\u4e3a5\u5206\u949f\uff0c\u4e5f\u5c31\u662f\u9ed8\u8ba4\u9700\u8981\u7b49\u5f855\u5206\u949f\u540e\u624d\u4f1a\u5f00\u59cb\u81ea\u52a8\u7f29\u653e\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\u526f\u672c\u6570\u91cf\u5df2\u7ecf\u7531 10 \u53d8\u4e3a 1\uff0c\u5f53\u524d\u6211\u4eec\u53ea\u662f\u6f14\u793a\u4e86 CPU \u4f7f\u7528\u7387\u8fd9\u4e00\u4e2a\u6307\u6807\uff0c\u5728\u540e\u9762\u7684\u8bfe\u7a0b\u4e2d\u6211\u4eec\u8fd8\u4f1a\u5b66\u4e60\u5230\u6839\u636e\u81ea\u5b9a\u4e49\u7684\u76d1\u63a7\u6307\u6807\u6765\u81ea\u52a8\u5bf9 Pod \u8fdb\u884c\u6269\u7f29\u5bb9\u3002</p>"},{"location":"kubernetes/k8s-set-env/","title":"\u914d\u7f6e environment","text":"<p>\u4e3ak8s\u5bb9\u5668\u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u5728\u5b98\u65b9\u6587\u6863\u4e2d\u6709\u76f8\u5173\u8bf4\u660e\u3002\u672c\u7bc7\u5c31\u662f\u57fa\u4e8e\u539f\u5185\u5bb9\u7684\u7406\u89e3\u518d\u52a0\u5de5\u3002\u8fd9\u91cc\u4f7f\u7528\u534e\u4e3aCCE\u96c6\u7fa4\u6211\u5df2\u51c6\u5907\u597d\u4e86k8s\u73af\u5883\u3002</p>"},{"location":"kubernetes/k8s-set-env/#_1","title":"\u4e00\u3001\u4e3a\u5bb9\u5668\u8bbe\u7f6e\u4e00\u4e2a\u73af\u5883\u53d8\u91cf","text":"<p>\u521b\u5efa Pod \u65f6\uff0c\u53ef\u4ee5\u4e3a\u5176\u4e0b\u7684\u5bb9\u5668\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u7684 env \u6216\u8005 envFrom \u5b57\u6bb5\u6765\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002</p> <p>\u57fa\u4e8e\u4ee5\u4e0byaml\u6587\u4ef6\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2apod <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: envar-demo\n  labels:\n    purpose: demonstrate-envars\nspec:\n  containers:\n  - name: envar-demo-container\n    image: gcr.io/google-samples/node-hello:1.0\n    env:\n    - name: DEMO_GREETING\n      value: \"Hello from the environment\"\n    - name: DEMO_FAREWELL\n      value: \"Such a sweet sorrow\"\n</code></pre></p> <p>\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>kubectl apply -f https://k8s.io/examples/pods/inject/envars.yaml</code>\u547d\u4ee4\u76f4\u63a5\u521b\u5efa\u3002 pod\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7printenv\u547d\u4ee4\u6253\u5370\u8f93\u51fa\uff1a</p> <pre><code>[root@testcce-38939 ~]# kubectl exec envar-demo -- printenv\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nHOSTNAME=envar-demo\nDEMO_GREETING=Hello from the environment\nDEMO_FAREWELL=Such a sweet sorrow\nKUBERNETES_SERVICE_PORT_HTTPS=443\nKUBERNETES_PORT=tcp://10.247.0.1:443\nKUBERNETES_PORT_443_TCP=tcp://10.247.0.1:443\nKUBERNETES_PORT_443_TCP_PROTO=tcp\nKUBERNETES_PORT_443_TCP_PORT=443\nKUBERNETES_PORT_443_TCP_ADDR=10.247.0.1\nKUBERNETES_SERVICE_HOST=10.247.0.1\nKUBERNETES_SERVICE_PORT=443\nPAAS_POD_ID=460dedcc-d764-4042-afae-75f50df5cce4\nNPM_CONFIG_LOGLEVEL=info\nNODE_VERSION=4.4.2\nHOME=/root\n</code></pre> <p>\u6ce8\uff1a\u5982\u679cDockerfile\u4e2d\u914d\u7f6e\u7684\u53d8\u91cf\u548ck8s yaml\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684\u53d8\u91cf\u91cd\u53e0\uff0c\u5e76\u4e14\u8d4b\u503c\u4e0d\u540c\uff0c\u901a\u8fc7Dockerfile\u7684 env \u6216 envFrom \u5b57\u6bb5\u8bbe\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u5c06\u8986\u76d6\u5bb9\u5668\u955c\u50cf\u4e2d\u6307\u5b9a\u7684\u6240\u6709\u73af\u5883\u53d8\u91cf\u3002</p>"},{"location":"kubernetes/k8s-set-env/#_2","title":"\u4e8c\u3001\u73af\u5883\u53d8\u91cf\u7684\u4f7f\u7528","text":"<p>\u73af\u5883\u53d8\u91cf\u7684\u914d\u7f6e\u662f\u4e3a\u4e86\u4f7f\u7528\uff0c\u4e0d\u7136\u914d\u7f6e\u4e5f\u6ca1\u6709\u7528\uff0c\u5176\u4e3b\u8981\u7528\u4e8epod\u542f\u52a8\u65f6\u7684\u4f20\u53c2\u3002\u6bd4\u5982\u5f00\u53d1\u73af\u5883\u3001\u751f\u4ea7\u73af\u5883\u4f20\u5165\u7684\u53c2\u6570\u5c31\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u5bf9\u5e94pod\u542f\u52a8\u65f6\uff0c\u5185\u90e8\u6267\u884c\u7684\u811a\u672c\u52a8\u4f5c\u4e5f\u6709\u533a\u522b\u3002\u8fd9\u91cc\u6765\u4e24\u4e2a\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\u7684\u793a\u4f8b\u3002</p>"},{"location":"kubernetes/k8s-set-env/#1echo","title":"\u793a\u4f8b1\uff1aecho\u8f93\u51fa","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: print-greeting\nspec:\n  containers:\n  - name: env-print-demo\n    image: bash\n    env:\n    - name: GREETING\n      value: \"Warm greetings to\"\n    - name: HONORIFIC\n      value: \"The Most Honorable\"\n    - name: NAME\n      value: \"Kubernetes\"\n    command: [\"echo\"]\n    args: [\"$(GREETING) $(HONORIFIC) $(NAME)\"]\n</code></pre> <p>\u4ee5\u4e0a\u8fd9\u4e2apod\u6267\u884c\u540e\uff0c\u4f1a\u6267\u884c\u547d\u4ee4<code>echo Warm greetings to The Most Honorable Kubernetes</code>\u3002</p>"},{"location":"kubernetes/k8s-set-env/#2mysql","title":"\u793a\u4f8b2\uff1amysql\u670d\u52a1\u5bc6\u7801\u8bbe\u7f6e","text":"<p>\u8fd9\u4e2a\u4e0d\u662f\u5b98\u65b9\u6587\u6863\u793a\u4f8b\uff0c\u8fd9\u4e2a\u662f\u5728CCE k8s\u96c6\u7fa4\u4e0a\u521b\u5efamariadb\u5e94\u7528\u7684StatefulSet\u6709\u72b6\u6001\u5e94\u7528\u7684\u793a\u4f8b\u3002\u8fd9\u91cc\u91cd\u70b9\u5173\u6ce8\u4e0benv\u90e8\u5206\uff0c\u901a\u8fc7env\u90e8\u5206\uff0c\u6211\u4eec\u4f20\u4e86\u4e00\u4e2a\u53d8\u91cf<code>MARIADB_ROOT_PASSWORD</code>\uff0c\u4e5f\u5c31\u662f\u6570\u636e\u5e93\u7684root\u5bc6\u7801\u3002</p> <p><pre><code>[root@testcce-38939 ~]# kubectl apply -f mysql-statefulset.yaml\nstatefulset.apps/mariadb created\n[root@testcce-38939 ~]# cat mysql-statefulset.yaml\napiVersion: v1\nitems:\n- apiVersion: apps/v1\n  kind: StatefulSet\n  metadata:\n    annotations:\n      description: \"\"\n    generation: 1\n    labels:\n      appgroup: \"\"\n      version: v1\n    name: mariadb\n    namespace: default\n  spec:\n    podManagementPolicy: OrderedReady\n    replicas: 1\n    revisionHistoryLimit: 10\n    selector:\n      matchLabels:\n        app: mariadb\n        version: v1\n    serviceName: mariadb-headless\n    template:\n      metadata:\n        labels:\n          app: mariadb\n          version: v1\n      spec:\n        affinity: {}\n        containers:\n        - env:\n          - name: MARIADB_ROOT_PASSWORD\n            value: test@123\n          image: mariadb:latest\n          imagePullPolicy: Always\n          name: container-0\n          resources:\n            limits:\n              cpu: \"2\"\n              memory: 2Gi\n            requests:\n              cpu: 250m\n              memory: 512Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n          volumeMounts:\n          - mountPath: /var/lib/mysql\n            name: pvc-mariadb-storage\n        dnsConfig:\n          options:\n          - name: timeout\n            value: \"\"\n          - name: ndots\n            value: \"5\"\n          - name: single-request-reopen\n        dnsPolicy: ClusterFirst\n        imagePullSecrets:\n        - name: default-secret\n        - name: default-secret\n        restartPolicy: Always\n        schedulerName: default-scheduler\n        securityContext: {}\n        terminationGracePeriodSeconds: 30\n        tolerations:\n        - effect: NoExecute\n          key: node.kubernetes.io/not-ready\n          operator: Exists\n          tolerationSeconds: 300\n        - effect: NoExecute\n          key: node.kubernetes.io/unreachable\n          operator: Exists\n          tolerationSeconds: 300\n    updateStrategy:\n      type: RollingUpdate\n    volumeClaimTemplates:\n    - apiVersion: v1\n      kind: PersistentVolumeClaim\n      metadata:\n        annotations:\n          everest.io/disk-volume-type: SAS\n        creationTimestamp: null\n        name: pvc-mariadb-storage\n        namespace: default\n      spec:\n        accessModes:\n        - ReadWriteOnce\n        resources:\n          requests:\n            storage: 10Gi\n        storageClassName: csi-disk\n        volumeMode: Filesystem\nkind: List\n</code></pre> \u6ce8\uff1a 1. \u8fd9\u91cc\u7684\u8bbe\u7f6e\u6bd4\u8f83\u591a\uff0c\u56e0\u4e3a\u6d89\u53ca\u5230\u6570\u636e\u6301\u4e45\u5316\u4fdd\u5b58\u7684\u95ee\u9898\uff0c\u8fd9\u91cc\u914d\u7f6e\u4e86PVC\u548cPV\uff0c\u5982\u679c\u4ec5\u51fa\u4e8e\u6d4b\u8bd5\u76ee\u7684\uff0c\u8fd9\u91cc\u90e8\u5206\u53ef\u4ee5\u7701\u7565\u3002 2. <code>everest.io/disk-volume-type</code> \u8fd9\u4e2a\u7c7b\u578b\u662f\u534e\u4e3a\u4e91CCE\u91cc\u7279\u6709\u7684\uff0c\u6bcf\u5bb6\u4e91\u5382\u5546\u5bf9\u5b58\u50a8\u90e8\u5206\u7684\u63a5\u53e3\u662f\u4e0d\u76f8\u540c\u7684\uff0c\u5728\u4e0d\u540c\u7684\u4e91\u5382\u5546\u4e0a\u8981\u6839\u636e\u4e91\u5382\u5546\u516c\u5e03\u7684\u5b58\u50a8\u63a5\u53e3\u60c5\u51b5\u8fdb\u884c\u4fee\u6539\u8be5\u9879\u548c <code>storageClassName</code> \u9879\u3002</p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u521b\u5efa\u7684\u5bc6\u7801\u53ef\u4ee5\u8fde\u63a5\u6570\u636e\u5e93\u770b\u4e0b\uff1a</p> <p></p>"},{"location":"kubernetes/kubectl/","title":"kubectl \u547d\u4ee4\u7684\u4f7f\u7528","text":"<p>k8s\u547d\u4ee4\u81ea\u52a8\u8865\u5168:</p> <pre><code>yum install -y bash-completion\nsource /usr/share/bash-completion/bash_completion\nsource &lt;(kubectl completion bash)\necho \"source &lt;(kubectl completion bash)\" &gt;&gt; ~/.bashrc\n</code></pre> <p>\u5e94\u7528\u90e8\u7f72</p> <pre><code>[root@testcce-26771 ~]# kubectl create deployment web --image=nginx --replicas=1\ndeployment.apps/web created\n\n[root@testcce-26771 ~]# kubectl expose deployment web --port=8080 --target-port=80\nservice/web exposed\n[root@testcce-26771 ~]# kubectl get  svc\nNAME         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE\nkubernetes   ClusterIP   10.247.0.1       &lt;none&gt;        443/TCP    59m\nweb          ClusterIP   10.247.145.241   &lt;none&gt;        8080/TCP   6s\n\n[root@testcce-26771 ~]# kubectl get  svc web -o yaml\napiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: \"2023-09-29T03:43:43Z\"\n  labels:\n    app: web\n  name: web\n  namespace: default\n  resourceVersion: \"15468\"\n  uid: 7e3bd0d8-fc7d-48d6-8ddb-16959c1f791b\nspec:\n  clusterIP: 10.247.145.241\n  clusterIPs:\n  - 10.247.145.241\n  internalTrafficPolicy: Cluster\n  ipFamilies:\n  - IPv4\n  ipFamilyPolicy: SingleStack\n  ports:\n  - port: 8080\n    protocol: TCP\n    targetPort: 80\n  selector:\n    app: web\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n\n[root@testcce-26771 ~]# kubectl exec -it web-8667899c97-r7nmq  -- /bin/bash\n\nroot@web-8667899c97-r7nmq:/# curl 10.247.145.241:8080\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Welcome to nginx!&lt;/title&gt;\n&lt;style&gt;\nhtml { color-scheme: light dark; }\nbody { width: 35em; margin: 0 auto;\nfont-family: Tahoma, Verdana, Arial, sans-serif; }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;\n&lt;p&gt;If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.&lt;/p&gt;\n\n&lt;p&gt;For online documentation and support please refer to\n&lt;a href=\"http://nginx.org/\"&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;\nCommercial support is available at\n&lt;a href=\"http://nginx.com/\"&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"kubernetes/labels/","title":"\u901a\u8fc7Label\u6807\u7b7e\u7ba1\u7406k8s\u8d44\u6e90","text":""},{"location":"kubernetes/labels/#label","title":"\u4e3a\u4ec0\u4e48\u9700\u8981Label","text":"<p>\u5f53\u8d44\u6e90\u53d8\u5f97\u975e\u5e38\u591a\u7684\u65f6\u5019\uff0c\u5982\u4f55\u5206\u7c7b\u7ba1\u7406\u5c31\u975e\u5e38\u91cd\u8981\u4e86\uff0cKubernetes\u63d0\u4f9b\u4e86\u4e00\u79cd\u673a\u5236\u6765\u4e3a\u8d44\u6e90\u5206\u7c7b\uff0c\u90a3\u5c31\u662fLabel\uff08\u6807\u7b7e\uff09\u3002Label\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u662f\u5374\u5f88\u5f3a\u5927\uff0cKubernetes\u4e2d\u51e0\u4e4e\u6240\u6709\u8d44\u6e90\u90fd\u53ef\u4ee5\u7528Label\u6765\u7ec4\u7ec7\u3002Label\u7684\u5177\u4f53\u5f62\u5f0f\u662fkey-value\u7684\u6807\u8bb0\u5bf9\uff0c\u53ef\u4ee5\u5728\u521b\u5efa\u8d44\u6e90\u7684\u65f6\u5019\u8bbe\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u5728\u540e\u671f\u6dfb\u52a0\u548c\u4fee\u6539\u3002</p> <p>\u4ee5Pod\u4e3a\u4f8b\uff0c\u5f53Pod\u53d8\u5f97\u591a\u8d77\u6765\u540e\uff0c\u5c31\u663e\u5f97\u6742\u4e71\u4e14\u96be\u4ee5\u7ba1\u7406\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>Note</p> <ul> <li>\u8fd9\u4e2a\u662f\u4e0d\u662f\u6709\u70b9\u50cf\u5feb\u9012\u548c\u4ed3\u50a8\u4e2d\u5fc3\u3002\u5f53\u4e1c\u897f\u5c11\u7684\u65f6\u5019\u90fd\u597d\u8bf4\uff0c\u4f60\u53ef\u4ee5\u628a\u6240\u6709\u4e1c\u897f\u90fd\u5f80\u4e00\u4e2a\u5c4b\u5b50\u91cc\u653e\uff1b</li> <li>\u5f53\u8d27\u7269\u6216\u5feb\u4ef6\u53d8\u7684\u591a\u7684\u65f6\u5019\uff0c\u9700\u8981\u7ed9\u4e0d\u540c\u7684\u8d27\u7269\u6253\u4e0a\u4e0d\u540c\u7684\u6807\u7b7e\uff0c\u5206\u95e8\u522b\u7c7b\uff0c\u8fd9\u6837\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u6839\u636e\u8d27\u67b6\u53f7\u548c\u8d27\u67b6\u5404\u5c42\u7684\u6807\u53f7\u53d6\u5230\u76f8\u5c31\u597d\u7684\u4e1c\u897f\u3002</li> </ul>"},{"location":"kubernetes/labels/#label_1","title":"label \u7684\u589e\u52a0\u548c\u5220\u9664","text":"<p>\u5206\u522b\u521b\u5efa\u4e00\u4e2apod/deployment\uff0c\u67e5\u770b\u5176\u5bf9\u5e94\u7684labels\u503c\uff0c\u5e76\u901a\u8fc7label\u503c\u8fc7\u6ee4\u5bf9\u5e94\u7684pod</p> <pre><code>[root@testcce-26771 ~]# kubectl run nginx --image=nginx:alpine\npod/nginx created\n[root@testcce-26771 ~]# kubectl create deployment web --image=nginx:alpine\ndeployment.apps/web created\n[root@testcce-26771 ~]# kubectl get pods --show-labels\nNAME                   READY   STATUS    RESTARTS   AGE   LABELS\nnginx                  1/1     Running   0          16s   node-local-dns-injection=injected,run=nginx\nweb-5bf684665b-dzz9l   1/1     Running   0          8s    app=web,node-local-dns-injection=injected,pod-template-hash=5bf684665b\n[root@testcce-26771 ~]# kubectl get pods -l app\nNAME                   READY   STATUS    RESTARTS   AGE\nweb-5bf684665b-dzz9l   1/1     Running   0          47s\n</code></pre>"},{"location":"kubernetes/labels/#label_2","title":"\u6dfb\u52a0Label","text":"<p>Label\u7684\u5f62\u5f0f\u4e3akey-value\u5f62\u5f0f\uff0c\u4f7f\u7528\u975e\u5e38\u7b80\u5355\uff0c\u5982\u4e0b\uff0c\u4e3aPod\u8bbe\u7f6e\u4e86app=nginx\u548cenv=prod\u4e24\u4e2aLabel\u3002</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\n  labels:                     # \u4e3aPod\u8bbe\u7f6e\u4e24\u4e2aLabel    \n    app: nginx    \n    env: prod\nspec:\n  containers:\n  - image: nginx:alpine\n    name: container-0\n    resources:\n      limits:\n        cpu: 100ms\n        memory: 200Mi\n      requests:\n        cpu: 100m\n        memory: 200Mi\n  imagePullSecrets:\n  - name: default-secret\n</code></pre> <p>Pod\u6709\u4e86Label\u540e\uff0c\u5728\u67e5\u8be2Pod\u7684\u65f6\u5019\u5e26\u4e0a--show-labels\u5c31\u53ef\u4ee5\u770b\u5230Pod\u7684Label\u3002</p> <pre><code>$ kubectl get pod --show-labels\nNAME              READY   STATUS    RESTARTS   AGE   LABELS\nnginx             1/1     Running   0          50s   app=nginx,env=prod\n</code></pre> <p>\u8fd8\u53ef\u4ee5\u4f7f\u7528-L\u53ea\u67e5\u8be2\u67d0\u4e9b\u56fa\u5b9a\u7684Label\u3002</p> <pre><code>$ kubectl get pod -L app,env \nNAME              READY   STATUS    RESTARTS   AGE   APP     ENV\nnginx             1/1     Running   0          1m    nginx   prod\n</code></pre> <p>\u5bf9\u5df2\u5b58\u5728\u7684Pod\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528kubectl label\u547d\u4ee4\u76f4\u63a5\u6dfb\u52a0Label\u3002</p> <pre><code>$ kubectl label pod nginx creation_method=manual\npod/nginx labeled\n\n$ kubectl get pod --show-labels\nNAME              READY   STATUS    RESTARTS   AGE   LABELS\nnginx             1/1     Running   0          50s   app=nginx, creation_method=manual,env=prod\n\n\n# \u5217\u51fa\u6240\u6709\u4e0d\u5305\u542b env \u6807\u7b7e\u7684pod,\u65e0\u8bba\u5176\u503c\u5982\u4f55\uff1a\n$ kubectl get pod -L '!env'\n\n# \u5217\u51fa\u6240\u6709\u4e0d\u5305\u542b env!=prod \u6807\u7b7e\u952e\u503c\u7684pod\uff1a\n$ kubectl get pod -l 'env!=prod'\n</code></pre>"},{"location":"kubernetes/labels/#label_3","title":"\u4fee\u6539Label","text":"<p>\u5bf9\u4e8e\u5df2\u5b58\u5728\u7684Label\uff0c\u5982\u679c\u8981\u4fee\u6539\u7684\u8bdd\uff0c\u9700\u8981\u5728\u547d\u4ee4\u4e2d\u5e26\u4e0a--overwrite\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>$ kubectl label pod nginx env=debug --overwrite\npod/nginx labeled\n\n$ kubectl get pod --show-labels\nNAME              READY   STATUS    RESTARTS   AGE   LABELS\nnginx             1/1     Running   0          50s   app=nginx,creation_method=manual,env=debug\n</code></pre>"},{"location":"kubernetes/labels/#label_4","title":"\u5220\u9664Label","text":"<p>\u5bf9\u4e8e\u5df2\u5b58\u5728\u7684Label\uff0c\u5982\u679c\u8981\u5220\u9664\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u5728\u5bf9\u5e94\u7684lable key\u503c\u540e\u9762\u52a0\u4e0a\u51cf\u53f7\u5c31\u53ef\u4ee5\u4e86</p> <pre><code>$ kubectl label pod nginx env-\npod/nginx labeled\n\n$ kubectl get pod --show-labels\nNAME              READY   STATUS    RESTARTS   AGE   LABELS\nnginx             1/1     Running   0          50s   app=nginx,creation_method=manual\n</code></pre> <p>Note</p> <p>Lables\u662f\u53ef\u4ee5\u5728namespace\u3001pod\u3001deployments\u3001statefulsets\u3001service\u3001secrets\u7b49\u51e0\u4e4e\u6240\u6709k8s\u8d44\u6e90\u4e2d\u4f7f\u7528\u7684\u3002</p>"},{"location":"kubernetes/labels/#_1","title":"\u901a\u8fc7\u6807\u7b7e\u7ba1\u7406\u8c03\u5ea6","text":"<p>\u8bbe\u7f6e\u6807\u7b7e\u7684\u4e00\u4e2a\u662f\u4f5c\u7528\u662f\u65b9\u4fbf\u7ba1\u7406\u67e5\u8be2\uff0c\u53e6\u4e00\u4e2a\u4f5c\u7528\u662f\u53ef\u4ee5\u66f4\u597d\u7684\u8fdb\u884c\u7ba1\u7406\u8c03\u5ea6\u3002</p> <pre><code># \u7ed9 node \u8282\u70b9\u8bbe\u7f6elabel\u6807\u7b7e\n[root@testcce-26771 ~]# kubectl get nodes\nNAME           STATUS   ROLES    AGE   VERSION\n192.168.0.26   Ready    &lt;none&gt;   4h    v1.25.3-r0-25.1.23\n192.168.0.35   Ready    &lt;none&gt;   19h   v1.25.3-r0-25.1.23\n[root@testcce-26771 ~]# kubectl label nodes 192.168.0.26 disk-\nnode/192.168.0.26 unlabeled\n[root@testcce-26771 ~]# kubectl get nodes -l disk\nNo resources found\n[root@testcce-26771 ~]# kubectl label nodes 192.168.0.26 disk=ssd\nnode/192.168.0.26 labeled\n[root@testcce-26771 ~]# kubectl get nodes -l disk\nNAME           STATUS   ROLES    AGE    VERSION\n192.168.0.26   Ready    &lt;none&gt;   4h1m   v1.25.3-r0-25.1.23\n\n# \u901a\u8fc7\u7ed9deployement\u66f4\u65b0nodeSelector\u9009\u62e9\u6807\u7b7e\u9009\u62e9\u5bf9\u5e94\u7684node\u8282\u70b9\n[root@testcce-26771 ~]# kubectl get pods  -o wide\nNAME                   READY   STATUS    RESTARTS   AGE   IP            NODE           NOMINATED NODE   READINESS GATES\nnginx                  1/1     Running   0          18m   172.16.0.9    192.168.0.35   &lt;none&gt;           &lt;none&gt;\nweb-7564c4fd95-grvxp   1/1     Running   0          6s    172.16.0.14   192.168.0.35   &lt;none&gt;           &lt;none&gt;\n[root@testcce-26771 ~]# kubectl patch deployments web --type merge -p '{\"spec\":{\"template\":{\"spec\":{\"nodeSelector\":{\"disk\":\"ssd\"}}}}}'\ndeployment.apps/web patched\n[root@testcce-26771 ~]# kubectl get pods  -o wide\nNAME                   READY   STATUS    RESTARTS   AGE   IP             NODE           NOMINATED NODE   READINESS GATES\nnginx                  1/1     Running   0          19m   172.16.0.9     192.168.0.35   &lt;none&gt;           &lt;none&gt;\nweb-7fcb4cc99c-6fgfb   1/1     Running   0          5s    172.16.0.136   192.168.0.26   &lt;none&gt;           &lt;none&gt;\n</code></pre> <p>Note</p> <p>\u6ce8\u610f\u770b\u9ad8\u4eae\u7684\u4e09\u884c\u7684\u53d8\u5316\uff0c\u8fd9\u91cc\u901a\u8fc7\u66f4\u65b0\u9009\u62e9\u76f8\u5e94\u7684node\u6807\u7b7e\uff0c\u5f3a\u5236deployments\u8fd0\u884c\u7684 pod \u5728\u7279\u5b9a\u7684\u8282\u70b9\u4e0a\u8fd0\u884c\u3002</p> <p>\u4e0a\u9762kubectl patch\u547d\u4ee4\u6267\u884c\u7684\u5185\u5bb9\u548c\u66f4\u65b0\u4ee5\u4e0byaml\u6587\u4ef6\u7684\u6548\u679c\u76f8\u540c\uff1a</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name:  web\n  namespace: default\n  labels:\n    app:  web\nspec:\n  selector:\n    matchLabels:\n      app: web\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app:  web\n    spec:\n      containers:\n      - name:  web\n        image:  \"swr.la-north-2.myhuaweicloud.com/hcie/nginx:v1\"\n        ports:\n        - containerPort:  80\n          name:  web\n      imagePullSecrets:\n      - name: default-secret\n      nodeSelector:\n        disk: ssd\n</code></pre>"},{"location":"kubernetes/registry-secret/","title":"\u955c\u50cf\u4ed3 registry \u8ba4\u8bc1","text":""},{"location":"kubernetes/registry-secret/#_1","title":"\u4f7f\u7528\u79c1\u7528\u955c\u50cf\u4ed3\u5e93\u9274\u6743","text":""},{"location":"kubernetes/registry-secret/#_2","title":"\u65b9\u5f0f\u4e00","text":"<p>1.\u767b\u9646\u79c1\u6709\u955c\u50cf\u4ed3\u5e93</p> <p><pre><code>docker login reg.test.com\n\nUsername: admin  \nPassword:\u00a0  \nWARNING! Your password will be stored unencrypted in /root/.docker/config.json.  \nConfigure a credential helper to remove this warning. See  \nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded  \n</code></pre> </p> <p>2.\u767b\u9646\u6210\u529f\u4e4b\u540e\uff0c\u67e5\u770b\u767b\u9646\u914d\u7f6e\u6587\u4ef6\uff0c\u5e76\u8f6c\u7801</p> <pre><code>cat ~/.docker/config.json | base64 -w 0\n</code></pre> <p>\u8bb0\u5f55\u8f6c\u7801\u540e\u7684\u4fe1\u606f</p> <p>3.\u7f16\u8f91secret\u7684yaml\u6587\u4ef6</p> <pre><code>apiVersion: v1  \nkind: Secret  \nmetadata:  \n\u00a0 name: registry-pull-secret  \ndata:  \n\u00a0 .dockerconfigjson: ewoJImF1dGhzIjogewoJCSIxOTIuMTY4LjMxLjYxIjogewoJCQkiYXV0aCI6ICJZV1J0YVc0NlNHRnlZbTl5TVRJek5EVT0iCg6IHsKCQkiVXNlci1BZ2VudCI6ICJEb2NrZXItQ2xpZW50LzE4LjA2LjEtY2UgKGxpbnV4KSIKCX0KfQ==\u00a0 \u00a0#\u8f6c\u7801\u540e\u7684\u4fe1\u606f  \ntype: kubernetes.io/dockerconfigjson\n</code></pre> <p>4.\u5728\u6307\u5b9a\u7684\u547d\u540d\u7a7a\u95f4\u521b\u5efa registry-pull-secret</p> <pre><code>kubectl create -f\u00a0registry-pull-secret.yaml\n</code></pre>"},{"location":"kubernetes/registry-secret/#_3","title":"\u65b9\u5f0f\u4e8c","text":"<p>1.\u4f7f\u7528kubectl\u547d\u4ee4\u521b\u5efasecret\u6587\u4ef6</p> <pre><code>kubectl create secret docker-registry local-registry   \n--docker-server=swr.la-north-2.myhuaweicloud.com \u00a0 #docker \u955c\u50cf\u7684\u670d\u52a1\u5668\u5730\u5740  \n--docker-username=admin   \n--docker-password=******   \n--docker-email=******   \n-n default\n</code></pre> <p>2.kubernetes\u8d44\u6e90\u7684\u5f15\u7528</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"testapp\"\n  namespace: default\n  labels:\n    app: \"testapp\"\nspec:\n  containers:\n  - name: testapp\n    image: \"swr.la-north-2.myhuaweicloud.com/hcie/nginx:v1\"\n    resources:\n      limits:\n        cpu: 200m\n        memory: 500Mi\n      requests:\n        cpu: 100m\n        memory: 20Mi\n    ports:\n    - containerPort:  80\n      name:  http\n  imagePullSecrets:\n  - name: local-registry\n</code></pre> <p>\u5728\u6240\u6709\u547d\u540d\u7a7a\u95f4\u521b\u5efaregistry-pull-secret\u7684\u811a\u672c</p> <pre><code>#!/bin/bash  \nns_list=`kubectl get ns | awk '{print $1}' | grep -v NAME`  \nfor ns in $ns_list;  \ndo  \nkubectl create secret docker-registry imagePullSecret-registry   \n--docker-server=\u670d\u52a1\u5668\u5730\u5740   \n--docker-username=admin   \n--docker-password=******   \n--docker-email=******   \n-n $ns  \ndone;\n</code></pre>"},{"location":"tools/koocli/","title":"koocli","text":""},{"location":"tools/koocli/#_1","title":"\u81ea\u52a8\u5e94\u7b54\u5b89\u88c5","text":"<p>\u5b89\u88c5</p> <pre><code>curl -sSL https://ap-southeast-3-hwcloudcli.obs.ap-southeast-3.myhuaweicloud.com/cli/latest/hcloud_install.sh -o ./hcloud_install.sh &amp;&amp; bash ./hcloud_install.sh -y\n</code></pre> <p>\u521d\u59cb\u5316\u5e76\u8fd0\u884c</p> <pre><code>[root@testcce-26771 ~]# hcloud configure init\nThis will delete all configuration information. Continue? (y/N): y\nStarting initialization. 'Secret Access Key' is anonymized. To obtain the parameter, see 'https://support.huaweicloud.com/intl/en-us/usermanual-hcli/hcli_09.html'.\nAccess Key ID [required]: SNVJ1HU1TQ0DB3RG1PHJ\nSecret Access Key [required]: ****\nSecret Access Key (again): ****\nRegion: la-north-2\n\n********************************************************\n*****                                              *****\n*****          Initialization successful           *****\n*****                                              *****\n********************************************************\n\n[root@testcce-26771 ~]# hcloud ECS NovaListServers\n{\n  \"servers\": [\n    {\n      \"name\": \"testcce-26771\",\n      \"links\": [\n        {\n          \"rel\": \"self\",\n          \"href\": \"https://ecs.la-north-2.myhuaweicloud.com/v2.1/0e0e5cabfa80f2892f17c00390299e63/servers/8d0c9e65-1fc8-45ea-bdc7-9c42467f760b\"\n        },\n        {\n          \"rel\": \"bookmark\",\n          \"href\": \"https://ecs.la-north-2.myhuaweicloud.com/0e0e5cabfa80f2892f17c00390299e63/servers/8d0c9e65-1fc8-45ea-bdc7-9c42467f760b\"\n        }\n      ],\n      \"id\": \"8d0c9e65-1fc8-45ea-bdc7-9c42467f760b\"\n    }\n  ]\n}\n</code></pre> <p>\u81ea\u5b9a\u4e49 Koocli \u8f93\u51fa\u683c\u5f0f \uff0c\u53ef\u4ee5\u8f93\u51fa\u4e3a\u8868\u683c\u683c\u5f0f\uff0c\u540c\u8fdb\u4e5f\u53ef\u4ee5\u901a\u8fc7json\u8fc7\u6ee4\u8f93\u51fa\u67d0\u4e9b\u60f3\u8981\u7684\u5185\u5bb9\u3002</p>"},{"location":"tools/koocli/#docker","title":"\u901a\u8fc7docker\u65b9\u5f0f\u5b89\u88c5\u8fd0\u884c","text":"<p>\u7f16\u5199dockerfile</p> <pre><code>FROM ubuntu:latest\nRUN apt-get update -y &amp;&amp; apt-get install curl -y\n# Install KooCLI with one click.\nRUN curl -sSL https://ap-southeast-3-hwcloudcli.obs.ap-southeast-3.myhuaweicloud.com/cli/latest/hcloud_install.sh -o ./hcloud_install.sh &amp;&amp; bash ./hcloud_install.sh -y\nWORKDIR hcloud\nENTRYPOINT [\"/usr/local/bin/hcloud\"]\n</code></pre> <p>build\u955c\u50cf\u5e76\u8fd0\u884c</p> <pre><code>docker build --no-cache -t hcloudcli .\ndocker run -it -d --name hcloudcli hcloudcli\ndocker run --rm -it hcloudcli ${command}\ndocker run --rm -it -v /root/.hcloud/:/root/.hcloud/ hcloudcli ${command}\nalias hcloud='docker run --rm -it hcloudcli'\n</code></pre>"}]}